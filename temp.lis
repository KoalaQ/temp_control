                        .module temp.c
                        .area text(rom, con, rel)
 0000                   .dbfile temp.c
                        .area vector(rom, abs)
                        .org 12
 000C 0C940000          jmp _int_int2
                        .area text(rom, con, rel)
 0000                   .dbfile temp.c
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\temp.c
 0000                   .dbfunc e int_int2 _int_int2 fV
 0000           ;          cache -> R20,R21
                        .even
 0000           _int_int2::
 0000 1A92              st -y,R1
 0002 2A92              st -y,R2
 0004 3A92              st -y,R3
 0006 4A92              st -y,R4
 0008 5A92              st -y,R5
 000A 0A93              st -y,R16
 000C 1A93              st -y,R17
 000E 2A93              st -y,R18
 0010 3A93              st -y,R19
 0012 8A93              st -y,R24
 0014 9A93              st -y,R25
 0016 AA93              st -y,R26
 0018 EA93              st -y,R30
 001A FA93              st -y,R31
 001C 1FB6              IN R1,63
 001E 1A92              st -y,R1
 0020 4A93              st -y,R20
 0022 5A93              st -y,R21
 0024                   .dbline -1
 0024                   .dbline 16
 0024           ; #include<iom128v.h>
 0024           ; #include "temp.h"
 0024           ; #include "main.h"
 0024           ; #include "eeprom.h"
 0024           ; #include "lcd.h"
 0024           ; #include "max6675.h"
 0024           ; void PID_realize(uint temp_n);
 0024           ; void set_start_real(uint t);
 0024           ; 
 0024           ; //中断1s进入，使用int2。可以使用，但是买的这个DS1307，硬件电路问题不可以使用
 0024           ; //  进行状态变换和参数调整,
 0024           ; /*升温：没1C变化温度更改参数，状态计算
 0024           ; /*恒温：只计算状态
 0024           ; /*****************************/
 0024           ; #pragma interrupt_handler int_int2:4
 0024           ; void int_int2(void){//做温度数据时间增加操作。不能做耗时的操作.中断优先级较高
 0024                   .dbline 17
 0024           ;   uint cache=0;//保存多次使用的数据，局部变量更快
 0024 4427              clr R20
 0026 5527              clr R21
 0028                   .dbline 18
 0028           ;   EIMSK &= 0xFB;//关中断2
 0028 89B7              in R24,0x39
 002A 8B7F              andi R24,251
 002C 89BF              out 0x39,R24
 002E                   .dbline 19
 002E           ;   TIMSK&=0xBF;//关定时器2溢出中断,8位的
 002E 87B7              in R24,0x37
 0030 8F7B              andi R24,191
 0032 87BF              out 0x37,R24
 0034                   .dbline 21
 0034           ;   //第一个
 0034           ;   if(temps[0].flag==1){//运行中
 0034 80910000          lds R24,_temps
 0038 90910100          lds R25,_temps+1
 003C 8130              cpi R24,1
 003E E0E0              ldi R30,0
 0040 9E07              cpc R25,R30
 0042 09F0              breq X8
 0044 F4C0              xjmp L2
 0046           X8:
 0046           X0:
 0046                   .dbline 21
 0046                   .dbline 22
 0046           ;      cache=temps[0].status;//暂存当前状态
 0046 40910A01          lds R20,_temps+266
 004A 50910B01          lds R21,_temps+266+1
 004E                   .dbline 23
 004E           ;      if(temps[0].statusflag==0){//不是第一次进入当前状态
 004E 20901401          lds R2,_temps+276
 0052 30901501          lds R3,_temps+276+1
 0056 2220              tst R2
 0058 09F0              breq X9
 005A 47C0              xjmp L5
 005C           X9:
 005C 3320              tst R3
 005E 09F0              breq X10
 0060 44C0              xjmp L5
 0062           X10:
 0062           X1:
 0062                   .dbline 23
 0062                   .dbline 24
 0062           ;            temps[0].nowtime++;//当前阶段运行时间
 0062 80910E01          lds R24,_temps+270
 0066 90910F01          lds R25,_temps+270+1
 006A 0196              adiw R24,1
 006C 90930F01          sts _temps+270+1,R25
 0070 80930E01          sts _temps+270,R24
 0074                   .dbline 25
 0074           ;               if(temps[0].nowtime>=temps[0].needtime){//当前阶段运行结束进入下一阶段
 0074 20900C01          lds R2,_temps+268
 0078 30900D01          lds R3,_temps+268+1
 007C 8215              cp R24,R2
 007E 9305              cpc R25,R3
 0080 68F0              brlo L9
 0082           X2:
 0082                   .dbline 25
 0082                   .dbline 26
 0082           ;                   temps[0].status++;
 0082 CA01              movw R24,R20
 0084 0196              adiw R24,1
 0086 90930B01          sts _temps+266+1,R25
 008A 80930A01          sts _temps+266,R24
 008E                   .dbline 27
 008E           ;                   temps[0].statusflag=1;
 008E 81E0              ldi R24,1
 0090 90E0              ldi R25,0
 0092 90931501          sts _temps+276+1,R25
 0096 80931401          sts _temps+276,R24
 009A                   .dbline 29
 009A           ;                       //PORTE=0xFF;
 009A           ;               }else{//还在当前阶段
 009A C9C0              xjmp L6
 009C           L9:
 009C                   .dbline 29
 009C                   .dbline 30
 009C           ;                   PORTE=~PORTE;
 009C 23B0              in R2,0x3
 009E 2094              com R2
 00A0 23B8              out 0x3,R2
 00A2                   .dbline 31
 00A2           ;                    if(cache & 0x01){//恒温阶段,
 00A2 40FF              sbrs R20,0
 00A4 01C0              rjmp L15
 00A6           X3:
 00A6                   .dbline 31
 00A6                   .dbline 33
 00A6           ;                        //执行pid算法控制温度就行,上面判断状态是否就行
 00A6           ;                     }else{ //升温阶段
 00A6 C3C0              xjmp L6
 00A8           L15:
 00A8                   .dbline 33
 00A8                   .dbline 34
 00A8           ;                           temps[0].pertimecnt++;
 00A8 80911201          lds R24,_temps+274
 00AC 90911301          lds R25,_temps+274+1
 00B0 0196              adiw R24,1
 00B2 90931301          sts _temps+274+1,R25
 00B6 80931201          sts _temps+274,R24
 00BA                   .dbline 35
 00BA           ;                           if(temps[0].pertimecnt>temps[0].pertime){
 00BA 20901001          lds R2,_temps+272
 00BE 30901101          lds R3,_temps+272+1
 00C2 2816              cp R2,R24
 00C4 3906              cpc R3,R25
 00C6 08F0              brlo X11
 00C8 B2C0              xjmp L6
 00CA           X11:
 00CA           X4:
 00CA                   .dbline 35
 00CA                   .dbline 36
 00CA           ;                                   temps[0].p_settemp++;//1C需要时间到达，增加温度。
 00CA 80911601          lds R24,_temps+278
 00CE 90911701          lds R25,_temps+278+1
 00D2 0196              adiw R24,1
 00D4 90931701          sts _temps+278+1,R25
 00D8 80931601          sts _temps+278,R24
 00DC                   .dbline 37
 00DC           ;                                       temps[0].pertimecnt=0;
 00DC 2224              clr R2
 00DE 3324              clr R3
 00E0 30921301          sts _temps+274+1,R3
 00E4 20921201          sts _temps+274,R2
 00E8                   .dbline 38
 00E8           ;                             } 
 00E8                   .dbline 39
 00E8           ;                         }
 00E8                   .dbline 40
 00E8           ;                }
 00E8                   .dbline 41
 00E8           ;         }else{//第一次进入该状态。初始化当前状态.因为不是一直初始化，所以不必太担心耗时
 00E8 A2C0              xjmp L6
 00EA           L5:
 00EA                   .dbline 41
 00EA                   .dbline 42
 00EA           ;               temps[0].statusflag=0;
 00EA 2224              clr R2
 00EC 3324              clr R3
 00EE 30921501          sts _temps+276+1,R3
 00F2 20921401          sts _temps+276,R2
 00F6                   .dbline 43
 00F6           ;                   temps[0].nowtime=0;
 00F6 30920F01          sts _temps+270+1,R3
 00FA 20920E01          sts _temps+270,R2
 00FE                   .dbline 44
 00FE           ;              if(cache & 0x01){//升温阶段
 00FE 40FF              sbrs R20,0
 0100 7CC0              rjmp L26
 0102           X5:
 0102                   .dbline 44
 0102                   .dbline 45
 0102           ;                     cache=((cache-1)>>1)*11;
 0102 9A01              movw R18,R20
 0104 2150              subi R18,1
 0106 3040              sbci R19,0
 0108 3695              lsr R19
 010A 2795              ror R18
 010C 0BE0              ldi R16,11
 010E 10E0              ldi R17,0
 0110 0E940000          xcall empy16s
 0114 A801              movw R20,R16
 0116                   .dbline 47
 0116           ;                     //temps[0].needtime=(temps[0].temp_data[cache]*10+temps[0].temp_data[cache+1])*3600+(temps[0].temp_data[cache+2]*10+temps[0].temp_data[cache+3])*60;
 0116           ;                         temps[0].needtime=3;
 0116 83E0              ldi R24,3
 0118 90E0              ldi R25,0
 011A 90930D01          sts _temps+268+1,R25
 011E 80930C01          sts _temps+268,R24
 0122                   .dbline 48
 0122           ;                         if(temps[0].needtime==0){
 0122 8030              cpi R24,0
 0124 8907              cpc R24,R25
 0126 31F4              brne L29
 0128           X6:
 0128                   .dbline 48
 0128                   .dbline 50
 0128           ;                            //当前阶段时间为0，表示已经结束更改标记
 0128           ;                                 temps[0].flag=4;
 0128 84E0              ldi R24,4
 012A 90930100          sts _temps+1,R25
 012E 80930000          sts _temps,R24
 0132                   .dbline 51
 0132           ;                         }else{
 0132 7DC0              xjmp L27
 0134           L29:
 0134                   .dbline 51
 0134                   .dbline 52
 0134           ;                            temps[0].p_settemp=temps[0].temp_data[cache+8]*100+temps[0].temp_data[cache+9]*10+temps[0].temp_data[cache+10];
 0134 80E0              ldi R24,<_temps+2
 0136 90E0              ldi R25,>_temps+2
 0138 FA01              movw R30,R20
 013A 3996              adiw R30,9
 013C EE0F              lsl R30
 013E FF1F              rol R31
 0140 E80F              add R30,R24
 0142 F91F              adc R31,R25
 0144 2081              ldd R18,z+0
 0146 3181              ldd R19,z+1
 0148 0AE0              ldi R16,10
 014A 10E0              ldi R17,0
 014C 0E940000          xcall empy16s
 0150 1801              movw R2,R16
 0152 80E0              ldi R24,<_temps+2
 0154 90E0              ldi R25,>_temps+2
 0156 FA01              movw R30,R20
 0158 3896              adiw R30,8
 015A EE0F              lsl R30
 015C FF1F              rol R31
 015E E80F              add R30,R24
 0160 F91F              adc R31,R25
 0162 2081              ldd R18,z+0
 0164 3181              ldd R19,z+1
 0166 04E6              ldi R16,100
 0168 10E0              ldi R17,0
 016A 0E940000          xcall empy16s
 016E 2801              movw R4,R16
 0170 420C              add R4,R2
 0172 531C              adc R5,R3
 0174 80E0              ldi R24,<_temps+2
 0176 90E0              ldi R25,>_temps+2
 0178 FA01              movw R30,R20
 017A 3A96              adiw R30,10
 017C EE0F              lsl R30
 017E FF1F              rol R31
 0180 E80F              add R30,R24
 0182 F91F              adc R31,R25
 0184 2080              ldd R2,z+0
 0186 3180              ldd R3,z+1
 0188 420C              add R4,R2
 018A 531C              adc R5,R3
 018C 50921701          sts _temps+278+1,R5
 0190 40921601          sts _temps+278,R4
 0194                   .dbline 53
 0194           ;                            temps[0].pertime=temps[0].needtime/(temps[0].p_settemp-temps[0].actualtemp);
 0194 00910C01          lds R16,_temps+268
 0198 10910D01          lds R17,_temps+268+1
 019C 0E940000          xcall uint2fp
 01A0 1801              movw R2,R16
 01A2 2901              movw R4,R18
 01A4 00911601          lds R16,_temps+278
 01A8 10911701          lds R17,_temps+278+1
 01AC 0E940000          xcall uint2fp
 01B0 80E0              ldi R24,<_temps+292
 01B2 90E0              ldi R25,>_temps+292
 01B4 9A93              st -y,R25
 01B6 8A93              st -y,R24
 01B8 0E940000          xcall fpsub1x
 01BC 8101              movw R16,R2
 01BE 9201              movw R18,R4
 01C0 0E940000          xcall fpdiv2
 01C4 0E940000          xcall fpint
 01C8 10931101          sts _temps+272+1,R17
 01CC 00931001          sts _temps+272,R16
 01D0                   .dbline 54
 01D0           ;                            temps[0].pertimecnt=0;
 01D0 2224              clr R2
 01D2 3324              clr R3
 01D4 30921301          sts _temps+274+1,R3
 01D8 20921201          sts _temps+274,R2
 01DC                   .dbline 55
 01DC           ;                                temps[0].settemp=temps[0].p_settemp;//当接近恒温温度时候使用pid需要此温度
 01DC 00911601          lds R16,_temps+278
 01E0 10911701          lds R17,_temps+278+1
 01E4 0E940000          xcall uint2fp
 01E8 10932101          sts _temps+288+1,R17
 01EC 00932001          sts _temps+288,R16
 01F0 30932301          sts _temps+288+2+1,R19
 01F4 20932201          sts _temps+288+2,R18
 01F8                   .dbline 56
 01F8           ;                         }
 01F8                   .dbline 58
 01F8           ;                    
 01F8           ;                   }else{//恒温阶段
 01F8 1AC0              xjmp L27
 01FA           L26:
 01FA                   .dbline 58
 01FA                   .dbline 59
 01FA           ;                          cache=((cache-1)>>1)*11+4;
 01FA 9A01              movw R18,R20
 01FC 2150              subi R18,1
 01FE 3040              sbci R19,0
 0200 3695              lsr R19
 0202 2795              ror R18
 0204 0BE0              ldi R16,11
 0206 10E0              ldi R17,0
 0208 0E940000          xcall empy16s
 020C A801              movw R20,R16
 020E 4C5F              subi R20,252  ; offset = 4
 0210 5F4F              sbci R21,255
 0212                   .dbline 61
 0212           ;                    // temps[0].needtime=(temps[0].temp_data[cache]*10+temps[0].temp_data[cache+1])*3600+(temps[0].temp_data[cache+2]*10+temps[0].temp_data[cache+3])*60;
 0212           ;                         temps[0].needtime=3;
 0212 83E0              ldi R24,3
 0214 90E0              ldi R25,0
 0216 90930D01          sts _temps+268+1,R25
 021A 80930C01          sts _temps+268,R24
 021E                   .dbline 62
 021E           ;                         if(temps[0].needtime==0){
 021E 8030              cpi R24,0
 0220 8907              cpc R24,R25
 0222 29F4              brne L44
 0224           X7:
 0224                   .dbline 62
 0224                   .dbline 64
 0224           ;                            //当前阶段时间为0，表示已经结束更改标记
 0224           ;                                 temps[0].flag=4;
 0224 84E0              ldi R24,4
 0226 90930100          sts _temps+1,R25
 022A 80930000          sts _temps,R24
 022E                   .dbline 65
 022E           ;                         }
 022E           L44:
 022E                   .dbline 67
 022E           ;                        // temps[0].settemp，在上一场升温时候赋值过
 022E           ;                       }
 022E           L27:
 022E                   .dbline 68
 022E           ;         }
 022E           L6:
 022E                   .dbline 69
 022E           ;   }
 022E           L2:
 022E                   .dbline 70
 022E           ;   TIMSK|=0x40;//开定时器2溢出中断,8位的
 022E 87B7              in R24,0x37
 0230 8064              ori R24,64
 0232 87BF              out 0x37,R24
 0234                   .dbline 71
 0234           ;   EIMSK |= 0x04;//开中断2  
 0234 89B7              in R24,0x39
 0236 8460              ori R24,4
 0238 89BF              out 0x39,R24
 023A                   .dbline -2
 023A           L1:
 023A                   .dbline 0 ; func end
 023A 5991              ld R21,y+
 023C 4991              ld R20,y+
 023E 1990              ld R1,y+
 0240 1FBE              OUT 63,R1
 0242 F991              ld R31,y+
 0244 E991              ld R30,y+
 0246 A991              ld R26,y+
 0248 9991              ld R25,y+
 024A 8991              ld R24,y+
 024C 3991              ld R19,y+
 024E 2991              ld R18,y+
 0250 1991              ld R17,y+
 0252 0991              ld R16,y+
 0254 5990              ld R5,y+
 0256 4990              ld R4,y+
 0258 3990              ld R3,y+
 025A 2990              ld R2,y+
 025C 1990              ld R1,y+
 025E 1895              reti
 0260                   .dbsym r cache 20 i
 0260                   .dbend
 0260                   .dbfunc e tempcontrol _tempcontrol fV
 0260           ;              j -> R22,R23
 0260           ;              i -> R20,R21
                        .even
 0260           _tempcontrol::
 0260 0E940000          xcall push_xgsetF00C
 0264                   .dbline -1
 0264                   .dbline 75
 0264           ; }
 0264           ;  //执行温度控制数据更新操作，读取温度更新输出参数.会对温度数据故障更新
 0264           ;  //定时器控制，0.5s进入一次
 0264           ; void tempcontrol(void){
 0264                   .dbline 77
 0264           ;    uint i,j;
 0264           ;       temp_l=0x00;
 0264 2224              clr R2
 0266 3324              clr R3
 0268 30920100          sts _temp_l+1,R3
 026C 20920000          sts _temp_l,R2
 0270                   .dbline 78
 0270           ;       temp_h=0x12;
 0270 82E1              ldi R24,18
 0272 90E0              ldi R25,0
 0274 90930100          sts _temp_h+1,R25
 0278 80930000          sts _temp_h,R24
 027C                   .dbline 79
 027C           ;    for(i=0;i<4;i++){
 027C 4427              clr R20
 027E 5527              clr R21
 0280 4FC1              xjmp L51
 0282           L48:
 0282                   .dbline 79
 0282                   .dbline 81
 0282           ;          //readTemp(i);//读取温度，一次验证有效性
 0282           ;        if(temp_l&0x04){//当前故障，下面就不用再运行啦
 0282 20900000          lds R2,_temp_l
 0286 30900100          lds R3,_temp_l+1
 028A 22FE              sbrs R2,2
 028C 0FC0              rjmp L52
 028E           X12:
 028E                   .dbline 81
 028E                   .dbline 82
 028E           ;                    temps[i].flag=2;
 028E 04E4              ldi R16,324
 0290 11E0              ldi R17,1
 0292 9A01              movw R18,R20
 0294 0E940000          xcall empy16s
 0298 80E0              ldi R24,<_temps
 029A 90E0              ldi R25,>_temps
 029C F801              movw R30,R16
 029E E80F              add R30,R24
 02A0 F91F              adc R31,R25
 02A2 82E0              ldi R24,2
 02A4 90E0              ldi R25,0
 02A6 9183              std z+1,R25
 02A8 8083              std z+0,R24
 02AA                   .dbline 83
 02AA           ;        }else{
 02AA 38C1              xjmp L53
 02AC           L52:
 02AC                   .dbline 83
 02AC                   .dbline 85
 02AC           ;             //temps[i].actualtemp=0x55<<2;
 02AC           ;                 temps[i].actualtemp=(temp_h&0x3F)<<4|(temp_l&0xF0)>>4;
 02AC 04E4              ldi R16,324
 02AE 11E0              ldi R17,1
 02B0 9A01              movw R18,R20
 02B2 0E940000          xcall empy16s
 02B6 80E0              ldi R24,<_temps+292
 02B8 90E0              ldi R25,>_temps+292
 02BA F801              movw R30,R16
 02BC E80F              add R30,R24
 02BE F91F              adc R31,R25
 02C0 80910000          lds R24,_temp_l
 02C4 90910100          lds R25,_temp_l+1
 02C8 807F              andi R24,240
 02CA 9070              andi R25,0
 02CC 9695              lsr R25
 02CE 8795              ror R24
 02D0 9695              lsr R25
 02D2 8795              ror R24
 02D4 9695              lsr R25
 02D6 8795              ror R24
 02D8 9695              lsr R25
 02DA 8795              ror R24
 02DC 00910000          lds R16,_temp_h
 02E0 10910100          lds R17,_temp_h+1
 02E4 0F73              andi R16,63
 02E6 1070              andi R17,0
 02E8 000F              lsl R16
 02EA 111F              rol R17
 02EC 000F              lsl R16
 02EE 111F              rol R17
 02F0 000F              lsl R16
 02F2 111F              rol R17
 02F4 000F              lsl R16
 02F6 111F              rol R17
 02F8 082B              or R16,R24
 02FA 192B              or R17,R25
 02FC 0E940000          xcall uint2fp
 0300 0083              std z+0,R16
 0302 1183              std z+1,R17
 0304 2283              std z+2,R18
 0306 3383              std z+3,R19
 0308                   .dbline 86
 0308           ;          if(temps[i].flag==1)//运行中的
 0308 04E4              ldi R16,324
 030A 11E0              ldi R17,1
 030C 9A01              movw R18,R20
 030E 0E940000          xcall empy16s
 0312 80E0              ldi R24,<_temps
 0314 90E0              ldi R25,>_temps
 0316 F801              movw R30,R16
 0318 E80F              add R30,R24
 031A F91F              adc R31,R25
 031C 8081              ldd R24,z+0
 031E 9181              ldd R25,z+1
 0320 8130              cpi R24,1
 0322 E0E0              ldi R30,0
 0324 9E07              cpc R25,R30
 0326 09F0              breq X20
 0328 A0C0              xjmp L55
 032A           X20:
 032A           X13:
 032A                   .dbline 87
 032A           ;             {   
 032A                   .dbline 88
 032A           ;                     for(j=0;j<9;j++){
 032A 6627              clr R22
 032C 7727              clr R23
 032E 3FC0              xjmp L60
 0330           L57:
 0330                   .dbline 88
 0330                   .dbline 90
 0330           ;                           //readTemp(i);//读取温度，需要读取10次左右
 0330           ;                           temps[i].actualtemp+=(temp_h&0x3F)<<4|(temp_l&0xF0)>>4;
 0330 04E4              ldi R16,324
 0332 11E0              ldi R17,1
 0334 9A01              movw R18,R20
 0336 0E940000          xcall empy16s
 033A 1801              movw R2,R16
 033C 80E0              ldi R24,<_temps+292
 033E 90E0              ldi R25,>_temps+292
 0340 280E              add R2,R24
 0342 391E              adc R3,R25
 0344 3101              movw R6,R2
 0346 F101              movw R30,R2
 0348 2080              ldd R2,z+0
 034A 3180              ldd R3,z+1
 034C 4280              ldd R4,z+2
 034E 5380              ldd R5,z+3
 0350 80910000          lds R24,_temp_l
 0354 90910100          lds R25,_temp_l+1
 0358 807F              andi R24,240
 035A 9070              andi R25,0
 035C 9695              lsr R25
 035E 8795              ror R24
 0360 9695              lsr R25
 0362 8795              ror R24
 0364 9695              lsr R25
 0366 8795              ror R24
 0368 9695              lsr R25
 036A 8795              ror R24
 036C 00910000          lds R16,_temp_h
 0370 10910100          lds R17,_temp_h+1
 0374 0F73              andi R16,63
 0376 1070              andi R17,0
 0378 000F              lsl R16
 037A 111F              rol R17
 037C 000F              lsl R16
 037E 111F              rol R17
 0380 000F              lsl R16
 0382 111F              rol R17
 0384 000F              lsl R16
 0386 111F              rol R17
 0388 082B              or R16,R24
 038A 192B              or R17,R25
 038C 0E940000          xcall uint2fp
 0390 3A93              st -y,R19
 0392 2A93              st -y,R18
 0394 1A93              st -y,R17
 0396 0A93              st -y,R16
 0398 8101              movw R16,R2
 039A 9201              movw R18,R4
 039C 0E940000          xcall fpadd2
 03A0 F301              movw R30,R6
 03A2 0083              std z+0,R16
 03A4 1183              std z+1,R17
 03A6 2283              std z+2,R18
 03A8 3383              std z+3,R19
 03AA                   .dbline 91
 03AA           ;                         }
 03AA           L58:
 03AA                   .dbline 88
 03AA 6F5F              subi R22,255  ; offset = 1
 03AC 7F4F              sbci R23,255
 03AE           L60:
 03AE                   .dbline 88
 03AE 6930              cpi R22,9
 03B0 E0E0              ldi R30,0
 03B2 7E07              cpc R23,R30
 03B4 08F4              brsh X21
 03B6 BCCF              xjmp L57
 03B8           X21:
 03B8           X14:
 03B8                   .dbline 92
 03B8           ;                           temps[i].actualtemp/=10;
 03B8 04E4              ldi R16,324
 03BA 11E0              ldi R17,1
 03BC 9A01              movw R18,R20
 03BE 0E940000          xcall empy16s
 03C2 1801              movw R2,R16
 03C4 80E0              ldi R24,<_temps+292
 03C6 90E0              ldi R25,>_temps+292
 03C8 280E              add R2,R24
 03CA 391E              adc R3,R25
 03CC 3101              movw R6,R2
 03CE F101              movw R30,R2
 03D0 2080              ldd R2,z+0
 03D2 3180              ldd R3,z+1
 03D4 4280              ldd R4,z+2
 03D6 5380              ldd R5,z+3
 03D8 00E0              ldi R16,<L63
 03DA 10E0              ldi R17,>L63
 03DC 0E940000          xcall elpm32
 03E0 3A93              st -y,R19
 03E2 2A93              st -y,R18
 03E4 1A93              st -y,R17
 03E6 0A93              st -y,R16
 03E8 8101              movw R16,R2
 03EA 9201              movw R18,R4
 03EC 0E940000          xcall fpdiv2
 03F0 F301              movw R30,R6
 03F2 0083              std z+0,R16
 03F4 1183              std z+1,R17
 03F6 2283              std z+2,R18
 03F8 3383              std z+3,R19
 03FA                   .dbline 93
 03FA           ;                       if(temps[i].status & 0x01){//恒温阶段，使用pid算法。temps[i].status & 0x01如果是1代表是奇数，0代表是偶数
 03FA 04E4              ldi R16,324
 03FC 11E0              ldi R17,1
 03FE 9A01              movw R18,R20
 0400 0E940000          xcall empy16s
 0404 80E0              ldi R24,<_temps+266
 0406 90E0              ldi R25,>_temps+266
 0408 F801              movw R30,R16
 040A E80F              add R30,R24
 040C F91F              adc R31,R25
 040E 2080              ldd R2,z+0
 0410 3180              ldd R3,z+1
 0412 20FE              sbrs R2,0
 0414 01C0              rjmp L64
 0416           X15:
 0416                   .dbline 93
 0416                   .dbline 95
 0416           ;                                  //PID_realize(i);//启用pid算法
 0416           ;                 }else if(temps[i].settemp-temps[i].actualtemp<10){
 0416 82C0              xjmp L56
 0418           L64:
 0418                   .dbline 95
 0418 04E4              ldi R16,324
 041A 11E0              ldi R17,1
 041C 9A01              movw R18,R20
 041E 0E940000          xcall empy16s
 0422 5801              movw R10,R16
 0424 80E0              ldi R24,<_temps+288
 0426 90E0              ldi R25,>_temps+288
 0428 F501              movw R30,R10
 042A E80F              add R30,R24
 042C F91F              adc R31,R25
 042E 0081              ldd R16,z+0
 0430 1181              ldd R17,z+1
 0432 2281              ldd R18,z+2
 0434 3381              ldd R19,z+3
 0436 80E0              ldi R24,<_temps+292
 0438 90E0              ldi R25,>_temps+292
 043A 1501              movw R2,R10
 043C 280E              add R2,R24
 043E 391E              adc R3,R25
 0440 3A92              st -y,R3
 0442 2A92              st -y,R2
 0444 0E940000          xcall fpsub1
 0448 1801              movw R2,R16
 044A 2901              movw R4,R18
 044C 00E0              ldi R16,<L63
 044E 10E0              ldi R17,>L63
 0450 0E940000          xcall elpm32
 0454 3A93              st -y,R19
 0456 2A93              st -y,R18
 0458 1A93              st -y,R17
 045A 0A93              st -y,R16
 045C 8101              movw R16,R2
 045E 9201              movw R18,R4
 0460 0E940000          xcall fpcmp2
 0464 0CF0              brlt X22
 0466 5AC0              xjmp L56
 0468           X22:
 0468           X16:
 0468                   .dbline 95
 0468                   .dbline 98
 0468           ;                          //升温或阶段，如果温度接近某个温度则开始使用PID算法。这个值要重新考虑
 0468           ;                                  //PID_realize(i);//启用pid算法
 0468           ;                        }else {//升温使用pi算法
 0468                   .dbline 98
 0468                   .dbline 100
 0468           ;                           //PI_realize(i);//启用pi算法
 0468           ;                        }
 0468                   .dbline 101
 0468           ;             }else if(temps[i].flag==5){//初始化参数
 0468 59C0              xjmp L56
 046A           L55:
 046A                   .dbline 101
 046A 04E4              ldi R16,324
 046C 11E0              ldi R17,1
 046E 9A01              movw R18,R20
 0470 0E940000          xcall empy16s
 0474 80E0              ldi R24,<_temps
 0476 90E0              ldi R25,>_temps
 0478 F801              movw R30,R16
 047A E80F              add R30,R24
 047C F91F              adc R31,R25
 047E 8081              ldd R24,z+0
 0480 9181              ldd R25,z+1
 0482 8530              cpi R24,5
 0484 E0E0              ldi R30,0
 0486 9E07              cpc R25,R30
 0488 59F5              brne L71
 048A           X17:
 048A                   .dbline 101
 048A                   .dbline 102
 048A           ;                    temps[i].flag=1;
 048A 04E4              ldi R16,324
 048C 11E0              ldi R17,1
 048E 9A01              movw R18,R20
 0490 0E940000          xcall empy16s
 0494 80E0              ldi R24,<_temps
 0496 90E0              ldi R25,>_temps
 0498 F801              movw R30,R16
 049A E80F              add R30,R24
 049C F91F              adc R31,R25
 049E 81E0              ldi R24,1
 04A0 90E0              ldi R25,0
 04A2 9183              std z+1,R25
 04A4 8083              std z+0,R24
 04A6                   .dbline 103
 04A6           ;                                temps[i].status=1;
 04A6 04E4              ldi R16,324
 04A8 11E0              ldi R17,1
 04AA 9A01              movw R18,R20
 04AC 0E940000          xcall empy16s
 04B0 80E0              ldi R24,<_temps+266
 04B2 90E0              ldi R25,>_temps+266
 04B4 F801              movw R30,R16
 04B6 E80F              add R30,R24
 04B8 F91F              adc R31,R25
 04BA 81E0              ldi R24,1
 04BC 90E0              ldi R25,0
 04BE 9183              std z+1,R25
 04C0 8083              std z+0,R24
 04C2                   .dbline 104
 04C2           ;                                temps[i].statusflag=1;
 04C2 04E4              ldi R16,324
 04C4 11E0              ldi R17,1
 04C6 9A01              movw R18,R20
 04C8 0E940000          xcall empy16s
 04CC 80E0              ldi R24,<_temps+276
 04CE 90E0              ldi R25,>_temps+276
 04D0 F801              movw R30,R16
 04D2 E80F              add R30,R24
 04D4 F91F              adc R31,R25
 04D6 81E0              ldi R24,1
 04D8 90E0              ldi R25,0
 04DA 9183              std z+1,R25
 04DC 8083              std z+0,R24
 04DE                   .dbline 105
 04DE           ;             }else if(temps[i].flag==2){//故障的,设置标志位位未初始化，但是状态和温度数据可能存在、所以可以直接恢复
 04DE 1EC0              xjmp L72
 04E0           L71:
 04E0                   .dbline 105
 04E0 04E4              ldi R16,324
 04E2 11E0              ldi R17,1
 04E4 9A01              movw R18,R20
 04E6 0E940000          xcall empy16s
 04EA 80E0              ldi R24,<_temps
 04EC 90E0              ldi R25,>_temps
 04EE F801              movw R30,R16
 04F0 E80F              add R30,R24
 04F2 F91F              adc R31,R25
 04F4 8081              ldd R24,z+0
 04F6 9181              ldd R25,z+1
 04F8 8230              cpi R24,2
 04FA E0E0              ldi R30,0
 04FC 9E07              cpc R25,R30
 04FE 71F4              brne L75
 0500           X18:
 0500                   .dbline 105
 0500                   .dbline 106
 0500           ;                      temps[i].flag=0;
 0500 04E4              ldi R16,324
 0502 11E0              ldi R17,1
 0504 9A01              movw R18,R20
 0506 0E940000          xcall empy16s
 050A 80E0              ldi R24,<_temps
 050C 90E0              ldi R25,>_temps
 050E F801              movw R30,R16
 0510 E80F              add R30,R24
 0512 F91F              adc R31,R25
 0514 2224              clr R2
 0516 3324              clr R3
 0518 3182              std z+1,R3
 051A 2082              std z+0,R2
 051C                   .dbline 107
 051C           ;             }
 051C           L75:
 051C           L72:
 051C           L56:
 051C                   .dbline 108
 051C           ;         }
 051C           L53:
 051C                   .dbline 109
 051C           ;    }
 051C           L49:
 051C                   .dbline 79
 051C 4F5F              subi R20,255  ; offset = 1
 051E 5F4F              sbci R21,255
 0520           L51:
 0520                   .dbline 79
 0520 4430              cpi R20,4
 0522 E0E0              ldi R30,0
 0524 5E07              cpc R21,R30
 0526 08F4              brsh X23
 0528 ACCE              xjmp L48
 052A           X23:
 052A           X19:
 052A                   .dbline -2
 052A           L47:
 052A                   .dbline 0 ; func end
 052A 0C940000          xjmp pop_xgsetF00C
 052E                   .dbsym r j 22 i
 052E                   .dbsym r i 20 i
 052E                   .dbend
 052E                   .dbfunc e tempdata_init _tempdata_init fV
 052E           ;              j -> R22,R23
 052E           ;              i -> R20,R21
                        .even
 052E           _tempdata_init::
 052E 0E940000          xcall push_xgsetF000
 0532                   .dbline -1
 0532                   .dbline 113
 0532           ; }
 0532           ; 
 0532           ; //开机初始化空间。全部置0,不初始化数据，等用户或EEPROM数据回填
 0532           ; void tempdata_init(void){
 0532                   .dbline 115
 0532           ;  uint i,j;
 0532           ;  for(i=0;i<4;i++){
 0532 4427              clr R20
 0534 5527              clr R21
 0536 68C1              xjmp L81
 0538           L78:
 0538                   .dbline 115
 0538                   .dbline 116
 0538           ;     temps[i].flag=0;
 0538 04E4              ldi R16,324
 053A 11E0              ldi R17,1
 053C 9A01              movw R18,R20
 053E 0E940000          xcall empy16s
 0542 80E0              ldi R24,<_temps
 0544 90E0              ldi R25,>_temps
 0546 F801              movw R30,R16
 0548 E80F              add R30,R24
 054A F91F              adc R31,R25
 054C 2224              clr R2
 054E 3324              clr R3
 0550 3182              std z+1,R3
 0552 2082              std z+0,R2
 0554                   .dbline 117
 0554           ;       for(j=0;j<132;j++){
 0554 6627              clr R22
 0556 7727              clr R23
 0558 15C0              xjmp L85
 055A           L82:
 055A                   .dbline 117
 055A                   .dbline 118
 055A           ;        temps[i].temp_data[j]=0;
 055A 04E4              ldi R16,324
 055C 11E0              ldi R17,1
 055E 9A01              movw R18,R20
 0560 0E940000          xcall empy16s
 0564 1801              movw R2,R16
 0566 80E0              ldi R24,<_temps+2
 0568 90E0              ldi R25,>_temps+2
 056A 280E              add R2,R24
 056C 391E              adc R3,R25
 056E FB01              movw R30,R22
 0570 EE0F              lsl R30
 0572 FF1F              rol R31
 0574 E20D              add R30,R2
 0576 F31D              adc R31,R3
 0578 2224              clr R2
 057A 3324              clr R3
 057C 3182              std z+1,R3
 057E 2082              std z+0,R2
 0580                   .dbline 119
 0580           ;       }
 0580           L83:
 0580                   .dbline 117
 0580 6F5F              subi R22,255  ; offset = 1
 0582 7F4F              sbci R23,255
 0584           L85:
 0584                   .dbline 117
 0584 6438              cpi R22,132
 0586 E0E0              ldi R30,0
 0588 7E07              cpc R23,R30
 058A 38F3              brlo L82
 058C           X24:
 058C                   .dbline 120
 058C           ;       temps[i].status=0;
 058C 04E4              ldi R16,324
 058E 11E0              ldi R17,1
 0590 9A01              movw R18,R20
 0592 0E940000          xcall empy16s
 0596 80E0              ldi R24,<_temps+266
 0598 90E0              ldi R25,>_temps+266
 059A F801              movw R30,R16
 059C E80F              add R30,R24
 059E F91F              adc R31,R25
 05A0 2224              clr R2
 05A2 3324              clr R3
 05A4 3182              std z+1,R3
 05A6 2082              std z+0,R2
 05A8                   .dbline 121
 05A8           ;       temps[i].needtime=0;
 05A8 04E4              ldi R16,324
 05AA 11E0              ldi R17,1
 05AC 9A01              movw R18,R20
 05AE 0E940000          xcall empy16s
 05B2 80E0              ldi R24,<_temps+268
 05B4 90E0              ldi R25,>_temps+268
 05B6 F801              movw R30,R16
 05B8 E80F              add R30,R24
 05BA F91F              adc R31,R25
 05BC 2224              clr R2
 05BE 3324              clr R3
 05C0 3182              std z+1,R3
 05C2 2082              std z+0,R2
 05C4                   .dbline 122
 05C4           ;       temps[i].nowtime=0;
 05C4 04E4              ldi R16,324
 05C6 11E0              ldi R17,1
 05C8 9A01              movw R18,R20
 05CA 0E940000          xcall empy16s
 05CE 80E0              ldi R24,<_temps+270
 05D0 90E0              ldi R25,>_temps+270
 05D2 F801              movw R30,R16
 05D4 E80F              add R30,R24
 05D6 F91F              adc R31,R25
 05D8 2224              clr R2
 05DA 3324              clr R3
 05DC 3182              std z+1,R3
 05DE 2082              std z+0,R2
 05E0                   .dbline 123
 05E0           ;       temps[i].pertime=0;//每1C需要时间，计时
 05E0 04E4              ldi R16,324
 05E2 11E0              ldi R17,1
 05E4 9A01              movw R18,R20
 05E6 0E940000          xcall empy16s
 05EA 80E0              ldi R24,<_temps+272
 05EC 90E0              ldi R25,>_temps+272
 05EE F801              movw R30,R16
 05F0 E80F              add R30,R24
 05F2 F91F              adc R31,R25
 05F4 2224              clr R2
 05F6 3324              clr R3
 05F8 3182              std z+1,R3
 05FA 2082              std z+0,R2
 05FC                   .dbline 124
 05FC           ;       temps[i].pertimecnt=0;//每1C需要时间，计时器
 05FC 04E4              ldi R16,324
 05FE 11E0              ldi R17,1
 0600 9A01              movw R18,R20
 0602 0E940000          xcall empy16s
 0606 80E0              ldi R24,<_temps+274
 0608 90E0              ldi R25,>_temps+274
 060A F801              movw R30,R16
 060C E80F              add R30,R24
 060E F91F              adc R31,R25
 0610 2224              clr R2
 0612 3324              clr R3
 0614 3182              std z+1,R3
 0616 2082              std z+0,R2
 0618                   .dbline 125
 0618           ;       temps[i].statusflag=1;//是否第一次进入当前状态,1、第一次；0、不是第一次
 0618 04E4              ldi R16,324
 061A 11E0              ldi R17,1
 061C 9A01              movw R18,R20
 061E 0E940000          xcall empy16s
 0622 80E0              ldi R24,<_temps+276
 0624 90E0              ldi R25,>_temps+276
 0626 F801              movw R30,R16
 0628 E80F              add R30,R24
 062A F91F              adc R31,R25
 062C 81E0              ldi R24,1
 062E 90E0              ldi R25,0
 0630 9183              std z+1,R25
 0632 8083              std z+0,R24
 0634                   .dbline 127
 0634           ;               //控制相关
 0634           ;       temps[i].p_settemp=0;//升温时候的小阶段需要温度
 0634 04E4              ldi R16,324
 0636 11E0              ldi R17,1
 0638 9A01              movw R18,R20
 063A 0E940000          xcall empy16s
 063E 80E0              ldi R24,<_temps+278
 0640 90E0              ldi R25,>_temps+278
 0642 F801              movw R30,R16
 0644 E80F              add R30,R24
 0646 F91F              adc R31,R25
 0648 2224              clr R2
 064A 3324              clr R3
 064C 3182              std z+1,R3
 064E 2082              std z+0,R2
 0650                   .dbline 128
 0650           ;       temps[i].p_err_next=0;//升温阶段控制使用
 0650 04E4              ldi R16,324
 0652 11E0              ldi R17,1
 0654 9A01              movw R18,R20
 0656 0E940000          xcall empy16s
 065A 80E0              ldi R24,<_temps+280
 065C 90E0              ldi R25,>_temps+280
 065E F801              movw R30,R16
 0660 E80F              add R30,R24
 0662 F91F              adc R31,R25
 0664 2224              clr R2
 0666 3324              clr R3
 0668 3182              std z+1,R3
 066A 2082              std z+0,R2
 066C                   .dbline 129
 066C           ;       temps[i].p_Kp=0;//升温阶段控制使用
 066C 04E4              ldi R16,324
 066E 11E0              ldi R17,1
 0670 9A01              movw R18,R20
 0672 0E940000          xcall empy16s
 0676 80E0              ldi R24,<_temps+282
 0678 90E0              ldi R25,>_temps+282
 067A F801              movw R30,R16
 067C E80F              add R30,R24
 067E F91F              adc R31,R25
 0680 2224              clr R2
 0682 3324              clr R3
 0684 3182              std z+1,R3
 0686 2082              std z+0,R2
 0688                   .dbline 130
 0688           ;       temps[i].p_Ki=0;//升温阶段控制使用
 0688 04E4              ldi R16,324
 068A 11E0              ldi R17,1
 068C 9A01              movw R18,R20
 068E 0E940000          xcall empy16s
 0692 80E0              ldi R24,<_temps+284
 0694 90E0              ldi R25,>_temps+284
 0696 F801              movw R30,R16
 0698 E80F              add R30,R24
 069A F91F              adc R31,R25
 069C 2224              clr R2
 069E 3324              clr R3
 06A0 3182              std z+1,R3
 06A2 2082              std z+0,R2
 06A4                   .dbline 131
 06A4           ;     temps[i].p_err_last=0;
 06A4 04E4              ldi R16,324
 06A6 11E0              ldi R17,1
 06A8 9A01              movw R18,R20
 06AA 0E940000          xcall empy16s
 06AE 80E0              ldi R24,<_temps+286
 06B0 90E0              ldi R25,>_temps+286
 06B2 F801              movw R30,R16
 06B4 E80F              add R30,R24
 06B6 F91F              adc R31,R25
 06B8 2224              clr R2
 06BA 3324              clr R3
 06BC 3182              std z+1,R3
 06BE 2082              std z+0,R2
 06C0                   .dbline 132
 06C0           ;       temps[i].settemp=0;
 06C0 04E4              ldi R16,324
 06C2 11E0              ldi R17,1
 06C4 9A01              movw R18,R20
 06C6 0E940000          xcall empy16s
 06CA 80E0              ldi R24,<_temps+288
 06CC 90E0              ldi R25,>_temps+288
 06CE F801              movw R30,R16
 06D0 E80F              add R30,R24
 06D2 F91F              adc R31,R25
 06D4 00E0              ldi R16,<L99
 06D6 10E0              ldi R17,>L99
 06D8 0E940000          xcall elpm32
 06DC 0083              std z+0,R16
 06DE 1183              std z+1,R17
 06E0 2283              std z+2,R18
 06E2 3383              std z+3,R19
 06E4                   .dbline 133
 06E4           ;       temps[i].actualtemp=0;
 06E4 04E4              ldi R16,324
 06E6 11E0              ldi R17,1
 06E8 9A01              movw R18,R20
 06EA 0E940000          xcall empy16s
 06EE 80E0              ldi R24,<_temps+292
 06F0 90E0              ldi R25,>_temps+292
 06F2 F801              movw R30,R16
 06F4 E80F              add R30,R24
 06F6 F91F              adc R31,R25
 06F8 00E0              ldi R16,<L99
 06FA 10E0              ldi R17,>L99
 06FC 0E940000          xcall elpm32
 0700 0083              std z+0,R16
 0702 1183              std z+1,R17
 0704 2283              std z+2,R18
 0706 3383              std z+3,R19
 0708                   .dbline 134
 0708           ;       temps[i].err=0;
 0708 04E4              ldi R16,324
 070A 11E0              ldi R17,1
 070C 9A01              movw R18,R20
 070E 0E940000          xcall empy16s
 0712 80E0              ldi R24,<_temps+296
 0714 90E0              ldi R25,>_temps+296
 0716 F801              movw R30,R16
 0718 E80F              add R30,R24
 071A F91F              adc R31,R25
 071C 00E0              ldi R16,<L99
 071E 10E0              ldi R17,>L99
 0720 0E940000          xcall elpm32
 0724 0083              std z+0,R16
 0726 1183              std z+1,R17
 0728 2283              std z+2,R18
 072A 3383              std z+3,R19
 072C                   .dbline 135
 072C           ;        temps[i].err_last=0;
 072C 04E4              ldi R16,324
 072E 11E0              ldi R17,1
 0730 9A01              movw R18,R20
 0732 0E940000          xcall empy16s
 0736 80E0              ldi R24,<_temps+300
 0738 90E0              ldi R25,>_temps+300
 073A F801              movw R30,R16
 073C E80F              add R30,R24
 073E F91F              adc R31,R25
 0740 00E0              ldi R16,<L99
 0742 10E0              ldi R17,>L99
 0744 0E940000          xcall elpm32
 0748 0083              std z+0,R16
 074A 1183              std z+1,R17
 074C 2283              std z+2,R18
 074E 3383              std z+3,R19
 0750                   .dbline 136
 0750           ;        temps[i].err_next=0;
 0750 04E4              ldi R16,324
 0752 11E0              ldi R17,1
 0754 9A01              movw R18,R20
 0756 0E940000          xcall empy16s
 075A 80E0              ldi R24,<_temps+304
 075C 90E0              ldi R25,>_temps+304
 075E F801              movw R30,R16
 0760 E80F              add R30,R24
 0762 F91F              adc R31,R25
 0764 00E0              ldi R16,<L99
 0766 10E0              ldi R17,>L99
 0768 0E940000          xcall elpm32
 076C 0083              std z+0,R16
 076E 1183              std z+1,R17
 0770 2283              std z+2,R18
 0772 3383              std z+3,R19
 0774                   .dbline 137
 0774           ;        temps[i].Kp=0.0;
 0774 04E4              ldi R16,324
 0776 11E0              ldi R17,1
 0778 9A01              movw R18,R20
 077A 0E940000          xcall empy16s
 077E 80E0              ldi R24,<_temps+308
 0780 90E0              ldi R25,>_temps+308
 0782 F801              movw R30,R16
 0784 E80F              add R30,R24
 0786 F91F              adc R31,R25
 0788 00E0              ldi R16,<L99
 078A 10E0              ldi R17,>L99
 078C 0E940000          xcall elpm32
 0790 0083              std z+0,R16
 0792 1183              std z+1,R17
 0794 2283              std z+2,R18
 0796 3383              std z+3,R19
 0798                   .dbline 138
 0798           ;        temps[i].Ki=0.0;
 0798 04E4              ldi R16,324
 079A 11E0              ldi R17,1
 079C 9A01              movw R18,R20
 079E 0E940000          xcall empy16s
 07A2 80E0              ldi R24,<_temps+312
 07A4 90E0              ldi R25,>_temps+312
 07A6 F801              movw R30,R16
 07A8 E80F              add R30,R24
 07AA F91F              adc R31,R25
 07AC 00E0              ldi R16,<L99
 07AE 10E0              ldi R17,>L99
 07B0 0E940000          xcall elpm32
 07B4 0083              std z+0,R16
 07B6 1183              std z+1,R17
 07B8 2283              std z+2,R18
 07BA 3383              std z+3,R19
 07BC                   .dbline 139
 07BC           ;        temps[i].Kd=0.0;
 07BC 04E4              ldi R16,324
 07BE 11E0              ldi R17,1
 07C0 9A01              movw R18,R20
 07C2 0E940000          xcall empy16s
 07C6 80E0              ldi R24,<_temps+316
 07C8 90E0              ldi R25,>_temps+316
 07CA F801              movw R30,R16
 07CC E80F              add R30,R24
 07CE F91F              adc R31,R25
 07D0 00E0              ldi R16,<L99
 07D2 10E0              ldi R17,>L99
 07D4 0E940000          xcall elpm32
 07D8 0083              std z+0,R16
 07DA 1183              std z+1,R17
 07DC 2283              std z+2,R18
 07DE 3383              std z+3,R19
 07E0                   .dbline 140
 07E0           ;        temps[i].incrementtemp=25.0;
 07E0 04E4              ldi R16,324
 07E2 11E0              ldi R17,1
 07E4 9A01              movw R18,R20
 07E6 0E940000          xcall empy16s
 07EA 80E0              ldi R24,<_temps+320
 07EC 90E0              ldi R25,>_temps+320
 07EE F801              movw R30,R16
 07F0 E80F              add R30,R24
 07F2 F91F              adc R31,R25
 07F4 00E0              ldi R16,<L108
 07F6 10E0              ldi R17,>L108
 07F8 0E940000          xcall elpm32
 07FC 0083              std z+0,R16
 07FE 1183              std z+1,R17
 0800 2283              std z+2,R18
 0802 3383              std z+3,R19
 0804                   .dbline 141
 0804           ;  } 
 0804           L79:
 0804                   .dbline 115
 0804 4F5F              subi R20,255  ; offset = 1
 0806 5F4F              sbci R21,255
 0808           L81:
 0808                   .dbline 115
 0808 4430              cpi R20,4
 080A E0E0              ldi R30,0
 080C 5E07              cpc R21,R30
 080E 08F4              brsh X26
 0810 93CE              xjmp L78
 0812           X26:
 0812           X25:
 0812                   .dbline -2
 0812           L77:
 0812                   .dbline 0 ; func end
 0812 0C940000          xjmp pop_xgsetF000
 0816                   .dbsym r j 22 i
 0816                   .dbsym r i 20 i
 0816                   .dbend
 0816                   .dbfunc e data_recover _data_recover fV
 0816           ;          dataC -> R22,R23
 0816           ;              i -> R20,R21
 0816           ;              j -> R22,R23
                        .even
 0816           _data_recover::
 0816 0E940000          xcall push_xgsetF00C
 081A                   .dbline -1
 081A                   .dbline 143
 081A           ; }
 081A           ; void data_recover(void){
 081A                   .dbline 146
 081A           ;  uint i,j;
 081A           ;  uint dataC;
 081A           ;  for(i=0;i<4;i++){
 081A 4427              clr R20
 081C 5527              clr R21
 081E 46C0              xjmp L113
 0820           L110:
 0820                   .dbline 146
 0820                   .dbline 147
 0820           ;    dataC=EEPROM_read(i+1,0);//读取标记位
 0820 2227              clr R18
 0822 3327              clr R19
 0824 8A01              movw R16,R20
 0826 0F5F              subi R16,255  ; offset = 1
 0828 1F4F              sbci R17,255
 082A 0E940000          xcall _EEPROM_read
 082E B801              movw R22,R16
 0830                   .dbline 148
 0830           ;    if(dataC==1){
 0830 0130              cpi R16,1
 0832 E0E0              ldi R30,0
 0834 1E07              cpc R17,R30
 0836 09F0              breq X30
 0838 37C0              xjmp L114
 083A           X30:
 083A           X27:
 083A                   .dbline 148
 083A                   .dbline 149
 083A           ;       temps[i].flag=EEPROM_read(i+1,133);
 083A 25E8              ldi R18,133
 083C 30E0              ldi R19,0
 083E 8A01              movw R16,R20
 0840 0F5F              subi R16,255  ; offset = 1
 0842 1F4F              sbci R17,255
 0844 0E940000          xcall _EEPROM_read
 0848 1801              movw R2,R16
 084A 04E4              ldi R16,324
 084C 11E0              ldi R17,1
 084E 9A01              movw R18,R20
 0850 0E940000          xcall empy16s
 0854 80E0              ldi R24,<_temps
 0856 90E0              ldi R25,>_temps
 0858 F801              movw R30,R16
 085A E80F              add R30,R24
 085C F91F              adc R31,R25
 085E 3182              std z+1,R3
 0860 2082              std z+0,R2
 0862                   .dbline 150
 0862           ;         for(j=0;j<132;j++){
 0862 6627              clr R22
 0864 7727              clr R23
 0866 1CC0              xjmp L119
 0868           L116:
 0868                   .dbline 150
 0868                   .dbline 151
 0868           ;           temps[i].temp_data[j]=EEPROM_read(i+1,j+1);
 0868 9B01              movw R18,R22
 086A 2F5F              subi R18,255  ; offset = 1
 086C 3F4F              sbci R19,255
 086E 8A01              movw R16,R20
 0870 0F5F              subi R16,255  ; offset = 1
 0872 1F4F              sbci R17,255
 0874 0E940000          xcall _EEPROM_read
 0878 5801              movw R10,R16
 087A 04E4              ldi R16,324
 087C 11E0              ldi R17,1
 087E 9A01              movw R18,R20
 0880 0E940000          xcall empy16s
 0884 1801              movw R2,R16
 0886 80E0              ldi R24,<_temps+2
 0888 90E0              ldi R25,>_temps+2
 088A 280E              add R2,R24
 088C 391E              adc R3,R25
 088E FB01              movw R30,R22
 0890 EE0F              lsl R30
 0892 FF1F              rol R31
 0894 E20D              add R30,R2
 0896 F31D              adc R31,R3
 0898 B182              std z+1,R11
 089A A082              std z+0,R10
 089C                   .dbline 152
 089C           ;          }
 089C           L117:
 089C                   .dbline 150
 089C 6F5F              subi R22,255  ; offset = 1
 089E 7F4F              sbci R23,255
 08A0           L119:
 08A0                   .dbline 150
 08A0 6438              cpi R22,132
 08A2 E0E0              ldi R30,0
 08A4 7E07              cpc R23,R30
 08A6 00F3              brlo L116
 08A8           X28:
 08A8                   .dbline 153
 08A8           ;       }
 08A8           L114:
 08A8                   .dbline 154
 08A8           ;  } 
 08A8           L111:
 08A8                   .dbline 146
 08A8 4F5F              subi R20,255  ; offset = 1
 08AA 5F4F              sbci R21,255
 08AC           L113:
 08AC                   .dbline 146
 08AC 4430              cpi R20,4
 08AE E0E0              ldi R30,0
 08B0 5E07              cpc R21,R30
 08B2 08F4              brsh X31
 08B4 B5CF              xjmp L110
 08B6           X31:
 08B6           X29:
 08B6                   .dbline -2
 08B6           L109:
 08B6                   .dbline 0 ; func end
 08B6 0C940000          xjmp pop_xgsetF00C
 08BA                   .dbsym r dataC 22 i
 08BA                   .dbsym r i 20 i
 08BA                   .dbsym r j 22 i
 08BA                   .dbend
 08BA                   .dbfunc e set_temp_data _set_temp_data fV
 08BA           ;              j -> R20,R21
 08BA           ;       dataCach -> R10,R11
 08BA           ;              t -> R22,R23
                        .even
 08BA           _set_temp_data::
 08BA 0E940000          xcall push_xgsetF00C
 08BE 5901              movw R10,R18
 08C0 B801              movw R22,R16
 08C2 2297              sbiw R28,2
 08C4                   .dbline -1
 08C4                   .dbline 158
 08C4           ; }
 08C4           ; 
 08C4           ; //设置指定的数据,保存相关标志位
 08C4           ; void set_temp_data(uint t,uint* dataCach){
 08C4                   .dbline 160
 08C4           ;     uint j;
 08C4           ;       temps[t].flag=6;
 08C4 04E4              ldi R16,324
 08C6 11E0              ldi R17,1
 08C8 9B01              movw R18,R22
 08CA 0E940000          xcall empy16s
 08CE 80E0              ldi R24,<_temps
 08D0 90E0              ldi R25,>_temps
 08D2 F801              movw R30,R16
 08D4 E80F              add R30,R24
 08D6 F91F              adc R31,R25
 08D8 86E0              ldi R24,6
 08DA 90E0              ldi R25,0
 08DC 9183              std z+1,R25
 08DE 8083              std z+0,R24
 08E0                   .dbline 161
 08E0           ;       EEPROM_write(t+1,0,0x01);
 08E0 81E0              ldi R24,1
 08E2 9983              std y+1,R25
 08E4 8883              std y+0,R24
 08E6 2227              clr R18
 08E8 3327              clr R19
 08EA 8B01              movw R16,R22
 08EC 0F5F              subi R16,255  ; offset = 1
 08EE 1F4F              sbci R17,255
 08F0 0E940000          xcall _EEPROM_write
 08F4                   .dbline 162
 08F4           ;       EEPROM_write(t+1,133,6);
 08F4 86E0              ldi R24,6
 08F6 90E0              ldi R25,0
 08F8 9983              std y+1,R25
 08FA 8883              std y+0,R24
 08FC 25E8              ldi R18,133
 08FE 30E0              ldi R19,0
 0900 8B01              movw R16,R22
 0902 0F5F              subi R16,255  ; offset = 1
 0904 1F4F              sbci R17,255
 0906 0E940000          xcall _EEPROM_write
 090A                   .dbline 163
 090A           ;     for(j=0;j<132;j++){
 090A 4427              clr R20
 090C 5527              clr R21
 090E 1AC0              xjmp L125
 0910           L122:
 0910                   .dbline 163
 0910                   .dbline 164
 0910           ;          temps[t].temp_data[j]=*(dataCach+j);
 0910 1A01              movw R2,R20
 0912 220C              lsl R2
 0914 331C              rol R3
 0916 2101              movw R4,R2
 0918 04E4              ldi R16,324
 091A 11E0              ldi R17,1
 091C 9B01              movw R18,R22
 091E 0E940000          xcall empy16s
 0922 1801              movw R2,R16
 0924 80E0              ldi R24,<_temps+2
 0926 90E0              ldi R25,>_temps+2
 0928 280E              add R2,R24
 092A 391E              adc R3,R25
 092C F201              movw R30,R4
 092E E20D              add R30,R2
 0930 F31D              adc R31,R3
 0932 D201              movw R26,R4
 0934 AA0D              add R26,R10
 0936 BB1D              adc R27,R11
 0938 2D90              ld R2,x+
 093A 3C90              ld R3,x
 093C 3182              std z+1,R3
 093E 2082              std z+0,R2
 0940                   .dbline 166
 0940           ;        //  EEPROM_write(t+1,j+1,temps[t].temp_data[j]);
 0940           ;       }
 0940           L123:
 0940                   .dbline 163
 0940 4F5F              subi R20,255  ; offset = 1
 0942 5F4F              sbci R21,255
 0944           L125:
 0944                   .dbline 163
 0944 4438              cpi R20,132
 0946 E0E0              ldi R30,0
 0948 5E07              cpc R21,R30
 094A 10F3              brlo L122
 094C           X32:
 094C                   .dbline -2
 094C           L121:
 094C                   .dbline 0 ; func end
 094C 2296              adiw R28,2
 094E 0C940000          xjmp pop_xgsetF00C
 0952                   .dbsym r j 20 i
 0952                   .dbsym r dataCach 10 pi
 0952                   .dbsym r t 22 i
 0952                   .dbend
 0952                   .dbfunc e reset_temp_data _reset_temp_data fV
 0952           ;              j -> R20,R21
 0952           ;              t -> R22,R23
                        .even
 0952           _reset_temp_data::
 0952 0E940000          xcall push_xgsetF000
 0956 B801              movw R22,R16
 0958 2297              sbiw R28,2
 095A                   .dbline -1
 095A                   .dbline 170
 095A           ; }
 095A           ; 
 095A           ; //重置指定的数据,保存相关标志位
 095A           ; void reset_temp_data(uint t){
 095A                   .dbline 172
 095A           ;     uint j;
 095A           ;       temps[t].flag=0;
 095A 04E4              ldi R16,324
 095C 11E0              ldi R17,1
 095E 9B01              movw R18,R22
 0960 0E940000          xcall empy16s
 0964 80E0              ldi R24,<_temps
 0966 90E0              ldi R25,>_temps
 0968 F801              movw R30,R16
 096A E80F              add R30,R24
 096C F91F              adc R31,R25
 096E 2224              clr R2
 0970 3324              clr R3
 0972 3182              std z+1,R3
 0974 2082              std z+0,R2
 0976                   .dbline 173
 0976           ;       EEPROM_write(t+1,0,0x00);
 0976 3982              std y+1,R3
 0978 2882              std y+0,R2
 097A 2227              clr R18
 097C 3327              clr R19
 097E 8B01              movw R16,R22
 0980 0F5F              subi R16,255  ; offset = 1
 0982 1F4F              sbci R17,255
 0984 0E940000          xcall _EEPROM_write
 0988                   .dbline 174
 0988           ;       EEPROM_write(t+1,133,0x00);
 0988 2224              clr R2
 098A 3324              clr R3
 098C 3982              std y+1,R3
 098E 2882              std y+0,R2
 0990 25E8              ldi R18,133
 0992 30E0              ldi R19,0
 0994 8B01              movw R16,R22
 0996 0F5F              subi R16,255  ; offset = 1
 0998 1F4F              sbci R17,255
 099A 0E940000          xcall _EEPROM_write
 099E                   .dbline 175
 099E           ;     for(j=0;j<132;j++){
 099E 4427              clr R20
 09A0 5527              clr R21
 09A2 15C0              xjmp L131
 09A4           L128:
 09A4                   .dbline 175
 09A4                   .dbline 176
 09A4           ;          temps[t].temp_data[j]=0;
 09A4 04E4              ldi R16,324
 09A6 11E0              ldi R17,1
 09A8 9B01              movw R18,R22
 09AA 0E940000          xcall empy16s
 09AE 1801              movw R2,R16
 09B0 80E0              ldi R24,<_temps+2
 09B2 90E0              ldi R25,>_temps+2
 09B4 280E              add R2,R24
 09B6 391E              adc R3,R25
 09B8 FA01              movw R30,R20
 09BA EE0F              lsl R30
 09BC FF1F              rol R31
 09BE E20D              add R30,R2
 09C0 F31D              adc R31,R3
 09C2 2224              clr R2
 09C4 3324              clr R3
 09C6 3182              std z+1,R3
 09C8 2082              std z+0,R2
 09CA                   .dbline 178
 09CA           ;        //  EEPROM_write(t+1,j+1,0);
 09CA           ;       }
 09CA           L129:
 09CA                   .dbline 175
 09CA 4F5F              subi R20,255  ; offset = 1
 09CC 5F4F              sbci R21,255
 09CE           L131:
 09CE                   .dbline 175
 09CE 4438              cpi R20,132
 09D0 E0E0              ldi R30,0
 09D2 5E07              cpc R21,R30
 09D4 38F3              brlo L128
 09D6           X33:
 09D6                   .dbline -2
 09D6           L127:
 09D6                   .dbline 0 ; func end
 09D6 2296              adiw R28,2
 09D8 0C940000          xjmp pop_xgsetF000
 09DC                   .dbsym r j 20 i
 09DC                   .dbsym r t 22 i
 09DC                   .dbend
 09DC                   .dbfunc e set_all_start _set_all_start fV
 09DC           ;              j -> R20,R21
                        .even
 09DC           _set_all_start::
 09DC 4A93              st -y,R20
 09DE 5A93              st -y,R21
 09E0                   .dbline -1
 09E0                   .dbline 181
 09E0           ; }
 09E0           ; //温度全部开始工作。状态为停止和刚重置数据的可以开始
 09E0           ; void set_all_start(void){
 09E0                   .dbline 184
 09E0           ;     uint j;
 09E0           ;       
 09E0           ;     for(j=0;j<4;j++){
 09E0 4427              clr R20
 09E2 5527              clr R21
 09E4 3FC0              xjmp L137
 09E6           L134:
 09E6                   .dbline 184
 09E6                   .dbline 185
 09E6           ;           if(temps[j].flag==3){
 09E6 04E4              ldi R16,324
 09E8 11E0              ldi R17,1
 09EA 9A01              movw R18,R20
 09EC 0E940000          xcall empy16s
 09F0 80E0              ldi R24,<_temps
 09F2 90E0              ldi R25,>_temps
 09F4 F801              movw R30,R16
 09F6 E80F              add R30,R24
 09F8 F91F              adc R31,R25
 09FA 8081              ldd R24,z+0
 09FC 9181              ldd R25,z+1
 09FE 8330              cpi R24,3
 0A00 E0E0              ldi R30,0
 0A02 9E07              cpc R25,R30
 0A04 79F4              brne L138
 0A06           X34:
 0A06                   .dbline 185
 0A06                   .dbline 186
 0A06           ;                  temps[j].flag=1;
 0A06 04E4              ldi R16,324
 0A08 11E0              ldi R17,1
 0A0A 9A01              movw R18,R20
 0A0C 0E940000          xcall empy16s
 0A10 80E0              ldi R24,<_temps
 0A12 90E0              ldi R25,>_temps
 0A14 F801              movw R30,R16
 0A16 E80F              add R30,R24
 0A18 F91F              adc R31,R25
 0A1A 81E0              ldi R24,1
 0A1C 90E0              ldi R25,0
 0A1E 9183              std z+1,R25
 0A20 8083              std z+0,R24
 0A22                   .dbline 187
 0A22           ;             }else if(temps[j].flag==6){
 0A22 1EC0              xjmp L139
 0A24           L138:
 0A24                   .dbline 187
 0A24 04E4              ldi R16,324
 0A26 11E0              ldi R17,1
 0A28 9A01              movw R18,R20
 0A2A 0E940000          xcall empy16s
 0A2E 80E0              ldi R24,<_temps
 0A30 90E0              ldi R25,>_temps
 0A32 F801              movw R30,R16
 0A34 E80F              add R30,R24
 0A36 F91F              adc R31,R25
 0A38 8081              ldd R24,z+0
 0A3A 9181              ldd R25,z+1
 0A3C 8630              cpi R24,6
 0A3E E0E0              ldi R30,0
 0A40 9E07              cpc R25,R30
 0A42 71F4              brne L140
 0A44           X35:
 0A44                   .dbline 187
 0A44                   .dbline 188
 0A44           ;                    temps[j].flag=5;
 0A44 04E4              ldi R16,324
 0A46 11E0              ldi R17,1
 0A48 9A01              movw R18,R20
 0A4A 0E940000          xcall empy16s
 0A4E 80E0              ldi R24,<_temps
 0A50 90E0              ldi R25,>_temps
 0A52 F801              movw R30,R16
 0A54 E80F              add R30,R24
 0A56 F91F              adc R31,R25
 0A58 85E0              ldi R24,5
 0A5A 90E0              ldi R25,0
 0A5C 9183              std z+1,R25
 0A5E 8083              std z+0,R24
 0A60                   .dbline 190
 0A60           ; 
 0A60           ;             }
 0A60           L140:
 0A60           L139:
 0A60                   .dbline 191
 0A60           ;       }
 0A60           L135:
 0A60                   .dbline 184
 0A60 4F5F              subi R20,255  ; offset = 1
 0A62 5F4F              sbci R21,255
 0A64           L137:
 0A64                   .dbline 184
 0A64 4430              cpi R20,4
 0A66 E0E0              ldi R30,0
 0A68 5E07              cpc R21,R30
 0A6A 08F4              brsh X37
 0A6C BCCF              xjmp L134
 0A6E           X37:
 0A6E           X36:
 0A6E                   .dbline -2
 0A6E           L133:
 0A6E                   .dbline 0 ; func end
 0A6E 5991              ld R21,y+
 0A70 4991              ld R20,y+
 0A72 0895              ret
 0A74                   .dbsym r j 20 i
 0A74                   .dbend
 0A74                   .dbfunc e set_all_stop _set_all_stop fV
 0A74           ;              j -> R20,R21
                        .even
 0A74           _set_all_stop::
 0A74 4A93              st -y,R20
 0A76 5A93              st -y,R21
 0A78                   .dbline -1
 0A78                   .dbline 194
 0A78           ; }
 0A78           ; //温度全部暂停.要运行的才会暂停。。关闭输出
 0A78           ; void set_all_stop(void){
 0A78                   .dbline 197
 0A78           ;     uint j;
 0A78           ;       
 0A78           ;     for(j=0;j<4;j++){
 0A78 4427              clr R20
 0A7A 5527              clr R21
 0A7C 25C0              xjmp L146
 0A7E           L143:
 0A7E                   .dbline 197
 0A7E                   .dbline 198
 0A7E           ;         if(temps[j].flag==1 || temps[j].flag==5){
 0A7E 04E4              ldi R16,324
 0A80 11E0              ldi R17,1
 0A82 9A01              movw R18,R20
 0A84 0E940000          xcall empy16s
 0A88 80E0              ldi R24,<_temps
 0A8A 90E0              ldi R25,>_temps
 0A8C F801              movw R30,R16
 0A8E E80F              add R30,R24
 0A90 F91F              adc R31,R25
 0A92 2080              ldd R2,z+0
 0A94 3180              ldd R3,z+1
 0A96 C101              movw R24,R2
 0A98 8130              cpi R24,1
 0A9A E0E0              ldi R30,0
 0A9C 9E07              cpc R25,R30
 0A9E 21F0              breq L149
 0AA0           X38:
 0AA0 8530              cpi R24,5
 0AA2 E0E0              ldi R30,0
 0AA4 9E07              cpc R25,R30
 0AA6 71F4              brne L147
 0AA8           X39:
 0AA8           L149:
 0AA8                   .dbline 198
 0AA8                   .dbline 199
 0AA8           ;            temps[j].flag=3;
 0AA8 04E4              ldi R16,324
 0AAA 11E0              ldi R17,1
 0AAC 9A01              movw R18,R20
 0AAE 0E940000          xcall empy16s
 0AB2 80E0              ldi R24,<_temps
 0AB4 90E0              ldi R25,>_temps
 0AB6 F801              movw R30,R16
 0AB8 E80F              add R30,R24
 0ABA F91F              adc R31,R25
 0ABC 83E0              ldi R24,3
 0ABE 90E0              ldi R25,0
 0AC0 9183              std z+1,R25
 0AC2 8083              std z+0,R24
 0AC4                   .dbline 201
 0AC4           ;               //  EEPROM_write(j+1,133,3);
 0AC4           ;          }
 0AC4           L147:
 0AC4                   .dbline 202
 0AC4           ;       }
 0AC4           L144:
 0AC4                   .dbline 197
 0AC4 4F5F              subi R20,255  ; offset = 1
 0AC6 5F4F              sbci R21,255
 0AC8           L146:
 0AC8                   .dbline 197
 0AC8 4430              cpi R20,4
 0ACA E0E0              ldi R30,0
 0ACC 5E07              cpc R21,R30
 0ACE B8F2              brlo L143
 0AD0           X40:
 0AD0                   .dbline -2
 0AD0           L142:
 0AD0                   .dbline 0 ; func end
 0AD0 5991              ld R21,y+
 0AD2 4991              ld R20,y+
 0AD4 0895              ret
 0AD6                   .dbsym r j 20 i
 0AD6                   .dbend
 0AD6                   .dbfunc e set_start _set_start fV
 0AD6           ;              t -> R10,R11
                        .even
 0AD6           _set_start::
 0AD6 AA92              st -y,R10
 0AD8 BA92              st -y,R11
 0ADA 5801              movw R10,R16
 0ADC                   .dbline -1
 0ADC                   .dbline 205
 0ADC           ; }
 0ADC           ; //指定温度开始,预备
 0ADC           ; void set_start(uint t){
 0ADC                   .dbline 206
 0ADC           ;   if(temps[t].flag==3){
 0ADC 04E4              ldi R16,324
 0ADE 11E0              ldi R17,1
 0AE0 9501              movw R18,R10
 0AE2 0E940000          xcall empy16s
 0AE6 80E0              ldi R24,<_temps
 0AE8 90E0              ldi R25,>_temps
 0AEA F801              movw R30,R16
 0AEC E80F              add R30,R24
 0AEE F91F              adc R31,R25
 0AF0 8081              ldd R24,z+0
 0AF2 9181              ldd R25,z+1
 0AF4 8330              cpi R24,3
 0AF6 E0E0              ldi R30,0
 0AF8 9E07              cpc R25,R30
 0AFA 79F4              brne L151
 0AFC           X41:
 0AFC                   .dbline 206
 0AFC                   .dbline 207
 0AFC           ;            temps[t].flag=1;
 0AFC 04E4              ldi R16,324
 0AFE 11E0              ldi R17,1
 0B00 9501              movw R18,R10
 0B02 0E940000          xcall empy16s
 0B06 80E0              ldi R24,<_temps
 0B08 90E0              ldi R25,>_temps
 0B0A F801              movw R30,R16
 0B0C E80F              add R30,R24
 0B0E F91F              adc R31,R25
 0B10 81E0              ldi R24,1
 0B12 90E0              ldi R25,0
 0B14 9183              std z+1,R25
 0B16 8083              std z+0,R24
 0B18                   .dbline 209
 0B18           ;               ///  EEPROM_write(t+1,133,5);
 0B18           ;       }else if(temps[t].flag==6){
 0B18 1EC0              xjmp L152
 0B1A           L151:
 0B1A                   .dbline 209
 0B1A 04E4              ldi R16,324
 0B1C 11E0              ldi R17,1
 0B1E 9501              movw R18,R10
 0B20 0E940000          xcall empy16s
 0B24 80E0              ldi R24,<_temps
 0B26 90E0              ldi R25,>_temps
 0B28 F801              movw R30,R16
 0B2A E80F              add R30,R24
 0B2C F91F              adc R31,R25
 0B2E 8081              ldd R24,z+0
 0B30 9181              ldd R25,z+1
 0B32 8630              cpi R24,6
 0B34 E0E0              ldi R30,0
 0B36 9E07              cpc R25,R30
 0B38 71F4              brne L153
 0B3A           X42:
 0B3A                   .dbline 209
 0B3A                   .dbline 210
 0B3A           ;            temps[t].flag=5;
 0B3A 04E4              ldi R16,324
 0B3C 11E0              ldi R17,1
 0B3E 9501              movw R18,R10
 0B40 0E940000          xcall empy16s
 0B44 80E0              ldi R24,<_temps
 0B46 90E0              ldi R25,>_temps
 0B48 F801              movw R30,R16
 0B4A E80F              add R30,R24
 0B4C F91F              adc R31,R25
 0B4E 85E0              ldi R24,5
 0B50 90E0              ldi R25,0
 0B52 9183              std z+1,R25
 0B54 8083              std z+0,R24
 0B56                   .dbline 212
 0B56           ;               ///  EEPROM_write(t+1,133,5);
 0B56           ;       }
 0B56           L153:
 0B56           L152:
 0B56                   .dbline -2
 0B56           L150:
 0B56                   .dbline 0 ; func end
 0B56 B990              ld R11,y+
 0B58 A990              ld R10,y+
 0B5A 0895              ret
 0B5C                   .dbsym r t 10 i
 0B5C                   .dbend
 0B5C                   .dbfunc e set_stop _set_stop fV
 0B5C           ;              t -> R10,R11
                        .even
 0B5C           _set_stop::
 0B5C AA92              st -y,R10
 0B5E BA92              st -y,R11
 0B60 5801              movw R10,R16
 0B62                   .dbline -1
 0B62                   .dbline 216
 0B62           ; }
 0B62           ; 
 0B62           ; //指定温度暂停。关闭输出
 0B62           ; void set_stop(uint t){
 0B62                   .dbline 217
 0B62           ;  if(temps[t].flag==1 || temps[t].flag==5){
 0B62 04E4              ldi R16,324
 0B64 11E0              ldi R17,1
 0B66 9501              movw R18,R10
 0B68 0E940000          xcall empy16s
 0B6C 80E0              ldi R24,<_temps
 0B6E 90E0              ldi R25,>_temps
 0B70 F801              movw R30,R16
 0B72 E80F              add R30,R24
 0B74 F91F              adc R31,R25
 0B76 2080              ldd R2,z+0
 0B78 3180              ldd R3,z+1
 0B7A C101              movw R24,R2
 0B7C 8130              cpi R24,1
 0B7E E0E0              ldi R30,0
 0B80 9E07              cpc R25,R30
 0B82 21F0              breq L158
 0B84           X43:
 0B84 8530              cpi R24,5
 0B86 E0E0              ldi R30,0
 0B88 9E07              cpc R25,R30
 0B8A 71F4              brne L156
 0B8C           X44:
 0B8C           L158:
 0B8C                   .dbline 217
 0B8C                   .dbline 218
 0B8C           ;            temps[t].flag=3;
 0B8C 04E4              ldi R16,324
 0B8E 11E0              ldi R17,1
 0B90 9501              movw R18,R10
 0B92 0E940000          xcall empy16s
 0B96 80E0              ldi R24,<_temps
 0B98 90E0              ldi R25,>_temps
 0B9A F801              movw R30,R16
 0B9C E80F              add R30,R24
 0B9E F91F              adc R31,R25
 0BA0 83E0              ldi R24,3
 0BA2 90E0              ldi R25,0
 0BA4 9183              std z+1,R25
 0BA6 8083              std z+0,R24
 0BA8                   .dbline 220
 0BA8           ;               // EEPROM_write(t+1,133,3);
 0BA8           ;          }
 0BA8           L156:
 0BA8                   .dbline -2
 0BA8           L155:
 0BA8                   .dbline 0 ; func end
 0BA8 B990              ld R11,y+
 0BAA A990              ld R10,y+
 0BAC 0895              ret
 0BAE                   .dbsym r t 10 i
 0BAE                   .dbend
 0BAE                   .dbfunc e PID_realize _PID_realize fV
 0BAE           ;         temp_n -> R10,R11
                        .even
 0BAE           _PID_realize::
 0BAE 0E940000          xcall push_xgsetF03C
 0BB2 5801              movw R10,R16
 0BB4                   .dbline -1
 0BB4                   .dbline 230
 0BB4           ; }
 0BB4           ; /***********************************************************************
 0BB4           ; * 函数功能：  PID计算
 0BB4           ; * 参      数：        读入的温度
 0BB4           ; * 返 回  值： 无      改变incrementtemp的值，输出函数获得这个值然后输出
 0BB4           ; * 备     注： 
 0BB4           ; **1
 0BB4           ; **********************************************************************/
 0BB4           ; void PID_realize(uint temp_n)
 0BB4           ; {
 0BB4                   .dbline 231
 0BB4           ;    temps[temp_n].err=temps[temp_n].settemp-temps[temp_n].actualtemp;//这两个都在结构体中
 0BB4 04E4              ldi R16,324
 0BB6 11E0              ldi R17,1
 0BB8 9501              movw R18,R10
 0BBA 0E940000          xcall empy16s
 0BBE 2801              movw R4,R16
 0BC0 80E0              ldi R24,<_temps+288
 0BC2 90E0              ldi R25,>_temps+288
 0BC4 F201              movw R30,R4
 0BC6 E80F              add R30,R24
 0BC8 F91F              adc R31,R25
 0BCA 0081              ldd R16,z+0
 0BCC 1181              ldd R17,z+1
 0BCE 2281              ldd R18,z+2
 0BD0 3381              ldd R19,z+3
 0BD2 80E0              ldi R24,<_temps+292
 0BD4 90E0              ldi R25,>_temps+292
 0BD6 1201              movw R2,R4
 0BD8 280E              add R2,R24
 0BDA 391E              adc R3,R25
 0BDC 3A92              st -y,R3
 0BDE 2A92              st -y,R2
 0BE0 0E940000          xcall fpsub1
 0BE4 80E0              ldi R24,<_temps+296
 0BE6 90E0              ldi R25,>_temps+296
 0BE8 F201              movw R30,R4
 0BEA E80F              add R30,R24
 0BEC F91F              adc R31,R25
 0BEE 0083              std z+0,R16
 0BF0 1183              std z+1,R17
 0BF2 2283              std z+2,R18
 0BF4 3383              std z+3,R19
 0BF6                   .dbline 232
 0BF6           ;    temps[temp_n].incrementtemp=temps[temp_n].Kp*(temps[temp_n].err-temps[temp_n].err_next)+temps[temp_n].Ki*temps[temp_n].err+temps[temp_n].Kd*(temps[temp_n].err-2*temps[temp_n].err_next+temps[temp_n].err_last);
 0BF6 04E4              ldi R16,324
 0BF8 11E0              ldi R17,1
 0BFA 9501              movw R18,R10
 0BFC 0E940000          xcall empy16s
 0C00 D801              movw R26,R16
 0C02 80E0              ldi R24,<_temps+308
 0C04 90E0              ldi R25,>_temps+308
 0C06 FD01              movw R30,R26
 0C08 E80F              add R30,R24
 0C0A F91F              adc R31,R25
 0C0C 2080              ldd R2,z+0
 0C0E 3180              ldd R3,z+1
 0C10 4280              ldd R4,z+2
 0C12 5380              ldd R5,z+3
 0C14 80E0              ldi R24,<_temps+296
 0C16 90E0              ldi R25,>_temps+296
 0C18 FD01              movw R30,R26
 0C1A E80F              add R30,R24
 0C1C F91F              adc R31,R25
 0C1E 0081              ldd R16,z+0
 0C20 1181              ldd R17,z+1
 0C22 2281              ldd R18,z+2
 0C24 3381              ldd R19,z+3
 0C26 80E0              ldi R24,<_temps+304
 0C28 90E0              ldi R25,>_temps+304
 0C2A 3D01              movw R6,R26
 0C2C 680E              add R6,R24
 0C2E 791E              adc R7,R25
 0C30 7A92              st -y,R7
 0C32 6A92              st -y,R6
 0C34 0E940000          xcall fpsub1x
 0C38 8101              movw R16,R2
 0C3A 9201              movw R18,R4
 0C3C 0E940000          xcall fpmule2
 0C40 1801              movw R2,R16
 0C42 2901              movw R4,R18
 0C44 80E0              ldi R24,<_temps+312
 0C46 90E0              ldi R25,>_temps+312
 0C48 FD01              movw R30,R26
 0C4A E80F              add R30,R24
 0C4C F91F              adc R31,R25
 0C4E 0081              ldd R16,z+0
 0C50 1181              ldd R17,z+1
 0C52 2281              ldd R18,z+2
 0C54 3381              ldd R19,z+3
 0C56 80E0              ldi R24,<_temps+296
 0C58 90E0              ldi R25,>_temps+296
 0C5A 3D01              movw R6,R26
 0C5C 680E              add R6,R24
 0C5E 791E              adc R7,R25
 0C60 7A92              st -y,R7
 0C62 6A92              st -y,R6
 0C64 0E940000          xcall fpmule1x
 0C68 8101              movw R16,R2
 0C6A 9201              movw R18,R4
 0C6C 0E940000          xcall fpadd2
 0C70 1801              movw R2,R16
 0C72 2901              movw R4,R18
 0C74 80E0              ldi R24,<_temps+316
 0C76 90E0              ldi R25,>_temps+316
 0C78 FD01              movw R30,R26
 0C7A E80F              add R30,R24
 0C7C F91F              adc R31,R25
 0C7E 6080              ldd R6,z+0
 0C80 7180              ldd R7,z+1
 0C82 8280              ldd R8,z+2
 0C84 9380              ldd R9,z+3
 0C86 80E0              ldi R24,<_temps+296
 0C88 90E0              ldi R25,>_temps+296
 0C8A FD01              movw R30,R26
 0C8C E80F              add R30,R24
 0C8E F91F              adc R31,R25
 0C90 4081              ldd R20,z+0
 0C92 5181              ldd R21,z+1
 0C94 6281              ldd R22,z+2
 0C96 7381              ldd R23,z+3
 0C98 00E0              ldi R16,<L173
 0C9A 10E0              ldi R17,>L173
 0C9C 0E940000          xcall elpm32
 0CA0 80E0              ldi R24,<_temps+304
 0CA2 90E0              ldi R25,>_temps+304
 0CA4 FD01              movw R30,R26
 0CA6 E80F              add R30,R24
 0CA8 F91F              adc R31,R25
 0CAA FA93              st -y,R31
 0CAC EA93              st -y,R30
 0CAE 0E940000          xcall fpmule1x
 0CB2 8A01              movw R16,R20
 0CB4 9B01              movw R18,R22
 0CB6 0E940000          xcall fpsub2
 0CBA 80E0              ldi R24,<_temps+300
 0CBC 90E0              ldi R25,>_temps+300
 0CBE FD01              movw R30,R26
 0CC0 E80F              add R30,R24
 0CC2 F91F              adc R31,R25
 0CC4 FA93              st -y,R31
 0CC6 EA93              st -y,R30
 0CC8 0E940000          xcall fpadd1x
 0CCC 8301              movw R16,R6
 0CCE 9401              movw R18,R8
 0CD0 0E940000          xcall fpmule2x
 0CD4 8101              movw R16,R2
 0CD6 9201              movw R18,R4
 0CD8 0E940000          xcall fpadd2
 0CDC 80E0              ldi R24,<_temps+320
 0CDE 90E0              ldi R25,>_temps+320
 0CE0 FD01              movw R30,R26
 0CE2 E80F              add R30,R24
 0CE4 F91F              adc R31,R25
 0CE6 0083              std z+0,R16
 0CE8 1183              std z+1,R17
 0CEA 2283              std z+2,R18
 0CEC 3383              std z+3,R19
 0CEE                   .dbline 233
 0CEE           ;    temps[temp_n].err_last=temps[temp_n].err_next;
 0CEE 04E4              ldi R16,324
 0CF0 11E0              ldi R17,1
 0CF2 9501              movw R18,R10
 0CF4 0E940000          xcall empy16s
 0CF8 6801              movw R12,R16
 0CFA 80E0              ldi R24,<_temps+304
 0CFC 90E0              ldi R25,>_temps+304
 0CFE F601              movw R30,R12
 0D00 E80F              add R30,R24
 0D02 F91F              adc R31,R25
 0D04 2080              ldd R2,z+0
 0D06 3180              ldd R3,z+1
 0D08 4280              ldd R4,z+2
 0D0A 5380              ldd R5,z+3
 0D0C 80E0              ldi R24,<_temps+300
 0D0E 90E0              ldi R25,>_temps+300
 0D10 F601              movw R30,R12
 0D12 E80F              add R30,R24
 0D14 F91F              adc R31,R25
 0D16 2082              std z+0,R2
 0D18 3182              std z+1,R3
 0D1A 4282              std z+2,R4
 0D1C 5382              std z+3,R5
 0D1E                   .dbline 234
 0D1E           ;    temps[temp_n].err_next=temps[temp_n].err;
 0D1E 04E4              ldi R16,324
 0D20 11E0              ldi R17,1
 0D22 9501              movw R18,R10
 0D24 0E940000          xcall empy16s
 0D28 6801              movw R12,R16
 0D2A 80E0              ldi R24,<_temps+296
 0D2C 90E0              ldi R25,>_temps+296
 0D2E F601              movw R30,R12
 0D30 E80F              add R30,R24
 0D32 F91F              adc R31,R25
 0D34 2080              ldd R2,z+0
 0D36 3180              ldd R3,z+1
 0D38 4280              ldd R4,z+2
 0D3A 5380              ldd R5,z+3
 0D3C 80E0              ldi R24,<_temps+304
 0D3E 90E0              ldi R25,>_temps+304
 0D40 F601              movw R30,R12
 0D42 E80F              add R30,R24
 0D44 F91F              adc R31,R25
 0D46 2082              std z+0,R2
 0D48 3182              std z+1,R3
 0D4A 4282              std z+2,R4
 0D4C 5382              std z+3,R5
 0D4E                   .dbline 235
 0D4E           ;    temps[temp_n].incrementtemp=temps[temp_n].incrementtemp/2;
 0D4E 04E4              ldi R16,324
 0D50 11E0              ldi R17,1
 0D52 9501              movw R18,R10
 0D54 0E940000          xcall empy16s
 0D58 5801              movw R10,R16
 0D5A 80E0              ldi R24,<_temps+320
 0D5C 90E0              ldi R25,>_temps+320
 0D5E F501              movw R30,R10
 0D60 E80F              add R30,R24
 0D62 F91F              adc R31,R25
 0D64 2080              ldd R2,z+0
 0D66 3180              ldd R3,z+1
 0D68 4280              ldd R4,z+2
 0D6A 5380              ldd R5,z+3
 0D6C 00E0              ldi R16,<L173
 0D6E 10E0              ldi R17,>L173
 0D70 0E940000          xcall elpm32
 0D74 3A93              st -y,R19
 0D76 2A93              st -y,R18
 0D78 1A93              st -y,R17
 0D7A 0A93              st -y,R16
 0D7C 8101              movw R16,R2
 0D7E 9201              movw R18,R4
 0D80 0E940000          xcall fpdiv2
 0D84 80E0              ldi R24,<_temps+320
 0D86 90E0              ldi R25,>_temps+320
 0D88 F501              movw R30,R10
 0D8A E80F              add R30,R24
 0D8C F91F              adc R31,R25
 0D8E 0083              std z+0,R16
 0D90 1183              std z+1,R17
 0D92 2283              std z+2,R18
 0D94 3383              std z+3,R19
 0D96                   .dbline -2
 0D96           L159:
 0D96                   .dbline 0 ; func end
 0D96 0C940000          xjmp pop_xgsetF03C
 0D9A                   .dbsym r temp_n 10 i
 0D9A                   .dbend
 0D9A                   .dbfunc e PI_realize _PI_realize fV
 0D9A           ;         temp_n -> R10,R11
                        .even
 0D9A           _PI_realize::
 0D9A 0E940000          xcall push_xgset003C
 0D9E 5801              movw R10,R16
 0DA0                   .dbline -1
 0DA0                   .dbline 238
 0DA0           ; }
 0DA0           ; void PI_realize(uint temp_n)
 0DA0           ; {
 0DA0                   .dbline 239
 0DA0           ;    temps[temp_n].err=temps[temp_n].p_settemp-temps[temp_n].actualtemp;//这两个都在结构体中
 0DA0 04E4              ldi R16,324
 0DA2 11E0              ldi R17,1
 0DA4 9501              movw R18,R10
 0DA6 0E940000          xcall empy16s
 0DAA 2801              movw R4,R16
 0DAC 80E0              ldi R24,<_temps+278
 0DAE 90E0              ldi R25,>_temps+278
 0DB0 F201              movw R30,R4
 0DB2 E80F              add R30,R24
 0DB4 F91F              adc R31,R25
 0DB6 0081              ldd R16,z+0
 0DB8 1181              ldd R17,z+1
 0DBA 0E940000          xcall uint2fp
 0DBE 80E0              ldi R24,<_temps+292
 0DC0 90E0              ldi R25,>_temps+292
 0DC2 1201              movw R2,R4
 0DC4 280E              add R2,R24
 0DC6 391E              adc R3,R25
 0DC8 3A92              st -y,R3
 0DCA 2A92              st -y,R2
 0DCC 0E940000          xcall fpsub1
 0DD0 80E0              ldi R24,<_temps+296
 0DD2 90E0              ldi R25,>_temps+296
 0DD4 F201              movw R30,R4
 0DD6 E80F              add R30,R24
 0DD8 F91F              adc R31,R25
 0DDA 0083              std z+0,R16
 0DDC 1183              std z+1,R17
 0DDE 2283              std z+2,R18
 0DE0 3383              std z+3,R19
 0DE2                   .dbline 240
 0DE2           ;    temps[temp_n].incrementtemp=temps[temp_n].p_Kp*(temps[temp_n].err-temps[temp_n].p_err_next)+temps[temp_n].p_Ki*temps[temp_n].err;
 0DE2 04E4              ldi R16,324
 0DE4 11E0              ldi R17,1
 0DE6 9501              movw R18,R10
 0DE8 0E940000          xcall empy16s
 0DEC D801              movw R26,R16
 0DEE 80E0              ldi R24,<_temps+282
 0DF0 90E0              ldi R25,>_temps+282
 0DF2 FD01              movw R30,R26
 0DF4 E80F              add R30,R24
 0DF6 F91F              adc R31,R25
 0DF8 0081              ldd R16,z+0
 0DFA 1181              ldd R17,z+1
 0DFC 0E940000          xcall uint2fp
 0E00 1801              movw R2,R16
 0E02 2901              movw R4,R18
 0E04 80E0              ldi R24,<_temps+296
 0E06 90E0              ldi R25,>_temps+296
 0E08 FD01              movw R30,R26
 0E0A E80F              add R30,R24
 0E0C F91F              adc R31,R25
 0E0E 6080              ldd R6,z+0
 0E10 7180              ldd R7,z+1
 0E12 8280              ldd R8,z+2
 0E14 9380              ldd R9,z+3
 0E16 80E0              ldi R24,<_temps+280
 0E18 90E0              ldi R25,>_temps+280
 0E1A FD01              movw R30,R26
 0E1C E80F              add R30,R24
 0E1E F91F              adc R31,R25
 0E20 0081              ldd R16,z+0
 0E22 1181              ldd R17,z+1
 0E24 0E940000          xcall uint2fp
 0E28 3A93              st -y,R19
 0E2A 2A93              st -y,R18
 0E2C 1A93              st -y,R17
 0E2E 0A93              st -y,R16
 0E30 8301              movw R16,R6
 0E32 9401              movw R18,R8
 0E34 0E940000          xcall fpsub2x
 0E38 8101              movw R16,R2
 0E3A 9201              movw R18,R4
 0E3C 0E940000          xcall fpmule2
 0E40 1801              movw R2,R16
 0E42 2901              movw R4,R18
 0E44 80E0              ldi R24,<_temps+284
 0E46 90E0              ldi R25,>_temps+284
 0E48 FD01              movw R30,R26
 0E4A E80F              add R30,R24
 0E4C F91F              adc R31,R25
 0E4E 0081              ldd R16,z+0
 0E50 1181              ldd R17,z+1
 0E52 0E940000          xcall uint2fp
 0E56 80E0              ldi R24,<_temps+296
 0E58 90E0              ldi R25,>_temps+296
 0E5A 3D01              movw R6,R26
 0E5C 680E              add R6,R24
 0E5E 791E              adc R7,R25
 0E60 7A92              st -y,R7
 0E62 6A92              st -y,R6
 0E64 0E940000          xcall fpmule1x
 0E68 8101              movw R16,R2
 0E6A 9201              movw R18,R4
 0E6C 0E940000          xcall fpadd2
 0E70 80E0              ldi R24,<_temps+320
 0E72 90E0              ldi R25,>_temps+320
 0E74 FD01              movw R30,R26
 0E76 E80F              add R30,R24
 0E78 F91F              adc R31,R25
 0E7A 0083              std z+0,R16
 0E7C 1183              std z+1,R17
 0E7E 2283              std z+2,R18
 0E80 3383              std z+3,R19
 0E82                   .dbline 241
 0E82           ;    temps[temp_n].p_err_last=temps[temp_n].p_err_next;
 0E82 04E4              ldi R16,324
 0E84 11E0              ldi R17,1
 0E86 9501              movw R18,R10
 0E88 0E940000          xcall empy16s
 0E8C 6801              movw R12,R16
 0E8E 80E0              ldi R24,<_temps+280
 0E90 90E0              ldi R25,>_temps+280
 0E92 F601              movw R30,R12
 0E94 E80F              add R30,R24
 0E96 F91F              adc R31,R25
 0E98 2080              ldd R2,z+0
 0E9A 3180              ldd R3,z+1
 0E9C 80E0              ldi R24,<_temps+286
 0E9E 90E0              ldi R25,>_temps+286
 0EA0 F601              movw R30,R12
 0EA2 E80F              add R30,R24
 0EA4 F91F              adc R31,R25
 0EA6 3182              std z+1,R3
 0EA8 2082              std z+0,R2
 0EAA                   .dbline 242
 0EAA           ;    temps[temp_n].p_err_next=temps[temp_n].err;
 0EAA 04E4              ldi R16,324
 0EAC 11E0              ldi R17,1
 0EAE 9501              movw R18,R10
 0EB0 0E940000          xcall empy16s
 0EB4 6801              movw R12,R16
 0EB6 80E0              ldi R24,<_temps+296
 0EB8 90E0              ldi R25,>_temps+296
 0EBA F601              movw R30,R12
 0EBC E80F              add R30,R24
 0EBE F91F              adc R31,R25
 0EC0 0081              ldd R16,z+0
 0EC2 1181              ldd R17,z+1
 0EC4 2281              ldd R18,z+2
 0EC6 3381              ldd R19,z+3
 0EC8 0E940000          xcall fpint
 0ECC 80E0              ldi R24,<_temps+280
 0ECE 90E0              ldi R25,>_temps+280
 0ED0 F601              movw R30,R12
 0ED2 E80F              add R30,R24
 0ED4 F91F              adc R31,R25
 0ED6 1183              std z+1,R17
 0ED8 0083              std z+0,R16
 0EDA                   .dbline 243
 0EDA           ;    temps[temp_n].incrementtemp=temps[temp_n].incrementtemp/2;
 0EDA 04E4              ldi R16,324
 0EDC 11E0              ldi R17,1
 0EDE 9501              movw R18,R10
 0EE0 0E940000          xcall empy16s
 0EE4 5801              movw R10,R16
 0EE6 80E0              ldi R24,<_temps+320
 0EE8 90E0              ldi R25,>_temps+320
 0EEA F501              movw R30,R10
 0EEC E80F              add R30,R24
 0EEE F91F              adc R31,R25
 0EF0 2080              ldd R2,z+0
 0EF2 3180              ldd R3,z+1
 0EF4 4280              ldd R4,z+2
 0EF6 5380              ldd R5,z+3
 0EF8 00E0              ldi R16,<L173
 0EFA 10E0              ldi R17,>L173
 0EFC 0E940000          xcall elpm32
 0F00 3A93              st -y,R19
 0F02 2A93              st -y,R18
 0F04 1A93              st -y,R17
 0F06 0A93              st -y,R16
 0F08 8101              movw R16,R2
 0F0A 9201              movw R18,R4
 0F0C 0E940000          xcall fpdiv2
 0F10 80E0              ldi R24,<_temps+320
 0F12 90E0              ldi R25,>_temps+320
 0F14 F501              movw R30,R10
 0F16 E80F              add R30,R24
 0F18 F91F              adc R31,R25
 0F1A 0083              std z+0,R16
 0F1C 1183              std z+1,R17
 0F1E 2283              std z+2,R18
 0F20 3383              std z+3,R19
 0F22                   .dbline -2
 0F22           L180:
 0F22                   .dbline 0 ; func end
 0F22 0C940000          xjmp pop_xgset003C
 0F26                   .dbsym r temp_n 10 i
 0F26                   .dbend
                        .area lit(rom, con, rel)
 0000           L173:
 0000 00000040          .word 0x0,0x4000
 0004           L108:
 0004 0000C841          .word 0x0,0x41c8
 0008           L99:
 0008 00000000          .word 0x0,0x0
 000C           L63:
 000C 00002041          .word 0x0,0x4120
 0010           ; }
