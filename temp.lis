                        .module temp.c
                        .area text(rom, con, rel)
 0000                   .dbfile temp.c
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\temp.c
 0000                   .dbfunc e tempdata_init _tempdata_init fV
 0000           ;              i -> R20,R21
 0000           ;              j -> R22,R23
                        .even
 0000           _tempdata_init::
 0000 0E940000          xcall push_xgsetF000
 0004                   .dbline -1
 0004                   .dbline 6
 0004           ; #include<iom128v.h>
 0004           ; #include "temp.h"
 0004           ; #include "main.h"
 0004           ; #include "eeprom.h"
 0004           ; //开机初始化空间。全部置0,不初始化数据，等用户或EEPROM数据回填
 0004           ; void tempdata_init(void){
 0004                   .dbline 8
 0004           ;  uint i,j;
 0004           ;  for(i=0;i<4;i++){
 0004 4427              clr R20
 0006 5527              clr R21
 0008 2CC0              xjmp L5
 000A           L2:
 000A                   .dbline 8
 000A                   .dbline 9
 000A           ;     temps[i].flag=0;
 000A 0AE0              ldi R16,266
 000C 11E0              ldi R17,1
 000E 9A01              movw R18,R20
 0010 0E940000          xcall empy16s
 0014 80E0              ldi R24,<_temps
 0016 90E0              ldi R25,>_temps
 0018 F801              movw R30,R16
 001A E80F              add R30,R24
 001C F91F              adc R31,R25
 001E 2224              clr R2
 0020 3324              clr R3
 0022 3182              std z+1,R3
 0024 2082              std z+0,R2
 0026                   .dbline 10
 0026           ;       for(j=0;j<132;j++){
 0026 6627              clr R22
 0028 7727              clr R23
 002A 15C0              xjmp L9
 002C           L6:
 002C                   .dbline 10
 002C                   .dbline 11
 002C           ;        temps[i].temp_data[j]=0;
 002C 0AE0              ldi R16,266
 002E 11E0              ldi R17,1
 0030 9A01              movw R18,R20
 0032 0E940000          xcall empy16s
 0036 1801              movw R2,R16
 0038 80E0              ldi R24,<_temps+2
 003A 90E0              ldi R25,>_temps+2
 003C 280E              add R2,R24
 003E 391E              adc R3,R25
 0040 FB01              movw R30,R22
 0042 EE0F              lsl R30
 0044 FF1F              rol R31
 0046 E20D              add R30,R2
 0048 F31D              adc R31,R3
 004A 2224              clr R2
 004C 3324              clr R3
 004E 3182              std z+1,R3
 0050 2082              std z+0,R2
 0052                   .dbline 12
 0052           ;       }
 0052           L7:
 0052                   .dbline 10
 0052 6F5F              subi R22,255  ; offset = 1
 0054 7F4F              sbci R23,255
 0056           L9:
 0056                   .dbline 10
 0056 6438              cpi R22,132
 0058 E0E0              ldi R30,0
 005A 7E07              cpc R23,R30
 005C 38F3              brlo L6
 005E           X0:
 005E                   .dbline 13
 005E           ;  } 
 005E           L3:
 005E                   .dbline 8
 005E 4F5F              subi R20,255  ; offset = 1
 0060 5F4F              sbci R21,255
 0062           L5:
 0062                   .dbline 8
 0062 4430              cpi R20,4
 0064 E0E0              ldi R30,0
 0066 5E07              cpc R21,R30
 0068 80F2              brlo L2
 006A           X1:
 006A                   .dbline -2
 006A           L1:
 006A                   .dbline 0 ; func end
 006A 0C940000          xjmp pop_xgsetF000
 006E                   .dbsym r i 20 i
 006E                   .dbsym r j 22 i
 006E                   .dbend
 006E                   .dbfunc e data_recover _data_recover fV
 006E           ;          dataC -> R22,R23
 006E           ;              i -> R20,R21
 006E           ;              j -> R22,R23
                        .even
 006E           _data_recover::
 006E 0E940000          xcall push_xgsetF00C
 0072                   .dbline -1
 0072                   .dbline 15
 0072           ; }
 0072           ; void data_recover(void){
 0072                   .dbline 18
 0072           ;  uint i,j;
 0072           ;  uint dataC;
 0072           ;  for(i=0;i<4;i++){
 0072 4427              clr R20
 0074 5527              clr R21
 0076 46C0              xjmp L15
 0078           L12:
 0078                   .dbline 18
 0078                   .dbline 19
 0078           ;    dataC=EEPROM_read(i+1,0);//读取标记位
 0078 2227              clr R18
 007A 3327              clr R19
 007C 8A01              movw R16,R20
 007E 0F5F              subi R16,255  ; offset = 1
 0080 1F4F              sbci R17,255
 0082 0E940000          xcall _EEPROM_read
 0086 B801              movw R22,R16
 0088                   .dbline 20
 0088           ;    if(dataC==1){
 0088 0130              cpi R16,1
 008A E0E0              ldi R30,0
 008C 1E07              cpc R17,R30
 008E 09F0              breq X5
 0090 37C0              xjmp L16
 0092           X5:
 0092           X2:
 0092                   .dbline 20
 0092                   .dbline 21
 0092           ;       temps[i].flag=EEPROM_read(i+1,133);
 0092 25E8              ldi R18,133
 0094 30E0              ldi R19,0
 0096 8A01              movw R16,R20
 0098 0F5F              subi R16,255  ; offset = 1
 009A 1F4F              sbci R17,255
 009C 0E940000          xcall _EEPROM_read
 00A0 1801              movw R2,R16
 00A2 0AE0              ldi R16,266
 00A4 11E0              ldi R17,1
 00A6 9A01              movw R18,R20
 00A8 0E940000          xcall empy16s
 00AC 80E0              ldi R24,<_temps
 00AE 90E0              ldi R25,>_temps
 00B0 F801              movw R30,R16
 00B2 E80F              add R30,R24
 00B4 F91F              adc R31,R25
 00B6 3182              std z+1,R3
 00B8 2082              std z+0,R2
 00BA                   .dbline 22
 00BA           ;         for(j=0;j<132;j++){
 00BA 6627              clr R22
 00BC 7727              clr R23
 00BE 1CC0              xjmp L21
 00C0           L18:
 00C0                   .dbline 22
 00C0                   .dbline 23
 00C0           ;           temps[i].temp_data[j]=EEPROM_read(i+1,j+1);
 00C0 9B01              movw R18,R22
 00C2 2F5F              subi R18,255  ; offset = 1
 00C4 3F4F              sbci R19,255
 00C6 8A01              movw R16,R20
 00C8 0F5F              subi R16,255  ; offset = 1
 00CA 1F4F              sbci R17,255
 00CC 0E940000          xcall _EEPROM_read
 00D0 5801              movw R10,R16
 00D2 0AE0              ldi R16,266
 00D4 11E0              ldi R17,1
 00D6 9A01              movw R18,R20
 00D8 0E940000          xcall empy16s
 00DC 1801              movw R2,R16
 00DE 80E0              ldi R24,<_temps+2
 00E0 90E0              ldi R25,>_temps+2
 00E2 280E              add R2,R24
 00E4 391E              adc R3,R25
 00E6 FB01              movw R30,R22
 00E8 EE0F              lsl R30
 00EA FF1F              rol R31
 00EC E20D              add R30,R2
 00EE F31D              adc R31,R3
 00F0 B182              std z+1,R11
 00F2 A082              std z+0,R10
 00F4                   .dbline 24
 00F4           ;          }
 00F4           L19:
 00F4                   .dbline 22
 00F4 6F5F              subi R22,255  ; offset = 1
 00F6 7F4F              sbci R23,255
 00F8           L21:
 00F8                   .dbline 22
 00F8 6438              cpi R22,132
 00FA E0E0              ldi R30,0
 00FC 7E07              cpc R23,R30
 00FE 00F3              brlo L18
 0100           X3:
 0100                   .dbline 25
 0100           ;       }
 0100           L16:
 0100                   .dbline 26
 0100           ;  } 
 0100           L13:
 0100                   .dbline 18
 0100 4F5F              subi R20,255  ; offset = 1
 0102 5F4F              sbci R21,255
 0104           L15:
 0104                   .dbline 18
 0104 4430              cpi R20,4
 0106 E0E0              ldi R30,0
 0108 5E07              cpc R21,R30
 010A 08F4              brsh X6
 010C B5CF              xjmp L12
 010E           X6:
 010E           X4:
 010E                   .dbline -2
 010E           L11:
 010E                   .dbline 0 ; func end
 010E 0C940000          xjmp pop_xgsetF00C
 0112                   .dbsym r dataC 22 i
 0112                   .dbsym r i 20 i
 0112                   .dbsym r j 22 i
 0112                   .dbend
 0112                   .dbfunc e set_temp_data _set_temp_data fV
 0112           ;              j -> R20,R21
 0112           ;       dataCach -> R10,R11
 0112           ;              t -> R22,R23
                        .even
 0112           _set_temp_data::
 0112 0E940000          xcall push_xgsetF00C
 0116 5901              movw R10,R18
 0118 B801              movw R22,R16
 011A 2297              sbiw R28,2
 011C                   .dbline -1
 011C                   .dbline 29
 011C           ; }
 011C           ; //设置指定的数据,保存相关标志位
 011C           ; void set_temp_data(uint t,uint* dataCach){
 011C                   .dbline 31
 011C           ;     uint j;
 011C           ;       temps[t].flag=6;
 011C 0AE0              ldi R16,266
 011E 11E0              ldi R17,1
 0120 9B01              movw R18,R22
 0122 0E940000          xcall empy16s
 0126 80E0              ldi R24,<_temps
 0128 90E0              ldi R25,>_temps
 012A F801              movw R30,R16
 012C E80F              add R30,R24
 012E F91F              adc R31,R25
 0130 86E0              ldi R24,6
 0132 90E0              ldi R25,0
 0134 9183              std z+1,R25
 0136 8083              std z+0,R24
 0138                   .dbline 32
 0138           ;       EEPROM_write(t+1,0,0x01);
 0138 81E0              ldi R24,1
 013A 9983              std y+1,R25
 013C 8883              std y+0,R24
 013E 2227              clr R18
 0140 3327              clr R19
 0142 8B01              movw R16,R22
 0144 0F5F              subi R16,255  ; offset = 1
 0146 1F4F              sbci R17,255
 0148 0E940000          xcall _EEPROM_write
 014C                   .dbline 33
 014C           ;       EEPROM_write(t+1,133,6);
 014C 86E0              ldi R24,6
 014E 90E0              ldi R25,0
 0150 9983              std y+1,R25
 0152 8883              std y+0,R24
 0154 25E8              ldi R18,133
 0156 30E0              ldi R19,0
 0158 8B01              movw R16,R22
 015A 0F5F              subi R16,255  ; offset = 1
 015C 1F4F              sbci R17,255
 015E 0E940000          xcall _EEPROM_write
 0162                   .dbline 34
 0162           ;     for(j=0;j<132;j++){
 0162 4427              clr R20
 0164 5527              clr R21
 0166 35C0              xjmp L27
 0168           L24:
 0168                   .dbline 34
 0168                   .dbline 35
 0168           ;          temps[t].temp_data[j]=*(dataCach+j);
 0168 1A01              movw R2,R20
 016A 220C              lsl R2
 016C 331C              rol R3
 016E 2101              movw R4,R2
 0170 0AE0              ldi R16,266
 0172 11E0              ldi R17,1
 0174 9B01              movw R18,R22
 0176 0E940000          xcall empy16s
 017A 1801              movw R2,R16
 017C 80E0              ldi R24,<_temps+2
 017E 90E0              ldi R25,>_temps+2
 0180 280E              add R2,R24
 0182 391E              adc R3,R25
 0184 F201              movw R30,R4
 0186 E20D              add R30,R2
 0188 F31D              adc R31,R3
 018A D201              movw R26,R4
 018C AA0D              add R26,R10
 018E BB1D              adc R27,R11
 0190 2D90              ld R2,x+
 0192 3C90              ld R3,x
 0194 3182              std z+1,R3
 0196 2082              std z+0,R2
 0198                   .dbline 36
 0198           ;          EEPROM_write(t+1,j+1,temps[t].temp_data[j]);
 0198 0AE0              ldi R16,266
 019A 11E0              ldi R17,1
 019C 9B01              movw R18,R22
 019E 0E940000          xcall empy16s
 01A2 1801              movw R2,R16
 01A4 80E0              ldi R24,<_temps+2
 01A6 90E0              ldi R25,>_temps+2
 01A8 280E              add R2,R24
 01AA 391E              adc R3,R25
 01AC FA01              movw R30,R20
 01AE EE0F              lsl R30
 01B0 FF1F              rol R31
 01B2 E20D              add R30,R2
 01B4 F31D              adc R31,R3
 01B6 2080              ldd R2,z+0
 01B8 3180              ldd R3,z+1
 01BA 3982              std y+1,R3
 01BC 2882              std y+0,R2
 01BE 9A01              movw R18,R20
 01C0 2F5F              subi R18,255  ; offset = 1
 01C2 3F4F              sbci R19,255
 01C4 8B01              movw R16,R22
 01C6 0F5F              subi R16,255  ; offset = 1
 01C8 1F4F              sbci R17,255
 01CA 0E940000          xcall _EEPROM_write
 01CE                   .dbline 37
 01CE           ;       }
 01CE           L25:
 01CE                   .dbline 34
 01CE 4F5F              subi R20,255  ; offset = 1
 01D0 5F4F              sbci R21,255
 01D2           L27:
 01D2                   .dbline 34
 01D2 4438              cpi R20,132
 01D4 E0E0              ldi R30,0
 01D6 5E07              cpc R21,R30
 01D8 08F4              brsh X8
 01DA C6CF              xjmp L24
 01DC           X8:
 01DC           X7:
 01DC                   .dbline -2
 01DC           L23:
 01DC                   .dbline 0 ; func end
 01DC 2296              adiw R28,2
 01DE 0C940000          xjmp pop_xgsetF00C
 01E2                   .dbsym r j 20 i
 01E2                   .dbsym r dataCach 10 pi
 01E2                   .dbsym r t 22 i
 01E2                   .dbend
 01E2                   .dbfunc e reset_temp_data _reset_temp_data fV
 01E2           ;              j -> R20,R21
 01E2           ;              t -> R22,R23
                        .even
 01E2           _reset_temp_data::
 01E2 0E940000          xcall push_xgsetF000
 01E6 B801              movw R22,R16
 01E8 2297              sbiw R28,2
 01EA                   .dbline -1
 01EA                   .dbline 41
 01EA           ; }
 01EA           ; 
 01EA           ; //重置指定的数据,保存相关标志位
 01EA           ; void reset_temp_data(uint t){
 01EA                   .dbline 43
 01EA           ;     uint j;
 01EA           ;       temps[t].flag=0;
 01EA 0AE0              ldi R16,266
 01EC 11E0              ldi R17,1
 01EE 9B01              movw R18,R22
 01F0 0E940000          xcall empy16s
 01F4 80E0              ldi R24,<_temps
 01F6 90E0              ldi R25,>_temps
 01F8 F801              movw R30,R16
 01FA E80F              add R30,R24
 01FC F91F              adc R31,R25
 01FE 2224              clr R2
 0200 3324              clr R3
 0202 3182              std z+1,R3
 0204 2082              std z+0,R2
 0206                   .dbline 44
 0206           ;       EEPROM_write(t+1,0,0x00);
 0206 3982              std y+1,R3
 0208 2882              std y+0,R2
 020A 2227              clr R18
 020C 3327              clr R19
 020E 8B01              movw R16,R22
 0210 0F5F              subi R16,255  ; offset = 1
 0212 1F4F              sbci R17,255
 0214 0E940000          xcall _EEPROM_write
 0218                   .dbline 45
 0218           ;       EEPROM_write(t+1,133,0x00);
 0218 2224              clr R2
 021A 3324              clr R3
 021C 3982              std y+1,R3
 021E 2882              std y+0,R2
 0220 25E8              ldi R18,133
 0222 30E0              ldi R19,0
 0224 8B01              movw R16,R22
 0226 0F5F              subi R16,255  ; offset = 1
 0228 1F4F              sbci R17,255
 022A 0E940000          xcall _EEPROM_write
 022E                   .dbline 46
 022E           ;     for(j=0;j<132;j++){
 022E 4427              clr R20
 0230 5527              clr R21
 0232 1FC0              xjmp L34
 0234           L31:
 0234                   .dbline 46
 0234                   .dbline 47
 0234           ;          temps[t].temp_data[j]=0;
 0234 0AE0              ldi R16,266
 0236 11E0              ldi R17,1
 0238 9B01              movw R18,R22
 023A 0E940000          xcall empy16s
 023E 1801              movw R2,R16
 0240 80E0              ldi R24,<_temps+2
 0242 90E0              ldi R25,>_temps+2
 0244 280E              add R2,R24
 0246 391E              adc R3,R25
 0248 FA01              movw R30,R20
 024A EE0F              lsl R30
 024C FF1F              rol R31
 024E E20D              add R30,R2
 0250 F31D              adc R31,R3
 0252 2224              clr R2
 0254 3324              clr R3
 0256 3182              std z+1,R3
 0258 2082              std z+0,R2
 025A                   .dbline 48
 025A           ;          EEPROM_write(t+1,j+1,0);
 025A 3982              std y+1,R3
 025C 2882              std y+0,R2
 025E 9A01              movw R18,R20
 0260 2F5F              subi R18,255  ; offset = 1
 0262 3F4F              sbci R19,255
 0264 8B01              movw R16,R22
 0266 0F5F              subi R16,255  ; offset = 1
 0268 1F4F              sbci R17,255
 026A 0E940000          xcall _EEPROM_write
 026E                   .dbline 49
 026E           ;       }
 026E           L32:
 026E                   .dbline 46
 026E 4F5F              subi R20,255  ; offset = 1
 0270 5F4F              sbci R21,255
 0272           L34:
 0272                   .dbline 46
 0272 4438              cpi R20,132
 0274 E0E0              ldi R30,0
 0276 5E07              cpc R21,R30
 0278 E8F2              brlo L31
 027A           X9:
 027A                   .dbline -2
 027A           L30:
 027A                   .dbline 0 ; func end
 027A 2296              adiw R28,2
 027C 0C940000          xjmp pop_xgsetF000
 0280                   .dbsym r j 20 i
 0280                   .dbsym r t 22 i
 0280                   .dbend
 0280                   .dbfunc e set_all_start _set_all_start fV
 0280           ;              j -> R20,R21
                        .even
 0280           _set_all_start::
 0280 4A93              st -y,R20
 0282 5A93              st -y,R21
 0284 2297              sbiw R28,2
 0286                   .dbline -1
 0286                   .dbline 52
 0286           ; }
 0286           ; //温度全部开始工作。状态为停止和刚重置数据的可以开始
 0286           ; void set_all_start(void){
 0286                   .dbline 55
 0286           ;     uint j;
 0286           ;       
 0286           ;     for(j=0;j<4;j++){
 0286 4427              clr R20
 0288 5527              clr R21
 028A 2EC0              xjmp L40
 028C           L37:
 028C                   .dbline 55
 028C                   .dbline 56
 028C           ;          if(temps[j].flag==3 || temps[j].flag==6){
 028C 0AE0              ldi R16,266
 028E 11E0              ldi R17,1
 0290 9A01              movw R18,R20
 0292 0E940000          xcall empy16s
 0296 80E0              ldi R24,<_temps
 0298 90E0              ldi R25,>_temps
 029A F801              movw R30,R16
 029C E80F              add R30,R24
 029E F91F              adc R31,R25
 02A0 2080              ldd R2,z+0
 02A2 3180              ldd R3,z+1
 02A4 C101              movw R24,R2
 02A6 8330              cpi R24,3
 02A8 E0E0              ldi R30,0
 02AA 9E07              cpc R25,R30
 02AC 21F0              breq L43
 02AE           X10:
 02AE 8630              cpi R24,6
 02B0 E0E0              ldi R30,0
 02B2 9E07              cpc R25,R30
 02B4 B9F4              brne L41
 02B6           X11:
 02B6           L43:
 02B6                   .dbline 56
 02B6                   .dbline 57
 02B6           ;            temps[j].flag=5;
 02B6 0AE0              ldi R16,266
 02B8 11E0              ldi R17,1
 02BA 9A01              movw R18,R20
 02BC 0E940000          xcall empy16s
 02C0 80E0              ldi R24,<_temps
 02C2 90E0              ldi R25,>_temps
 02C4 F801              movw R30,R16
 02C6 E80F              add R30,R24
 02C8 F91F              adc R31,R25
 02CA 85E0              ldi R24,5
 02CC 90E0              ldi R25,0
 02CE 9183              std z+1,R25
 02D0 8083              std z+0,R24
 02D2                   .dbline 58
 02D2           ;                EEPROM_write(j+1,133,5);
 02D2 9983              std y+1,R25
 02D4 8883              std y+0,R24
 02D6 25E8              ldi R18,133
 02D8 30E0              ldi R19,0
 02DA 8A01              movw R16,R20
 02DC 0F5F              subi R16,255  ; offset = 1
 02DE 1F4F              sbci R17,255
 02E0 0E940000          xcall _EEPROM_write
 02E4                   .dbline 59
 02E4           ;          }
 02E4           L41:
 02E4                   .dbline 60
 02E4           ;       }
 02E4           L38:
 02E4                   .dbline 55
 02E4 4F5F              subi R20,255  ; offset = 1
 02E6 5F4F              sbci R21,255
 02E8           L40:
 02E8                   .dbline 55
 02E8 4430              cpi R20,4
 02EA E0E0              ldi R30,0
 02EC 5E07              cpc R21,R30
 02EE 70F2              brlo L37
 02F0           X12:
 02F0                   .dbline -2
 02F0           L36:
 02F0                   .dbline 0 ; func end
 02F0 2296              adiw R28,2
 02F2 5991              ld R21,y+
 02F4 4991              ld R20,y+
 02F6 0895              ret
 02F8                   .dbsym r j 20 i
 02F8                   .dbend
 02F8                   .dbfunc e set_all_stop _set_all_stop fV
 02F8           ;              j -> R20,R21
                        .even
 02F8           _set_all_stop::
 02F8 4A93              st -y,R20
 02FA 5A93              st -y,R21
 02FC 2297              sbiw R28,2
 02FE                   .dbline -1
 02FE                   .dbline 63
 02FE           ; }
 02FE           ; //温度全部暂停.要运行的才会暂停
 02FE           ; void set_all_stop(void){
 02FE                   .dbline 66
 02FE           ;     uint j;
 02FE           ;       
 02FE           ;     for(j=0;j<4;j++){
 02FE 4427              clr R20
 0300 5527              clr R21
 0302 2EC0              xjmp L48
 0304           L45:
 0304                   .dbline 66
 0304                   .dbline 67
 0304           ;         if(temps[j].flag==1 || temps[j].flag==5){
 0304 0AE0              ldi R16,266
 0306 11E0              ldi R17,1
 0308 9A01              movw R18,R20
 030A 0E940000          xcall empy16s
 030E 80E0              ldi R24,<_temps
 0310 90E0              ldi R25,>_temps
 0312 F801              movw R30,R16
 0314 E80F              add R30,R24
 0316 F91F              adc R31,R25
 0318 2080              ldd R2,z+0
 031A 3180              ldd R3,z+1
 031C C101              movw R24,R2
 031E 8130              cpi R24,1
 0320 E0E0              ldi R30,0
 0322 9E07              cpc R25,R30
 0324 21F0              breq L51
 0326           X13:
 0326 8530              cpi R24,5
 0328 E0E0              ldi R30,0
 032A 9E07              cpc R25,R30
 032C B9F4              brne L49
 032E           X14:
 032E           L51:
 032E                   .dbline 67
 032E                   .dbline 68
 032E           ;            temps[j].flag=3;
 032E 0AE0              ldi R16,266
 0330 11E0              ldi R17,1
 0332 9A01              movw R18,R20
 0334 0E940000          xcall empy16s
 0338 80E0              ldi R24,<_temps
 033A 90E0              ldi R25,>_temps
 033C F801              movw R30,R16
 033E E80F              add R30,R24
 0340 F91F              adc R31,R25
 0342 83E0              ldi R24,3
 0344 90E0              ldi R25,0
 0346 9183              std z+1,R25
 0348 8083              std z+0,R24
 034A                   .dbline 69
 034A           ;                 EEPROM_write(j+1,133,3);
 034A 9983              std y+1,R25
 034C 8883              std y+0,R24
 034E 25E8              ldi R18,133
 0350 30E0              ldi R19,0
 0352 8A01              movw R16,R20
 0354 0F5F              subi R16,255  ; offset = 1
 0356 1F4F              sbci R17,255
 0358 0E940000          xcall _EEPROM_write
 035C                   .dbline 70
 035C           ;          }
 035C           L49:
 035C                   .dbline 71
 035C           ;       }
 035C           L46:
 035C                   .dbline 66
 035C 4F5F              subi R20,255  ; offset = 1
 035E 5F4F              sbci R21,255
 0360           L48:
 0360                   .dbline 66
 0360 4430              cpi R20,4
 0362 E0E0              ldi R30,0
 0364 5E07              cpc R21,R30
 0366 70F2              brlo L45
 0368           X15:
 0368                   .dbline -2
 0368           L44:
 0368                   .dbline 0 ; func end
 0368 2296              adiw R28,2
 036A 5991              ld R21,y+
 036C 4991              ld R20,y+
 036E 0895              ret
 0370                   .dbsym r j 20 i
 0370                   .dbend
 0370                   .dbfunc e set_start _set_start fV
 0370           ;              t -> R20,R21
                        .even
 0370           _set_start::
 0370 4A93              st -y,R20
 0372 5A93              st -y,R21
 0374 A801              movw R20,R16
 0376 2297              sbiw R28,2
 0378                   .dbline -1
 0378                   .dbline 74
 0378           ; }
 0378           ; //指定温度开始
 0378           ; void set_start(uint t){
 0378                   .dbline 75
 0378           ;  if(temps[t].flag==3 || temps[t].flag==6){
 0378 0AE0              ldi R16,266
 037A 11E0              ldi R17,1
 037C 9A01              movw R18,R20
 037E 0E940000          xcall empy16s
 0382 80E0              ldi R24,<_temps
 0384 90E0              ldi R25,>_temps
 0386 F801              movw R30,R16
 0388 E80F              add R30,R24
 038A F91F              adc R31,R25
 038C 2080              ldd R2,z+0
 038E 3180              ldd R3,z+1
 0390 C101              movw R24,R2
 0392 8330              cpi R24,3
 0394 E0E0              ldi R30,0
 0396 9E07              cpc R25,R30
 0398 21F0              breq L55
 039A           X16:
 039A 8630              cpi R24,6
 039C E0E0              ldi R30,0
 039E 9E07              cpc R25,R30
 03A0 B9F4              brne L53
 03A2           X17:
 03A2           L55:
 03A2                   .dbline 75
 03A2                   .dbline 76
 03A2           ;            temps[t].flag=5;
 03A2 0AE0              ldi R16,266
 03A4 11E0              ldi R17,1
 03A6 9A01              movw R18,R20
 03A8 0E940000          xcall empy16s
 03AC 80E0              ldi R24,<_temps
 03AE 90E0              ldi R25,>_temps
 03B0 F801              movw R30,R16
 03B2 E80F              add R30,R24
 03B4 F91F              adc R31,R25
 03B6 85E0              ldi R24,5
 03B8 90E0              ldi R25,0
 03BA 9183              std z+1,R25
 03BC 8083              std z+0,R24
 03BE                   .dbline 77
 03BE           ;                 EEPROM_write(t+1,133,5);
 03BE 9983              std y+1,R25
 03C0 8883              std y+0,R24
 03C2 25E8              ldi R18,133
 03C4 30E0              ldi R19,0
 03C6 8A01              movw R16,R20
 03C8 0F5F              subi R16,255  ; offset = 1
 03CA 1F4F              sbci R17,255
 03CC 0E940000          xcall _EEPROM_write
 03D0                   .dbline 78
 03D0           ;       }
 03D0           L53:
 03D0                   .dbline -2
 03D0           L52:
 03D0                   .dbline 0 ; func end
 03D0 2296              adiw R28,2
 03D2 5991              ld R21,y+
 03D4 4991              ld R20,y+
 03D6 0895              ret
 03D8                   .dbsym r t 20 i
 03D8                   .dbend
 03D8                   .dbfunc e set_stop _set_stop fV
 03D8           ;              t -> R20,R21
                        .even
 03D8           _set_stop::
 03D8 4A93              st -y,R20
 03DA 5A93              st -y,R21
 03DC A801              movw R20,R16
 03DE 2297              sbiw R28,2
 03E0                   .dbline -1
 03E0                   .dbline 81
 03E0           ; }
 03E0           ; //指定温度暂停
 03E0           ; void set_stop(uint t){
 03E0                   .dbline 82
 03E0           ;  if(temps[t].flag==1 || temps[t].flag==5){
 03E0 0AE0              ldi R16,266
 03E2 11E0              ldi R17,1
 03E4 9A01              movw R18,R20
 03E6 0E940000          xcall empy16s
 03EA 80E0              ldi R24,<_temps
 03EC 90E0              ldi R25,>_temps
 03EE F801              movw R30,R16
 03F0 E80F              add R30,R24
 03F2 F91F              adc R31,R25
 03F4 2080              ldd R2,z+0
 03F6 3180              ldd R3,z+1
 03F8 C101              movw R24,R2
 03FA 8130              cpi R24,1
 03FC E0E0              ldi R30,0
 03FE 9E07              cpc R25,R30
 0400 21F0              breq L59
 0402           X18:
 0402 8530              cpi R24,5
 0404 E0E0              ldi R30,0
 0406 9E07              cpc R25,R30
 0408 B9F4              brne L57
 040A           X19:
 040A           L59:
 040A                   .dbline 82
 040A                   .dbline 83
 040A           ;            temps[t].flag=3;
 040A 0AE0              ldi R16,266
 040C 11E0              ldi R17,1
 040E 9A01              movw R18,R20
 0410 0E940000          xcall empy16s
 0414 80E0              ldi R24,<_temps
 0416 90E0              ldi R25,>_temps
 0418 F801              movw R30,R16
 041A E80F              add R30,R24
 041C F91F              adc R31,R25
 041E 83E0              ldi R24,3
 0420 90E0              ldi R25,0
 0422 9183              std z+1,R25
 0424 8083              std z+0,R24
 0426                   .dbline 84
 0426           ;                EEPROM_write(t+1,133,3);
 0426 9983              std y+1,R25
 0428 8883              std y+0,R24
 042A 25E8              ldi R18,133
 042C 30E0              ldi R19,0
 042E 8A01              movw R16,R20
 0430 0F5F              subi R16,255  ; offset = 1
 0432 1F4F              sbci R17,255
 0434 0E940000          xcall _EEPROM_write
 0438                   .dbline 85
 0438           ;          }
 0438           L57:
 0438                   .dbline -2
 0438           L56:
 0438                   .dbline 0 ; func end
 0438 2296              adiw R28,2
 043A 5991              ld R21,y+
 043C 4991              ld R20,y+
 043E 0895              ret
 0440                   .dbsym r t 20 i
 0440                   .dbend
 0440           ; }
 0440           ; /***********************************************************************
 0440           ; * 函数功能：  PID参数初始化
 0440           ; * 参      数：        无
 0440           ; * 返 回  值： 无                      
 0440           ; * 备     注： 
 0440           ; **1
 0440           ; **********************************************************************/
 0440           ; /*void PID_init(void)
 0440           ; {
 0440           ;     pid.setspeed=0.0;
 0440           ;     pid.actualspeed=0.0;
 0440           ;     pid.err=0.0;
 0440           ;     pid.err_last=0.0;
 0440           ;     pid.err_next=0.0;
 0440           ;     pid.Kp=0.35;//0.35
 0440           ;     pid.Ki=0.03; //0.03      
 0440           ;     pid.Kd=0.2;//0.2
 0440           ;     pid.incrementspeed=0.0;
 0440           ; }
 0440           ; */
 0440           ; /***********************************************************************
 0440           ; * 函数功能：  PID计算
 0440           ; * 参      数：        实际速度
 0440           ; * 返 回  值： 无                      
 0440           ; * 备     注： 
 0440           ; **1
 0440           ; **********************************************************************/
 0440           ; /*float PID_realize(float speed)
 0440           ; {
 0440           ;    pid.setspeed=speed;
 0440           ;    pid.actualspeed=zengliang;
 0440           ;    pid.err=pid.setspeed-pid.actualspeed;
 0440           ;    pid.incrementspeed=pid.Kp*(pid.err-pid.err_next)+pid.Ki*pid.err+pid.Kd*(pid.err-
 0440           ; 
 0440           ; 2*pid.err_next+pid.err_last);
 0440           ;    pid.err_last=pid.err_next;
 0440           ;    pid.err_next=pid.err;
 0440           ;    pid.incrementspeed=pid.incrementspeed/2;
 0440           ;    return pid.incrementspeed;
 0440           ; }
 0440           ; */
