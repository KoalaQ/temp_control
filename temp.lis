                        .module temp.c
                        .area text(rom, con, rel)
 0000                   .dbfile temp.c
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\temp.c
 0000                   .dbfunc e tempcontrol _tempcontrol fV
 0000           ;              j -> R22,R23
 0000           ;              i -> R20,R21
                        .even
 0000           _tempcontrol::
 0000 0E940000          xcall push_xgsetF00C
 0004                   .dbline -1
 0004                   .dbline 10
 0004           ; #include<iom128v.h>
 0004           ; #include "temp.h"
 0004           ; #include "main.h"
 0004           ; #include "eeprom.h"
 0004           ; #include "lcd.h"
 0004           ; #include "max6675.h"
 0004           ; void PID_realize(uint temp_n);
 0004           ; void set_start_real(uint t);
 0004           ;  //执行温度控制数据更新操作，读取温度更新输出参数.会对温度数据故障更新
 0004           ; void tempcontrol(void){
 0004                   .dbline 12
 0004           ;    uint i,j;
 0004           ;       temp_l=0x00;
 0004 2224              clr R2
 0006 3324              clr R3
 0008 30920100          sts _temp_l+1,R3
 000C 20920000          sts _temp_l,R2
 0010                   .dbline 13
 0010           ;       temp_h=0x12;
 0010 82E1              ldi R24,18
 0012 90E0              ldi R25,0
 0014 90930100          sts _temp_h+1,R25
 0018 80930000          sts _temp_h,R24
 001C                   .dbline 14
 001C           ;    for(i=0;i<4;i++){
 001C 4427              clr R20
 001E 5527              clr R21
 0020 2DC1              xjmp L5
 0022           L2:
 0022                   .dbline 14
 0022                   .dbline 16
 0022           ;          //readTemp(i);//读取温度，一次验证有效性
 0022           ;        if(temp_l&0x04){//当前故障，下面就不用再运行啦
 0022 20900000          lds R2,_temp_l
 0026 30900100          lds R3,_temp_l+1
 002A 22FE              sbrs R2,2
 002C 0FC0              rjmp L6
 002E           X0:
 002E                   .dbline 16
 002E                   .dbline 17
 002E           ;                    temps[i].flag=2;
 002E 0AE3              ldi R16,314
 0030 11E0              ldi R17,1
 0032 9A01              movw R18,R20
 0034 0E940000          xcall empy16s
 0038 80E0              ldi R24,<_temps
 003A 90E0              ldi R25,>_temps
 003C F801              movw R30,R16
 003E E80F              add R30,R24
 0040 F91F              adc R31,R25
 0042 82E0              ldi R24,2
 0044 90E0              ldi R25,0
 0046 9183              std z+1,R25
 0048 8083              std z+0,R24
 004A                   .dbline 18
 004A           ;        }else{
 004A 16C1              xjmp L7
 004C           L6:
 004C                   .dbline 18
 004C                   .dbline 20
 004C           ;             //temps[i].actualtemp=0x55<<2;
 004C           ;                 temps[i].actualtemp=(temp_h&0x3F)<<4|(temp_l&0xF0)>>4;
 004C 0AE3              ldi R16,314
 004E 11E0              ldi R17,1
 0050 9A01              movw R18,R20
 0052 0E940000          xcall empy16s
 0056 80E0              ldi R24,<_temps+282
 0058 90E0              ldi R25,>_temps+282
 005A F801              movw R30,R16
 005C E80F              add R30,R24
 005E F91F              adc R31,R25
 0060 80910000          lds R24,_temp_l
 0064 90910100          lds R25,_temp_l+1
 0068 807F              andi R24,240
 006A 9070              andi R25,0
 006C 9695              lsr R25
 006E 8795              ror R24
 0070 9695              lsr R25
 0072 8795              ror R24
 0074 9695              lsr R25
 0076 8795              ror R24
 0078 9695              lsr R25
 007A 8795              ror R24
 007C 00910000          lds R16,_temp_h
 0080 10910100          lds R17,_temp_h+1
 0084 0F73              andi R16,63
 0086 1070              andi R17,0
 0088 000F              lsl R16
 008A 111F              rol R17
 008C 000F              lsl R16
 008E 111F              rol R17
 0090 000F              lsl R16
 0092 111F              rol R17
 0094 000F              lsl R16
 0096 111F              rol R17
 0098 082B              or R16,R24
 009A 192B              or R17,R25
 009C 0E940000          xcall uint2fp
 00A0 0083              std z+0,R16
 00A2 1183              std z+1,R17
 00A4 2283              std z+2,R18
 00A6 3383              std z+3,R19
 00A8                   .dbline 21
 00A8           ;          if(temps[i].flag==1)//运行中的
 00A8 0AE3              ldi R16,314
 00AA 11E0              ldi R17,1
 00AC 9A01              movw R18,R20
 00AE 0E940000          xcall empy16s
 00B2 80E0              ldi R24,<_temps
 00B4 90E0              ldi R25,>_temps
 00B6 F801              movw R30,R16
 00B8 E80F              add R30,R24
 00BA F91F              adc R31,R25
 00BC 8081              ldd R24,z+0
 00BE 9181              ldd R25,z+1
 00C0 8130              cpi R24,1
 00C2 E0E0              ldi R30,0
 00C4 9E07              cpc R25,R30
 00C6 09F0              breq X8
 00C8 9AC0              xjmp L9
 00CA           X8:
 00CA           X1:
 00CA                   .dbline 22
 00CA           ;             {   
 00CA                   .dbline 23
 00CA           ;                     for(j=0;j<9;j++){
 00CA 6627              clr R22
 00CC 7727              clr R23
 00CE 39C0              xjmp L14
 00D0           L11:
 00D0                   .dbline 23
 00D0                   .dbline 25
 00D0           ;                           //readTemp(i);//读取温度，需要读取10次左右
 00D0           ;                           temps[i].actualtemp+=(temp_h&0x3F)<<4+(temp_l&0xF0)>>4;
 00D0 0AE3              ldi R16,314
 00D2 11E0              ldi R17,1
 00D4 9A01              movw R18,R20
 00D6 0E940000          xcall empy16s
 00DA 1801              movw R2,R16
 00DC 80E0              ldi R24,<_temps+282
 00DE 90E0              ldi R25,>_temps+282
 00E0 280E              add R2,R24
 00E2 391E              adc R3,R25
 00E4 4101              movw R8,R2
 00E6 F101              movw R30,R2
 00E8 2080              ldd R2,z+0
 00EA 3180              ldd R3,z+1
 00EC 4280              ldd R4,z+2
 00EE 5380              ldd R5,z+3
 00F0 20910000          lds R18,_temp_l
 00F4 30910100          lds R19,_temp_l+1
 00F8 207F              andi R18,240
 00FA 3070              andi R19,0
 00FC 2C5F              subi R18,252  ; offset = 4
 00FE 3F4F              sbci R19,255
 0100 00910000          lds R16,_temp_h
 0104 10910100          lds R17,_temp_h+1
 0108 0F73              andi R16,63
 010A 1070              andi R17,0
 010C 0E940000          xcall lsl16
 0110 1695              lsr R17
 0112 0795              ror R16
 0114 1695              lsr R17
 0116 0795              ror R16
 0118 1695              lsr R17
 011A 0795              ror R16
 011C 1695              lsr R17
 011E 0795              ror R16
 0120 0E940000          xcall uint2fp
 0124 3A93              st -y,R19
 0126 2A93              st -y,R18
 0128 1A93              st -y,R17
 012A 0A93              st -y,R16
 012C 8101              movw R16,R2
 012E 9201              movw R18,R4
 0130 0E940000          xcall fpadd2
 0134 F401              movw R30,R8
 0136 0083              std z+0,R16
 0138 1183              std z+1,R17
 013A 2283              std z+2,R18
 013C 3383              std z+3,R19
 013E                   .dbline 26
 013E           ;                         }
 013E           L12:
 013E                   .dbline 23
 013E 6F5F              subi R22,255  ; offset = 1
 0140 7F4F              sbci R23,255
 0142           L14:
 0142                   .dbline 23
 0142 6930              cpi R22,9
 0144 E0E0              ldi R30,0
 0146 7E07              cpc R23,R30
 0148 08F4              brsh X9
 014A C2CF              xjmp L11
 014C           X9:
 014C           X2:
 014C                   .dbline 27
 014C           ;                           temps[i].actualtemp/=9;
 014C 0AE3              ldi R16,314
 014E 11E0              ldi R17,1
 0150 9A01              movw R18,R20
 0152 0E940000          xcall empy16s
 0156 1801              movw R2,R16
 0158 80E0              ldi R24,<_temps+282
 015A 90E0              ldi R25,>_temps+282
 015C 280E              add R2,R24
 015E 391E              adc R3,R25
 0160 3101              movw R6,R2
 0162 F101              movw R30,R2
 0164 2080              ldd R2,z+0
 0166 3180              ldd R3,z+1
 0168 4280              ldd R4,z+2
 016A 5380              ldd R5,z+3
 016C 00E0              ldi R16,<L17
 016E 10E0              ldi R17,>L17
 0170 0E940000          xcall elpm32
 0174 3A93              st -y,R19
 0176 2A93              st -y,R18
 0178 1A93              st -y,R17
 017A 0A93              st -y,R16
 017C 8101              movw R16,R2
 017E 9201              movw R18,R4
 0180 0E940000          xcall fpdiv2
 0184 F301              movw R30,R6
 0186 0083              std z+0,R16
 0188 1183              std z+1,R17
 018A 2283              std z+2,R18
 018C 3383              std z+3,R19
 018E                   .dbline 28
 018E           ;                       if(temps[i].status[0]%2==0){//恒温阶段，使用pid算法
 018E 0AE3              ldi R16,314
 0190 11E0              ldi R17,1
 0192 9A01              movw R18,R20
 0194 0E940000          xcall empy16s
 0198 80E0              ldi R24,<_temps+266
 019A 90E0              ldi R25,>_temps+266
 019C F801              movw R30,R16
 019E E80F              add R30,R24
 01A0 F91F              adc R31,R25
 01A2 2080              ldd R2,z+0
 01A4 3180              ldd R3,z+1
 01A6 20FC              sbrc R2,0
 01A8 01C0              rjmp L18
 01AA           X3:
 01AA                   .dbline 28
 01AA                   .dbline 29
 01AA           ;                 }else if(temps[i].settemp-temps[i].actualtemp<10){
 01AA 66C0              xjmp L10
 01AC           L18:
 01AC                   .dbline 29
 01AC 0AE3              ldi R16,314
 01AE 11E0              ldi R17,1
 01B0 9A01              movw R18,R20
 01B2 0E940000          xcall empy16s
 01B6 5801              movw R10,R16
 01B8 80E0              ldi R24,<_temps+278
 01BA 90E0              ldi R25,>_temps+278
 01BC F501              movw R30,R10
 01BE E80F              add R30,R24
 01C0 F91F              adc R31,R25
 01C2 0081              ldd R16,z+0
 01C4 1181              ldd R17,z+1
 01C6 2281              ldd R18,z+2
 01C8 3381              ldd R19,z+3
 01CA 80E0              ldi R24,<_temps+282
 01CC 90E0              ldi R25,>_temps+282
 01CE 1501              movw R2,R10
 01D0 280E              add R2,R24
 01D2 391E              adc R3,R25
 01D4 3A92              st -y,R3
 01D6 2A92              st -y,R2
 01D8 0E940000          xcall fpsub1
 01DC 1801              movw R2,R16
 01DE 2901              movw R4,R18
 01E0 00E0              ldi R16,<L25
 01E2 10E0              ldi R17,>L25
 01E4 0E940000          xcall elpm32
 01E8 3A93              st -y,R19
 01EA 2A93              st -y,R18
 01EC 1A93              st -y,R17
 01EE 0A93              st -y,R16
 01F0 8101              movw R16,R2
 01F2 9201              movw R18,R4
 01F4 0E940000          xcall fpcmp2
 01F8 0CF0              brlt X10
 01FA 3EC0              xjmp L10
 01FC           X10:
 01FC           X4:
 01FC                   .dbline 29
 01FC                   .dbline 31
 01FC           ;                       //升温或阶段，如果温度接近某个温度则开始使用PID算法。这个值要重新考虑
 01FC           ;                        }else {
 01FC                   .dbline 31
 01FC                   .dbline 33
 01FC           ;                       
 01FC           ;                        }
 01FC                   .dbline 34
 01FC           ;             }else if(temps[i].flag==5){//和1相同，
 01FC 3DC0              xjmp L10
 01FE           L9:
 01FE                   .dbline 34
 01FE 0AE3              ldi R16,314
 0200 11E0              ldi R17,1
 0202 9A01              movw R18,R20
 0204 0E940000          xcall empy16s
 0208 80E0              ldi R24,<_temps
 020A 90E0              ldi R25,>_temps
 020C F801              movw R30,R16
 020E E80F              add R30,R24
 0210 F91F              adc R31,R25
 0212 8081              ldd R24,z+0
 0214 9181              ldd R25,z+1
 0216 8530              cpi R24,5
 0218 E0E0              ldi R30,0
 021A 9E07              cpc R25,R30
 021C 79F4              brne L26
 021E           X5:
 021E                   .dbline 34
 021E                   .dbline 35
 021E           ;                    temps[i].flag=1;
 021E 0AE3              ldi R16,314
 0220 11E0              ldi R17,1
 0222 9A01              movw R18,R20
 0224 0E940000          xcall empy16s
 0228 80E0              ldi R24,<_temps
 022A 90E0              ldi R25,>_temps
 022C F801              movw R30,R16
 022E E80F              add R30,R24
 0230 F91F              adc R31,R25
 0232 81E0              ldi R24,1
 0234 90E0              ldi R25,0
 0236 9183              std z+1,R25
 0238 8083              std z+0,R24
 023A                   .dbline 36
 023A           ;             }else if(temps[i].flag==2){//故障的,设置标志位位未初始化，但是状态和温度数据可能存在、所以可以直接恢复
 023A 1EC0              xjmp L27
 023C           L26:
 023C                   .dbline 36
 023C 0AE3              ldi R16,314
 023E 11E0              ldi R17,1
 0240 9A01              movw R18,R20
 0242 0E940000          xcall empy16s
 0246 80E0              ldi R24,<_temps
 0248 90E0              ldi R25,>_temps
 024A F801              movw R30,R16
 024C E80F              add R30,R24
 024E F91F              adc R31,R25
 0250 8081              ldd R24,z+0
 0252 9181              ldd R25,z+1
 0254 8230              cpi R24,2
 0256 E0E0              ldi R30,0
 0258 9E07              cpc R25,R30
 025A 71F4              brne L28
 025C           X6:
 025C                   .dbline 36
 025C                   .dbline 37
 025C           ;                      temps[i].flag=0;
 025C 0AE3              ldi R16,314
 025E 11E0              ldi R17,1
 0260 9A01              movw R18,R20
 0262 0E940000          xcall empy16s
 0266 80E0              ldi R24,<_temps
 0268 90E0              ldi R25,>_temps
 026A F801              movw R30,R16
 026C E80F              add R30,R24
 026E F91F              adc R31,R25
 0270 2224              clr R2
 0272 3324              clr R3
 0274 3182              std z+1,R3
 0276 2082              std z+0,R2
 0278                   .dbline 38
 0278           ;             }
 0278           L28:
 0278           L27:
 0278           L10:
 0278                   .dbline 39
 0278           ;         }
 0278           L7:
 0278                   .dbline 40
 0278           ;    }
 0278           L3:
 0278                   .dbline 14
 0278 4F5F              subi R20,255  ; offset = 1
 027A 5F4F              sbci R21,255
 027C           L5:
 027C                   .dbline 14
 027C 4430              cpi R20,4
 027E E0E0              ldi R30,0
 0280 5E07              cpc R21,R30
 0282 08F4              brsh X11
 0284 CECE              xjmp L2
 0286           X11:
 0286           X7:
 0286                   .dbline -2
 0286           L1:
 0286                   .dbline 0 ; func end
 0286 0C940000          xjmp pop_xgsetF00C
 028A                   .dbsym r j 22 i
 028A                   .dbsym r i 20 i
 028A                   .dbend
 028A                   .dbfunc e tempdata_init _tempdata_init fV
 028A           ;              i -> R20,R21
 028A           ;              j -> R22,R23
                        .even
 028A           _tempdata_init::
 028A 0E940000          xcall push_xgsetF000
 028E                   .dbline -1
 028E                   .dbline 44
 028E           ; }
 028E           ; 
 028E           ; //开机初始化空间。全部置0,不初始化数据，等用户或EEPROM数据回填
 028E           ; void tempdata_init(void){
 028E                   .dbline 46
 028E           ;  uint i,j;
 028E           ;  for(i=0;i<4;i++){
 028E 4427              clr R20
 0290 5527              clr R21
 0292 06C1              xjmp L34
 0294           L31:
 0294                   .dbline 46
 0294                   .dbline 47
 0294           ;     temps[i].flag=0;
 0294 0AE3              ldi R16,314
 0296 11E0              ldi R17,1
 0298 9A01              movw R18,R20
 029A 0E940000          xcall empy16s
 029E 80E0              ldi R24,<_temps
 02A0 90E0              ldi R25,>_temps
 02A2 F801              movw R30,R16
 02A4 E80F              add R30,R24
 02A6 F91F              adc R31,R25
 02A8 2224              clr R2
 02AA 3324              clr R3
 02AC 3182              std z+1,R3
 02AE 2082              std z+0,R2
 02B0                   .dbline 48
 02B0           ;       for(j=0;j<132;j++){
 02B0 6627              clr R22
 02B2 7727              clr R23
 02B4 15C0              xjmp L38
 02B6           L35:
 02B6                   .dbline 48
 02B6                   .dbline 49
 02B6           ;        temps[i].temp_data[j]=0;
 02B6 0AE3              ldi R16,314
 02B8 11E0              ldi R17,1
 02BA 9A01              movw R18,R20
 02BC 0E940000          xcall empy16s
 02C0 1801              movw R2,R16
 02C2 80E0              ldi R24,<_temps+2
 02C4 90E0              ldi R25,>_temps+2
 02C6 280E              add R2,R24
 02C8 391E              adc R3,R25
 02CA FB01              movw R30,R22
 02CC EE0F              lsl R30
 02CE FF1F              rol R31
 02D0 E20D              add R30,R2
 02D2 F31D              adc R31,R3
 02D4 2224              clr R2
 02D6 3324              clr R3
 02D8 3182              std z+1,R3
 02DA 2082              std z+0,R2
 02DC                   .dbline 50
 02DC           ;       }
 02DC           L36:
 02DC                   .dbline 48
 02DC 6F5F              subi R22,255  ; offset = 1
 02DE 7F4F              sbci R23,255
 02E0           L38:
 02E0                   .dbline 48
 02E0 6438              cpi R22,132
 02E2 E0E0              ldi R30,0
 02E4 7E07              cpc R23,R30
 02E6 38F3              brlo L35
 02E8           X12:
 02E8                   .dbline 51
 02E8           ;       temps[i].status[0]=0;
 02E8 0AE3              ldi R16,314
 02EA 11E0              ldi R17,1
 02EC 9A01              movw R18,R20
 02EE 0E940000          xcall empy16s
 02F2 80E0              ldi R24,<_temps+266
 02F4 90E0              ldi R25,>_temps+266
 02F6 F801              movw R30,R16
 02F8 E80F              add R30,R24
 02FA F91F              adc R31,R25
 02FC 2224              clr R2
 02FE 3324              clr R3
 0300 3182              std z+1,R3
 0302 2082              std z+0,R2
 0304                   .dbline 52
 0304           ;       temps[i].status[1]=0;
 0304 0AE3              ldi R16,314
 0306 11E0              ldi R17,1
 0308 9A01              movw R18,R20
 030A 0E940000          xcall empy16s
 030E 80E0              ldi R24,<_temps+266+2
 0310 90E0              ldi R25,>_temps+266+2
 0312 F801              movw R30,R16
 0314 E80F              add R30,R24
 0316 F91F              adc R31,R25
 0318 2224              clr R2
 031A 3324              clr R3
 031C 3182              std z+1,R3
 031E 2082              std z+0,R2
 0320                   .dbline 53
 0320           ;       temps[i].status[2]=0;
 0320 0AE3              ldi R16,314
 0322 11E0              ldi R17,1
 0324 9A01              movw R18,R20
 0326 0E940000          xcall empy16s
 032A 80E0              ldi R24,<_temps+266+4
 032C 90E0              ldi R25,>_temps+266+4
 032E F801              movw R30,R16
 0330 E80F              add R30,R24
 0332 F91F              adc R31,R25
 0334 2224              clr R2
 0336 3324              clr R3
 0338 3182              std z+1,R3
 033A 2082              std z+0,R2
 033C                   .dbline 54
 033C           ;       temps[i].status[3]=0;
 033C 0AE3              ldi R16,314
 033E 11E0              ldi R17,1
 0340 9A01              movw R18,R20
 0342 0E940000          xcall empy16s
 0346 80E0              ldi R24,<_temps+266+6
 0348 90E0              ldi R25,>_temps+266+6
 034A F801              movw R30,R16
 034C E80F              add R30,R24
 034E F91F              adc R31,R25
 0350 2224              clr R2
 0352 3324              clr R3
 0354 3182              std z+1,R3
 0356 2082              std z+0,R2
 0358                   .dbline 55
 0358           ;       temps[i].settemp=0;
 0358 0AE3              ldi R16,314
 035A 11E0              ldi R17,1
 035C 9A01              movw R18,R20
 035E 0E940000          xcall empy16s
 0362 80E0              ldi R24,<_temps+278
 0364 90E0              ldi R25,>_temps+278
 0366 F801              movw R30,R16
 0368 E80F              add R30,R24
 036A F91F              adc R31,R25
 036C 00E0              ldi R16,<L48
 036E 10E0              ldi R17,>L48
 0370 0E940000          xcall elpm32
 0374 0083              std z+0,R16
 0376 1183              std z+1,R17
 0378 2283              std z+2,R18
 037A 3383              std z+3,R19
 037C                   .dbline 56
 037C           ;       temps[i].actualtemp=0;
 037C 0AE3              ldi R16,314
 037E 11E0              ldi R17,1
 0380 9A01              movw R18,R20
 0382 0E940000          xcall empy16s
 0386 80E0              ldi R24,<_temps+282
 0388 90E0              ldi R25,>_temps+282
 038A F801              movw R30,R16
 038C E80F              add R30,R24
 038E F91F              adc R31,R25
 0390 00E0              ldi R16,<L48
 0392 10E0              ldi R17,>L48
 0394 0E940000          xcall elpm32
 0398 0083              std z+0,R16
 039A 1183              std z+1,R17
 039C 2283              std z+2,R18
 039E 3383              std z+3,R19
 03A0                   .dbline 57
 03A0           ;       temps[i].err=0;
 03A0 0AE3              ldi R16,314
 03A2 11E0              ldi R17,1
 03A4 9A01              movw R18,R20
 03A6 0E940000          xcall empy16s
 03AA 80E0              ldi R24,<_temps+286
 03AC 90E0              ldi R25,>_temps+286
 03AE F801              movw R30,R16
 03B0 E80F              add R30,R24
 03B2 F91F              adc R31,R25
 03B4 00E0              ldi R16,<L48
 03B6 10E0              ldi R17,>L48
 03B8 0E940000          xcall elpm32
 03BC 0083              std z+0,R16
 03BE 1183              std z+1,R17
 03C0 2283              std z+2,R18
 03C2 3383              std z+3,R19
 03C4                   .dbline 58
 03C4           ;        temps[i].err_last=0;
 03C4 0AE3              ldi R16,314
 03C6 11E0              ldi R17,1
 03C8 9A01              movw R18,R20
 03CA 0E940000          xcall empy16s
 03CE 80E0              ldi R24,<_temps+290
 03D0 90E0              ldi R25,>_temps+290
 03D2 F801              movw R30,R16
 03D4 E80F              add R30,R24
 03D6 F91F              adc R31,R25
 03D8 00E0              ldi R16,<L48
 03DA 10E0              ldi R17,>L48
 03DC 0E940000          xcall elpm32
 03E0 0083              std z+0,R16
 03E2 1183              std z+1,R17
 03E4 2283              std z+2,R18
 03E6 3383              std z+3,R19
 03E8                   .dbline 59
 03E8           ;        temps[i].err_next=0;
 03E8 0AE3              ldi R16,314
 03EA 11E0              ldi R17,1
 03EC 9A01              movw R18,R20
 03EE 0E940000          xcall empy16s
 03F2 80E0              ldi R24,<_temps+294
 03F4 90E0              ldi R25,>_temps+294
 03F6 F801              movw R30,R16
 03F8 E80F              add R30,R24
 03FA F91F              adc R31,R25
 03FC 00E0              ldi R16,<L48
 03FE 10E0              ldi R17,>L48
 0400 0E940000          xcall elpm32
 0404 0083              std z+0,R16
 0406 1183              std z+1,R17
 0408 2283              std z+2,R18
 040A 3383              std z+3,R19
 040C                   .dbline 60
 040C           ;        temps[i].Kp=0.0;
 040C 0AE3              ldi R16,314
 040E 11E0              ldi R17,1
 0410 9A01              movw R18,R20
 0412 0E940000          xcall empy16s
 0416 80E0              ldi R24,<_temps+298
 0418 90E0              ldi R25,>_temps+298
 041A F801              movw R30,R16
 041C E80F              add R30,R24
 041E F91F              adc R31,R25
 0420 00E0              ldi R16,<L48
 0422 10E0              ldi R17,>L48
 0424 0E940000          xcall elpm32
 0428 0083              std z+0,R16
 042A 1183              std z+1,R17
 042C 2283              std z+2,R18
 042E 3383              std z+3,R19
 0430                   .dbline 61
 0430           ;        temps[i].Ki=0.0;
 0430 0AE3              ldi R16,314
 0432 11E0              ldi R17,1
 0434 9A01              movw R18,R20
 0436 0E940000          xcall empy16s
 043A 80E0              ldi R24,<_temps+302
 043C 90E0              ldi R25,>_temps+302
 043E F801              movw R30,R16
 0440 E80F              add R30,R24
 0442 F91F              adc R31,R25
 0444 00E0              ldi R16,<L48
 0446 10E0              ldi R17,>L48
 0448 0E940000          xcall elpm32
 044C 0083              std z+0,R16
 044E 1183              std z+1,R17
 0450 2283              std z+2,R18
 0452 3383              std z+3,R19
 0454                   .dbline 62
 0454           ;        temps[i].Kd=0.0;
 0454 0AE3              ldi R16,314
 0456 11E0              ldi R17,1
 0458 9A01              movw R18,R20
 045A 0E940000          xcall empy16s
 045E 80E0              ldi R24,<_temps+306
 0460 90E0              ldi R25,>_temps+306
 0462 F801              movw R30,R16
 0464 E80F              add R30,R24
 0466 F91F              adc R31,R25
 0468 00E0              ldi R16,<L48
 046A 10E0              ldi R17,>L48
 046C 0E940000          xcall elpm32
 0470 0083              std z+0,R16
 0472 1183              std z+1,R17
 0474 2283              std z+2,R18
 0476 3383              std z+3,R19
 0478                   .dbline 63
 0478           ;        temps[i].incrementtemp=25.0;
 0478 0AE3              ldi R16,314
 047A 11E0              ldi R17,1
 047C 9A01              movw R18,R20
 047E 0E940000          xcall empy16s
 0482 80E0              ldi R24,<_temps+310
 0484 90E0              ldi R25,>_temps+310
 0486 F801              movw R30,R16
 0488 E80F              add R30,R24
 048A F91F              adc R31,R25
 048C 00E0              ldi R16,<L57
 048E 10E0              ldi R17,>L57
 0490 0E940000          xcall elpm32
 0494 0083              std z+0,R16
 0496 1183              std z+1,R17
 0498 2283              std z+2,R18
 049A 3383              std z+3,R19
 049C                   .dbline 64
 049C           ;  } 
 049C           L32:
 049C                   .dbline 46
 049C 4F5F              subi R20,255  ; offset = 1
 049E 5F4F              sbci R21,255
 04A0           L34:
 04A0                   .dbline 46
 04A0 4430              cpi R20,4
 04A2 E0E0              ldi R30,0
 04A4 5E07              cpc R21,R30
 04A6 08F4              brsh X14
 04A8 F5CE              xjmp L31
 04AA           X14:
 04AA           X13:
 04AA                   .dbline -2
 04AA           L30:
 04AA                   .dbline 0 ; func end
 04AA 0C940000          xjmp pop_xgsetF000
 04AE                   .dbsym r i 20 i
 04AE                   .dbsym r j 22 i
 04AE                   .dbend
 04AE                   .dbfunc e data_recover _data_recover fV
 04AE           ;          dataC -> R22,R23
 04AE           ;              i -> R20,R21
 04AE           ;              j -> R22,R23
                        .even
 04AE           _data_recover::
 04AE 0E940000          xcall push_xgsetF00C
 04B2                   .dbline -1
 04B2                   .dbline 66
 04B2           ; }
 04B2           ; void data_recover(void){
 04B2                   .dbline 69
 04B2           ;  uint i,j;
 04B2           ;  uint dataC;
 04B2           ;  for(i=0;i<4;i++){
 04B2 4427              clr R20
 04B4 5527              clr R21
 04B6 46C0              xjmp L62
 04B8           L59:
 04B8                   .dbline 69
 04B8                   .dbline 70
 04B8           ;    dataC=EEPROM_read(i+1,0);//读取标记位
 04B8 2227              clr R18
 04BA 3327              clr R19
 04BC 8A01              movw R16,R20
 04BE 0F5F              subi R16,255  ; offset = 1
 04C0 1F4F              sbci R17,255
 04C2 0E940000          xcall _EEPROM_read
 04C6 B801              movw R22,R16
 04C8                   .dbline 71
 04C8           ;    if(dataC==1){
 04C8 0130              cpi R16,1
 04CA E0E0              ldi R30,0
 04CC 1E07              cpc R17,R30
 04CE 09F0              breq X18
 04D0 37C0              xjmp L63
 04D2           X18:
 04D2           X15:
 04D2                   .dbline 71
 04D2                   .dbline 72
 04D2           ;       temps[i].flag=EEPROM_read(i+1,133);
 04D2 25E8              ldi R18,133
 04D4 30E0              ldi R19,0
 04D6 8A01              movw R16,R20
 04D8 0F5F              subi R16,255  ; offset = 1
 04DA 1F4F              sbci R17,255
 04DC 0E940000          xcall _EEPROM_read
 04E0 1801              movw R2,R16
 04E2 0AE3              ldi R16,314
 04E4 11E0              ldi R17,1
 04E6 9A01              movw R18,R20
 04E8 0E940000          xcall empy16s
 04EC 80E0              ldi R24,<_temps
 04EE 90E0              ldi R25,>_temps
 04F0 F801              movw R30,R16
 04F2 E80F              add R30,R24
 04F4 F91F              adc R31,R25
 04F6 3182              std z+1,R3
 04F8 2082              std z+0,R2
 04FA                   .dbline 73
 04FA           ;         for(j=0;j<132;j++){
 04FA 6627              clr R22
 04FC 7727              clr R23
 04FE 1CC0              xjmp L68
 0500           L65:
 0500                   .dbline 73
 0500                   .dbline 74
 0500           ;           temps[i].temp_data[j]=EEPROM_read(i+1,j+1);
 0500 9B01              movw R18,R22
 0502 2F5F              subi R18,255  ; offset = 1
 0504 3F4F              sbci R19,255
 0506 8A01              movw R16,R20
 0508 0F5F              subi R16,255  ; offset = 1
 050A 1F4F              sbci R17,255
 050C 0E940000          xcall _EEPROM_read
 0510 5801              movw R10,R16
 0512 0AE3              ldi R16,314
 0514 11E0              ldi R17,1
 0516 9A01              movw R18,R20
 0518 0E940000          xcall empy16s
 051C 1801              movw R2,R16
 051E 80E0              ldi R24,<_temps+2
 0520 90E0              ldi R25,>_temps+2
 0522 280E              add R2,R24
 0524 391E              adc R3,R25
 0526 FB01              movw R30,R22
 0528 EE0F              lsl R30
 052A FF1F              rol R31
 052C E20D              add R30,R2
 052E F31D              adc R31,R3
 0530 B182              std z+1,R11
 0532 A082              std z+0,R10
 0534                   .dbline 75
 0534           ;          }
 0534           L66:
 0534                   .dbline 73
 0534 6F5F              subi R22,255  ; offset = 1
 0536 7F4F              sbci R23,255
 0538           L68:
 0538                   .dbline 73
 0538 6438              cpi R22,132
 053A E0E0              ldi R30,0
 053C 7E07              cpc R23,R30
 053E 00F3              brlo L65
 0540           X16:
 0540                   .dbline 76
 0540           ;       }
 0540           L63:
 0540                   .dbline 77
 0540           ;  } 
 0540           L60:
 0540                   .dbline 69
 0540 4F5F              subi R20,255  ; offset = 1
 0542 5F4F              sbci R21,255
 0544           L62:
 0544                   .dbline 69
 0544 4430              cpi R20,4
 0546 E0E0              ldi R30,0
 0548 5E07              cpc R21,R30
 054A 08F4              brsh X19
 054C B5CF              xjmp L59
 054E           X19:
 054E           X17:
 054E                   .dbline -2
 054E           L58:
 054E                   .dbline 0 ; func end
 054E 0C940000          xjmp pop_xgsetF00C
 0552                   .dbsym r dataC 22 i
 0552                   .dbsym r i 20 i
 0552                   .dbsym r j 22 i
 0552                   .dbend
 0552                   .dbfunc e set_temp_data _set_temp_data fV
 0552           ;              j -> R20,R21
 0552           ;       dataCach -> R10,R11
 0552           ;              t -> R22,R23
                        .even
 0552           _set_temp_data::
 0552 0E940000          xcall push_xgsetF00C
 0556 5901              movw R10,R18
 0558 B801              movw R22,R16
 055A 2297              sbiw R28,2
 055C                   .dbline -1
 055C                   .dbline 81
 055C           ; }
 055C           ; 
 055C           ; //设置指定的数据,保存相关标志位
 055C           ; void set_temp_data(uint t,uint* dataCach){
 055C                   .dbline 83
 055C           ;     uint j;
 055C           ;       temps[t].flag=6;
 055C 0AE3              ldi R16,314
 055E 11E0              ldi R17,1
 0560 9B01              movw R18,R22
 0562 0E940000          xcall empy16s
 0566 80E0              ldi R24,<_temps
 0568 90E0              ldi R25,>_temps
 056A F801              movw R30,R16
 056C E80F              add R30,R24
 056E F91F              adc R31,R25
 0570 86E0              ldi R24,6
 0572 90E0              ldi R25,0
 0574 9183              std z+1,R25
 0576 8083              std z+0,R24
 0578                   .dbline 84
 0578           ;       EEPROM_write(t+1,0,0x01);
 0578 81E0              ldi R24,1
 057A 9983              std y+1,R25
 057C 8883              std y+0,R24
 057E 2227              clr R18
 0580 3327              clr R19
 0582 8B01              movw R16,R22
 0584 0F5F              subi R16,255  ; offset = 1
 0586 1F4F              sbci R17,255
 0588 0E940000          xcall _EEPROM_write
 058C                   .dbline 85
 058C           ;       EEPROM_write(t+1,133,6);
 058C 86E0              ldi R24,6
 058E 90E0              ldi R25,0
 0590 9983              std y+1,R25
 0592 8883              std y+0,R24
 0594 25E8              ldi R18,133
 0596 30E0              ldi R19,0
 0598 8B01              movw R16,R22
 059A 0F5F              subi R16,255  ; offset = 1
 059C 1F4F              sbci R17,255
 059E 0E940000          xcall _EEPROM_write
 05A2                   .dbline 86
 05A2           ;     for(j=0;j<132;j++){
 05A2 4427              clr R20
 05A4 5527              clr R21
 05A6 1AC0              xjmp L74
 05A8           L71:
 05A8                   .dbline 86
 05A8                   .dbline 87
 05A8           ;          temps[t].temp_data[j]=*(dataCach+j);
 05A8 1A01              movw R2,R20
 05AA 220C              lsl R2
 05AC 331C              rol R3
 05AE 2101              movw R4,R2
 05B0 0AE3              ldi R16,314
 05B2 11E0              ldi R17,1
 05B4 9B01              movw R18,R22
 05B6 0E940000          xcall empy16s
 05BA 1801              movw R2,R16
 05BC 80E0              ldi R24,<_temps+2
 05BE 90E0              ldi R25,>_temps+2
 05C0 280E              add R2,R24
 05C2 391E              adc R3,R25
 05C4 F201              movw R30,R4
 05C6 E20D              add R30,R2
 05C8 F31D              adc R31,R3
 05CA D201              movw R26,R4
 05CC AA0D              add R26,R10
 05CE BB1D              adc R27,R11
 05D0 2D90              ld R2,x+
 05D2 3C90              ld R3,x
 05D4 3182              std z+1,R3
 05D6 2082              std z+0,R2
 05D8                   .dbline 89
 05D8           ;        //  EEPROM_write(t+1,j+1,temps[t].temp_data[j]);
 05D8           ;       }
 05D8           L72:
 05D8                   .dbline 86
 05D8 4F5F              subi R20,255  ; offset = 1
 05DA 5F4F              sbci R21,255
 05DC           L74:
 05DC                   .dbline 86
 05DC 4438              cpi R20,132
 05DE E0E0              ldi R30,0
 05E0 5E07              cpc R21,R30
 05E2 10F3              brlo L71
 05E4           X20:
 05E4                   .dbline -2
 05E4           L70:
 05E4                   .dbline 0 ; func end
 05E4 2296              adiw R28,2
 05E6 0C940000          xjmp pop_xgsetF00C
 05EA                   .dbsym r j 20 i
 05EA                   .dbsym r dataCach 10 pi
 05EA                   .dbsym r t 22 i
 05EA                   .dbend
 05EA                   .dbfunc e reset_temp_data _reset_temp_data fV
 05EA           ;              j -> R20,R21
 05EA           ;              t -> R22,R23
                        .even
 05EA           _reset_temp_data::
 05EA 0E940000          xcall push_xgsetF000
 05EE B801              movw R22,R16
 05F0 2297              sbiw R28,2
 05F2                   .dbline -1
 05F2                   .dbline 93
 05F2           ; }
 05F2           ; 
 05F2           ; //重置指定的数据,保存相关标志位
 05F2           ; void reset_temp_data(uint t){
 05F2                   .dbline 95
 05F2           ;     uint j;
 05F2           ;       temps[t].flag=0;
 05F2 0AE3              ldi R16,314
 05F4 11E0              ldi R17,1
 05F6 9B01              movw R18,R22
 05F8 0E940000          xcall empy16s
 05FC 80E0              ldi R24,<_temps
 05FE 90E0              ldi R25,>_temps
 0600 F801              movw R30,R16
 0602 E80F              add R30,R24
 0604 F91F              adc R31,R25
 0606 2224              clr R2
 0608 3324              clr R3
 060A 3182              std z+1,R3
 060C 2082              std z+0,R2
 060E                   .dbline 96
 060E           ;       EEPROM_write(t+1,0,0x00);
 060E 3982              std y+1,R3
 0610 2882              std y+0,R2
 0612 2227              clr R18
 0614 3327              clr R19
 0616 8B01              movw R16,R22
 0618 0F5F              subi R16,255  ; offset = 1
 061A 1F4F              sbci R17,255
 061C 0E940000          xcall _EEPROM_write
 0620                   .dbline 97
 0620           ;       EEPROM_write(t+1,133,0x00);
 0620 2224              clr R2
 0622 3324              clr R3
 0624 3982              std y+1,R3
 0626 2882              std y+0,R2
 0628 25E8              ldi R18,133
 062A 30E0              ldi R19,0
 062C 8B01              movw R16,R22
 062E 0F5F              subi R16,255  ; offset = 1
 0630 1F4F              sbci R17,255
 0632 0E940000          xcall _EEPROM_write
 0636                   .dbline 98
 0636           ;     for(j=0;j<132;j++){
 0636 4427              clr R20
 0638 5527              clr R21
 063A 15C0              xjmp L80
 063C           L77:
 063C                   .dbline 98
 063C                   .dbline 99
 063C           ;          temps[t].temp_data[j]=0;
 063C 0AE3              ldi R16,314
 063E 11E0              ldi R17,1
 0640 9B01              movw R18,R22
 0642 0E940000          xcall empy16s
 0646 1801              movw R2,R16
 0648 80E0              ldi R24,<_temps+2
 064A 90E0              ldi R25,>_temps+2
 064C 280E              add R2,R24
 064E 391E              adc R3,R25
 0650 FA01              movw R30,R20
 0652 EE0F              lsl R30
 0654 FF1F              rol R31
 0656 E20D              add R30,R2
 0658 F31D              adc R31,R3
 065A 2224              clr R2
 065C 3324              clr R3
 065E 3182              std z+1,R3
 0660 2082              std z+0,R2
 0662                   .dbline 101
 0662           ;        //  EEPROM_write(t+1,j+1,0);
 0662           ;       }
 0662           L78:
 0662                   .dbline 98
 0662 4F5F              subi R20,255  ; offset = 1
 0664 5F4F              sbci R21,255
 0666           L80:
 0666                   .dbline 98
 0666 4438              cpi R20,132
 0668 E0E0              ldi R30,0
 066A 5E07              cpc R21,R30
 066C 38F3              brlo L77
 066E           X21:
 066E                   .dbline -2
 066E           L76:
 066E                   .dbline 0 ; func end
 066E 2296              adiw R28,2
 0670 0C940000          xjmp pop_xgsetF000
 0674                   .dbsym r j 20 i
 0674                   .dbsym r t 22 i
 0674                   .dbend
 0674                   .dbfunc e set_all_start _set_all_start fV
 0674           ;              j -> R20,R21
                        .even
 0674           _set_all_start::
 0674 4A93              st -y,R20
 0676 5A93              st -y,R21
 0678                   .dbline -1
 0678                   .dbline 104
 0678           ; }
 0678           ; //温度全部开始工作。状态为停止和刚重置数据的可以开始
 0678           ; void set_all_start(void){
 0678                   .dbline 107
 0678           ;     uint j;
 0678           ;       
 0678           ;     for(j=0;j<4;j++){
 0678 4427              clr R20
 067A 5527              clr R21
 067C 25C0              xjmp L86
 067E           L83:
 067E                   .dbline 107
 067E                   .dbline 108
 067E           ;          if(temps[j].flag==3 || temps[j].flag==6){
 067E 0AE3              ldi R16,314
 0680 11E0              ldi R17,1
 0682 9A01              movw R18,R20
 0684 0E940000          xcall empy16s
 0688 80E0              ldi R24,<_temps
 068A 90E0              ldi R25,>_temps
 068C F801              movw R30,R16
 068E E80F              add R30,R24
 0690 F91F              adc R31,R25
 0692 2080              ldd R2,z+0
 0694 3180              ldd R3,z+1
 0696 C101              movw R24,R2
 0698 8330              cpi R24,3
 069A E0E0              ldi R30,0
 069C 9E07              cpc R25,R30
 069E 21F0              breq L89
 06A0           X22:
 06A0 8630              cpi R24,6
 06A2 E0E0              ldi R30,0
 06A4 9E07              cpc R25,R30
 06A6 71F4              brne L87
 06A8           X23:
 06A8           L89:
 06A8                   .dbline 108
 06A8                   .dbline 109
 06A8           ;            temps[j].flag=5;
 06A8 0AE3              ldi R16,314
 06AA 11E0              ldi R17,1
 06AC 9A01              movw R18,R20
 06AE 0E940000          xcall empy16s
 06B2 80E0              ldi R24,<_temps
 06B4 90E0              ldi R25,>_temps
 06B6 F801              movw R30,R16
 06B8 E80F              add R30,R24
 06BA F91F              adc R31,R25
 06BC 85E0              ldi R24,5
 06BE 90E0              ldi R25,0
 06C0 9183              std z+1,R25
 06C2 8083              std z+0,R24
 06C4                   .dbline 111
 06C4           ;               // EEPROM_write(j+1,133,5);
 06C4           ;          }
 06C4           L87:
 06C4                   .dbline 112
 06C4           ;       }
 06C4           L84:
 06C4                   .dbline 107
 06C4 4F5F              subi R20,255  ; offset = 1
 06C6 5F4F              sbci R21,255
 06C8           L86:
 06C8                   .dbline 107
 06C8 4430              cpi R20,4
 06CA E0E0              ldi R30,0
 06CC 5E07              cpc R21,R30
 06CE B8F2              brlo L83
 06D0           X24:
 06D0                   .dbline -2
 06D0           L82:
 06D0                   .dbline 0 ; func end
 06D0 5991              ld R21,y+
 06D2 4991              ld R20,y+
 06D4 0895              ret
 06D6                   .dbsym r j 20 i
 06D6                   .dbend
 06D6                   .dbfunc e set_all_stop _set_all_stop fV
 06D6           ;              j -> R20,R21
                        .even
 06D6           _set_all_stop::
 06D6 4A93              st -y,R20
 06D8 5A93              st -y,R21
 06DA                   .dbline -1
 06DA                   .dbline 115
 06DA           ; }
 06DA           ; //温度全部暂停.要运行的才会暂停
 06DA           ; void set_all_stop(void){
 06DA                   .dbline 118
 06DA           ;     uint j;
 06DA           ;       
 06DA           ;     for(j=0;j<4;j++){
 06DA 4427              clr R20
 06DC 5527              clr R21
 06DE 25C0              xjmp L94
 06E0           L91:
 06E0                   .dbline 118
 06E0                   .dbline 119
 06E0           ;         if(temps[j].flag==1 || temps[j].flag==5){
 06E0 0AE3              ldi R16,314
 06E2 11E0              ldi R17,1
 06E4 9A01              movw R18,R20
 06E6 0E940000          xcall empy16s
 06EA 80E0              ldi R24,<_temps
 06EC 90E0              ldi R25,>_temps
 06EE F801              movw R30,R16
 06F0 E80F              add R30,R24
 06F2 F91F              adc R31,R25
 06F4 2080              ldd R2,z+0
 06F6 3180              ldd R3,z+1
 06F8 C101              movw R24,R2
 06FA 8130              cpi R24,1
 06FC E0E0              ldi R30,0
 06FE 9E07              cpc R25,R30
 0700 21F0              breq L97
 0702           X25:
 0702 8530              cpi R24,5
 0704 E0E0              ldi R30,0
 0706 9E07              cpc R25,R30
 0708 71F4              brne L95
 070A           X26:
 070A           L97:
 070A                   .dbline 119
 070A                   .dbline 120
 070A           ;            temps[j].flag=3;
 070A 0AE3              ldi R16,314
 070C 11E0              ldi R17,1
 070E 9A01              movw R18,R20
 0710 0E940000          xcall empy16s
 0714 80E0              ldi R24,<_temps
 0716 90E0              ldi R25,>_temps
 0718 F801              movw R30,R16
 071A E80F              add R30,R24
 071C F91F              adc R31,R25
 071E 83E0              ldi R24,3
 0720 90E0              ldi R25,0
 0722 9183              std z+1,R25
 0724 8083              std z+0,R24
 0726                   .dbline 122
 0726           ;               //  EEPROM_write(j+1,133,3);
 0726           ;          }
 0726           L95:
 0726                   .dbline 123
 0726           ;       }
 0726           L92:
 0726                   .dbline 118
 0726 4F5F              subi R20,255  ; offset = 1
 0728 5F4F              sbci R21,255
 072A           L94:
 072A                   .dbline 118
 072A 4430              cpi R20,4
 072C E0E0              ldi R30,0
 072E 5E07              cpc R21,R30
 0730 B8F2              brlo L91
 0732           X27:
 0732                   .dbline -2
 0732           L90:
 0732                   .dbline 0 ; func end
 0732 5991              ld R21,y+
 0734 4991              ld R20,y+
 0736 0895              ret
 0738                   .dbsym r j 20 i
 0738                   .dbend
 0738                   .dbfunc e set_start _set_start fV
 0738           ;              t -> R10,R11
                        .even
 0738           _set_start::
 0738 AA92              st -y,R10
 073A BA92              st -y,R11
 073C 5801              movw R10,R16
 073E                   .dbline -1
 073E                   .dbline 126
 073E           ; }
 073E           ; //指定温度开始,预备
 073E           ; void set_start(uint t){
 073E                   .dbline 127
 073E           ;  if(temps[t].flag==3 || temps[t].flag==6){
 073E 0AE3              ldi R16,314
 0740 11E0              ldi R17,1
 0742 9501              movw R18,R10
 0744 0E940000          xcall empy16s
 0748 80E0              ldi R24,<_temps
 074A 90E0              ldi R25,>_temps
 074C F801              movw R30,R16
 074E E80F              add R30,R24
 0750 F91F              adc R31,R25
 0752 2080              ldd R2,z+0
 0754 3180              ldd R3,z+1
 0756 C101              movw R24,R2
 0758 8330              cpi R24,3
 075A E0E0              ldi R30,0
 075C 9E07              cpc R25,R30
 075E 21F0              breq L101
 0760           X28:
 0760 8630              cpi R24,6
 0762 E0E0              ldi R30,0
 0764 9E07              cpc R25,R30
 0766 71F4              brne L99
 0768           X29:
 0768           L101:
 0768                   .dbline 127
 0768                   .dbline 128
 0768           ;            temps[t].flag=5;
 0768 0AE3              ldi R16,314
 076A 11E0              ldi R17,1
 076C 9501              movw R18,R10
 076E 0E940000          xcall empy16s
 0772 80E0              ldi R24,<_temps
 0774 90E0              ldi R25,>_temps
 0776 F801              movw R30,R16
 0778 E80F              add R30,R24
 077A F91F              adc R31,R25
 077C 85E0              ldi R24,5
 077E 90E0              ldi R25,0
 0780 9183              std z+1,R25
 0782 8083              std z+0,R24
 0784                   .dbline 130
 0784           ;               ///  EEPROM_write(t+1,133,5);
 0784           ;       }
 0784           L99:
 0784                   .dbline -2
 0784           L98:
 0784                   .dbline 0 ; func end
 0784 B990              ld R11,y+
 0786 A990              ld R10,y+
 0788 0895              ret
 078A                   .dbsym r t 10 i
 078A                   .dbend
 078A                   .dbfunc e set_stop _set_stop fV
 078A           ;              t -> R10,R11
                        .even
 078A           _set_stop::
 078A AA92              st -y,R10
 078C BA92              st -y,R11
 078E 5801              movw R10,R16
 0790                   .dbline -1
 0790                   .dbline 134
 0790           ; }
 0790           ; 
 0790           ; //指定温度暂停
 0790           ; void set_stop(uint t){
 0790                   .dbline 135
 0790           ;  if(temps[t].flag==1 || temps[t].flag==5){
 0790 0AE3              ldi R16,314
 0792 11E0              ldi R17,1
 0794 9501              movw R18,R10
 0796 0E940000          xcall empy16s
 079A 80E0              ldi R24,<_temps
 079C 90E0              ldi R25,>_temps
 079E F801              movw R30,R16
 07A0 E80F              add R30,R24
 07A2 F91F              adc R31,R25
 07A4 2080              ldd R2,z+0
 07A6 3180              ldd R3,z+1
 07A8 C101              movw R24,R2
 07AA 8130              cpi R24,1
 07AC E0E0              ldi R30,0
 07AE 9E07              cpc R25,R30
 07B0 21F0              breq L105
 07B2           X30:
 07B2 8530              cpi R24,5
 07B4 E0E0              ldi R30,0
 07B6 9E07              cpc R25,R30
 07B8 71F4              brne L103
 07BA           X31:
 07BA           L105:
 07BA                   .dbline 135
 07BA                   .dbline 136
 07BA           ;            temps[t].flag=3;
 07BA 0AE3              ldi R16,314
 07BC 11E0              ldi R17,1
 07BE 9501              movw R18,R10
 07C0 0E940000          xcall empy16s
 07C4 80E0              ldi R24,<_temps
 07C6 90E0              ldi R25,>_temps
 07C8 F801              movw R30,R16
 07CA E80F              add R30,R24
 07CC F91F              adc R31,R25
 07CE 83E0              ldi R24,3
 07D0 90E0              ldi R25,0
 07D2 9183              std z+1,R25
 07D4 8083              std z+0,R24
 07D6                   .dbline 138
 07D6           ;               // EEPROM_write(t+1,133,3);
 07D6           ;          }
 07D6           L103:
 07D6                   .dbline -2
 07D6           L102:
 07D6                   .dbline 0 ; func end
 07D6 B990              ld R11,y+
 07D8 A990              ld R10,y+
 07DA 0895              ret
 07DC                   .dbsym r t 10 i
 07DC                   .dbend
 07DC                   .dbfunc e PID_realize _PID_realize fV
 07DC           ;         temp_n -> R10,R11
                        .even
 07DC           _PID_realize::
 07DC 0E940000          xcall push_xgsetF03C
 07E0 5801              movw R10,R16
 07E2                   .dbline -1
 07E2                   .dbline 148
 07E2           ; }
 07E2           ; /***********************************************************************
 07E2           ; * 函数功能：  PID计算
 07E2           ; * 参      数：        读入的温度
 07E2           ; * 返 回  值： 无      改变incrementtemp的值，输出函数获得这个值然后输出
 07E2           ; * 备     注： 
 07E2           ; **1
 07E2           ; **********************************************************************/
 07E2           ; void PID_realize(uint temp_n)
 07E2           ; {
 07E2                   .dbline 149
 07E2           ;    temps[temp_n].err=temps[temp_n].settemp-temps[temp_n].actualtemp;//这两个都在结构体中
 07E2 0AE3              ldi R16,314
 07E4 11E0              ldi R17,1
 07E6 9501              movw R18,R10
 07E8 0E940000          xcall empy16s
 07EC 2801              movw R4,R16
 07EE 80E0              ldi R24,<_temps+278
 07F0 90E0              ldi R25,>_temps+278
 07F2 F201              movw R30,R4
 07F4 E80F              add R30,R24
 07F6 F91F              adc R31,R25
 07F8 0081              ldd R16,z+0
 07FA 1181              ldd R17,z+1
 07FC 2281              ldd R18,z+2
 07FE 3381              ldd R19,z+3
 0800 80E0              ldi R24,<_temps+282
 0802 90E0              ldi R25,>_temps+282
 0804 1201              movw R2,R4
 0806 280E              add R2,R24
 0808 391E              adc R3,R25
 080A 3A92              st -y,R3
 080C 2A92              st -y,R2
 080E 0E940000          xcall fpsub1
 0812 80E0              ldi R24,<_temps+286
 0814 90E0              ldi R25,>_temps+286
 0816 F201              movw R30,R4
 0818 E80F              add R30,R24
 081A F91F              adc R31,R25
 081C 0083              std z+0,R16
 081E 1183              std z+1,R17
 0820 2283              std z+2,R18
 0822 3383              std z+3,R19
 0824                   .dbline 150
 0824           ;    temps[temp_n].incrementtemp=temps[temp_n].Kp*(temps[temp_n].err-temps[temp_n].err_next)+temps[temp_n].Ki*temps[temp_n].err+temps[temp_n].Kd*(temps[temp_n].err-2*temps[temp_n].err_next+temps[temp_n].err_last);
 0824 0AE3              ldi R16,314
 0826 11E0              ldi R17,1
 0828 9501              movw R18,R10
 082A 0E940000          xcall empy16s
 082E D801              movw R26,R16
 0830 80E0              ldi R24,<_temps+298
 0832 90E0              ldi R25,>_temps+298
 0834 FD01              movw R30,R26
 0836 E80F              add R30,R24
 0838 F91F              adc R31,R25
 083A 2080              ldd R2,z+0
 083C 3180              ldd R3,z+1
 083E 4280              ldd R4,z+2
 0840 5380              ldd R5,z+3
 0842 80E0              ldi R24,<_temps+286
 0844 90E0              ldi R25,>_temps+286
 0846 FD01              movw R30,R26
 0848 E80F              add R30,R24
 084A F91F              adc R31,R25
 084C 0081              ldd R16,z+0
 084E 1181              ldd R17,z+1
 0850 2281              ldd R18,z+2
 0852 3381              ldd R19,z+3
 0854 80E0              ldi R24,<_temps+294
 0856 90E0              ldi R25,>_temps+294
 0858 3D01              movw R6,R26
 085A 680E              add R6,R24
 085C 791E              adc R7,R25
 085E 7A92              st -y,R7
 0860 6A92              st -y,R6
 0862 0E940000          xcall fpsub1x
 0866 8101              movw R16,R2
 0868 9201              movw R18,R4
 086A 0E940000          xcall fpmule2
 086E 1801              movw R2,R16
 0870 2901              movw R4,R18
 0872 80E0              ldi R24,<_temps+302
 0874 90E0              ldi R25,>_temps+302
 0876 FD01              movw R30,R26
 0878 E80F              add R30,R24
 087A F91F              adc R31,R25
 087C 0081              ldd R16,z+0
 087E 1181              ldd R17,z+1
 0880 2281              ldd R18,z+2
 0882 3381              ldd R19,z+3
 0884 80E0              ldi R24,<_temps+286
 0886 90E0              ldi R25,>_temps+286
 0888 3D01              movw R6,R26
 088A 680E              add R6,R24
 088C 791E              adc R7,R25
 088E 7A92              st -y,R7
 0890 6A92              st -y,R6
 0892 0E940000          xcall fpmule1x
 0896 8101              movw R16,R2
 0898 9201              movw R18,R4
 089A 0E940000          xcall fpadd2
 089E 1801              movw R2,R16
 08A0 2901              movw R4,R18
 08A2 80E0              ldi R24,<_temps+306
 08A4 90E0              ldi R25,>_temps+306
 08A6 FD01              movw R30,R26
 08A8 E80F              add R30,R24
 08AA F91F              adc R31,R25
 08AC 6080              ldd R6,z+0
 08AE 7180              ldd R7,z+1
 08B0 8280              ldd R8,z+2
 08B2 9380              ldd R9,z+3
 08B4 80E0              ldi R24,<_temps+286
 08B6 90E0              ldi R25,>_temps+286
 08B8 FD01              movw R30,R26
 08BA E80F              add R30,R24
 08BC F91F              adc R31,R25
 08BE 4081              ldd R20,z+0
 08C0 5181              ldd R21,z+1
 08C2 6281              ldd R22,z+2
 08C4 7381              ldd R23,z+3
 08C6 00E0              ldi R16,<L120
 08C8 10E0              ldi R17,>L120
 08CA 0E940000          xcall elpm32
 08CE 80E0              ldi R24,<_temps+294
 08D0 90E0              ldi R25,>_temps+294
 08D2 FD01              movw R30,R26
 08D4 E80F              add R30,R24
 08D6 F91F              adc R31,R25
 08D8 FA93              st -y,R31
 08DA EA93              st -y,R30
 08DC 0E940000          xcall fpmule1x
 08E0 8A01              movw R16,R20
 08E2 9B01              movw R18,R22
 08E4 0E940000          xcall fpsub2
 08E8 80E0              ldi R24,<_temps+290
 08EA 90E0              ldi R25,>_temps+290
 08EC FD01              movw R30,R26
 08EE E80F              add R30,R24
 08F0 F91F              adc R31,R25
 08F2 FA93              st -y,R31
 08F4 EA93              st -y,R30
 08F6 0E940000          xcall fpadd1x
 08FA 8301              movw R16,R6
 08FC 9401              movw R18,R8
 08FE 0E940000          xcall fpmule2x
 0902 8101              movw R16,R2
 0904 9201              movw R18,R4
 0906 0E940000          xcall fpadd2
 090A 80E0              ldi R24,<_temps+310
 090C 90E0              ldi R25,>_temps+310
 090E FD01              movw R30,R26
 0910 E80F              add R30,R24
 0912 F91F              adc R31,R25
 0914 0083              std z+0,R16
 0916 1183              std z+1,R17
 0918 2283              std z+2,R18
 091A 3383              std z+3,R19
 091C                   .dbline 151
 091C           ;    temps[temp_n].err_last=temps[temp_n].err_next;
 091C 0AE3              ldi R16,314
 091E 11E0              ldi R17,1
 0920 9501              movw R18,R10
 0922 0E940000          xcall empy16s
 0926 6801              movw R12,R16
 0928 80E0              ldi R24,<_temps+294
 092A 90E0              ldi R25,>_temps+294
 092C F601              movw R30,R12
 092E E80F              add R30,R24
 0930 F91F              adc R31,R25
 0932 2080              ldd R2,z+0
 0934 3180              ldd R3,z+1
 0936 4280              ldd R4,z+2
 0938 5380              ldd R5,z+3
 093A 80E0              ldi R24,<_temps+290
 093C 90E0              ldi R25,>_temps+290
 093E F601              movw R30,R12
 0940 E80F              add R30,R24
 0942 F91F              adc R31,R25
 0944 2082              std z+0,R2
 0946 3182              std z+1,R3
 0948 4282              std z+2,R4
 094A 5382              std z+3,R5
 094C                   .dbline 152
 094C           ;    temps[temp_n].err_next=temps[temp_n].err;
 094C 0AE3              ldi R16,314
 094E 11E0              ldi R17,1
 0950 9501              movw R18,R10
 0952 0E940000          xcall empy16s
 0956 6801              movw R12,R16
 0958 80E0              ldi R24,<_temps+286
 095A 90E0              ldi R25,>_temps+286
 095C F601              movw R30,R12
 095E E80F              add R30,R24
 0960 F91F              adc R31,R25
 0962 2080              ldd R2,z+0
 0964 3180              ldd R3,z+1
 0966 4280              ldd R4,z+2
 0968 5380              ldd R5,z+3
 096A 80E0              ldi R24,<_temps+294
 096C 90E0              ldi R25,>_temps+294
 096E F601              movw R30,R12
 0970 E80F              add R30,R24
 0972 F91F              adc R31,R25
 0974 2082              std z+0,R2
 0976 3182              std z+1,R3
 0978 4282              std z+2,R4
 097A 5382              std z+3,R5
 097C                   .dbline 153
 097C           ;    temps[temp_n].incrementtemp=temps[temp_n].incrementtemp/2;
 097C 0AE3              ldi R16,314
 097E 11E0              ldi R17,1
 0980 9501              movw R18,R10
 0982 0E940000          xcall empy16s
 0986 5801              movw R10,R16
 0988 80E0              ldi R24,<_temps+310
 098A 90E0              ldi R25,>_temps+310
 098C F501              movw R30,R10
 098E E80F              add R30,R24
 0990 F91F              adc R31,R25
 0992 2080              ldd R2,z+0
 0994 3180              ldd R3,z+1
 0996 4280              ldd R4,z+2
 0998 5380              ldd R5,z+3
 099A 00E0              ldi R16,<L120
 099C 10E0              ldi R17,>L120
 099E 0E940000          xcall elpm32
 09A2 3A93              st -y,R19
 09A4 2A93              st -y,R18
 09A6 1A93              st -y,R17
 09A8 0A93              st -y,R16
 09AA 8101              movw R16,R2
 09AC 9201              movw R18,R4
 09AE 0E940000          xcall fpdiv2
 09B2 80E0              ldi R24,<_temps+310
 09B4 90E0              ldi R25,>_temps+310
 09B6 F501              movw R30,R10
 09B8 E80F              add R30,R24
 09BA F91F              adc R31,R25
 09BC 0083              std z+0,R16
 09BE 1183              std z+1,R17
 09C0 2283              std z+2,R18
 09C2 3383              std z+3,R19
 09C4                   .dbline -2
 09C4           L106:
 09C4                   .dbline 0 ; func end
 09C4 0C940000          xjmp pop_xgsetF03C
 09C8                   .dbsym r temp_n 10 i
 09C8                   .dbend
                        .area lit(rom, con, rel)
 0000           L120:
 0000 00000040          .word 0x0,0x4000
 0004           L57:
 0004 0000C841          .word 0x0,0x41c8
 0008           L48:
 0008 00000000          .word 0x0,0x0
 000C           L25:
 000C 00002041          .word 0x0,0x4120
 0010           L17:
 0010 00001041          .word 0x0,0x4110
 0014           ; }
