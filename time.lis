                        .module time.c
                        .area text(rom, con, rel)
 0000                   .dbfile time.c
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\time.c
 0000                   .dbfunc e Write1302 _Write1302 fV
 0000           ;           temp -> R10
 0000           ;              i -> R20
 0000           ;            dat -> R18
 0000           ;           addr -> R16
                        .even
 0000           _Write1302::
 0000 AA92              st -y,R10
 0002 4A93              st -y,R20
 0004                   .dbline -1
 0004                   .dbline 34
 0004           ; #include<iom128v.h>
 0004           ; #include "time.h"
 0004           ; #include "delay.h"
 0004           ; #include "lcd.h"
 0004           ; //寄存器宏定义
 0004           ; #define WRITE_SECOND 0x80
 0004           ; #define WRITE_MINUTE 0x82 
 0004           ; #define WRITE_HOUR 0x84
 0004           ; #define WRITE_DAY 0x86
 0004           ; #define WRITE_MONTH 0x88 
 0004           ; #define WRITE_WEEK 0x8A
 0004           ; #define WRITE_YEAE 0x8C
 0004           ; #define WRITE_PROTECT 0x8E 
 0004           ; 
 0004           ; #define READ_SECOND 0x81 
 0004           ; #define READ_MINUTE 0x83 
 0004           ; #define READ_HOUR 0x85 
 0004           ; #define READ_DAY 0x87
 0004           ; #define READ_MONTH 0x89
 0004           ; #define READ_WEEK 0x8B
 0004           ; #define READ_YEAE 0x8D
 0004           ; #define READ_PROTECT 0x8F
 0004           ; 
 0004           ; 
 0004           ; #define  SCLK_H  PORTD|=1<<PD0 //
 0004           ; #define  SCLK_L  PORTD&=~(1<<PD0) //
 0004           ; #define  DIO    PORTD&(~(1<<PD1)) //会获得PB1的值，判断是否等于0来确定值
 0004           ; #define  DIO_H   PORTD|=1<<PD1 //
 0004           ; #define  DIO_L  PORTD&=~(1<<PD1)  //
 0004           ; #define  CE_H    PORTD|=1<<PD2
 0004           ; #define  CE_L   PORTD&=~(1<<PD2) 
 0004           ; //地址、数据发送子程序
 0004           ; void Write1302  ( unsigned char  addr,unsigned char dat )
 0004           ; { 
 0004                   .dbline 36
 0004           ;   unsigned char  i,temp; 
 0004           ;   CE_L; //CE引脚为低，数据传送中止
 0004 9298              cbi 0x12,2
 0006                   .dbline 37
 0006           ;   SCLK_L;//清零时钟总线?
 0006 9098              cbi 0x12,0
 0008                   .dbline 38
 0008           ;   CE_H;//CE引脚为高，逻辑控制有效
 0008 929A              sbi 0x12,2
 000A                   .dbline 40
 000A           ;   //发送地址?
 000A           ;     for ( i=8; i>0; i-- ) //循环8次移位
 000A 48E0              ldi R20,8
 000C 0AC0              xjmp L5
 000E           L2:
 000E                   .dbline 41
 000E           ;     { 
 000E                   .dbline 42
 000E           ;        SCLK_L;
 000E 9098              cbi 0x12,0
 0010                   .dbline 43
 0010           ;          temp=addr;
 0010 A02E              mov R10,R16
 0012                   .dbline 44
 0012           ;        if((temp&0x01))//每次传输低字节
 0012 00FF              sbrs R16,0
 0014 02C0              rjmp L6
 0016           X0:
 0016                   .dbline 45
 0016           ;          {
 0016                   .dbline 46
 0016           ;               DIO_H;
 0016 919A              sbi 0x12,1
 0018                   .dbline 47
 0018           ;          }else{
 0018 01C0              xjmp L7
 001A           L6:
 001A                   .dbline 47
 001A                   .dbline 48
 001A           ;          DIO_L;
 001A 9198              cbi 0x12,1
 001C                   .dbline 49
 001C           ;          }
 001C           L7:
 001C                   .dbline 50
 001C           ;        addr>>=1;//右移一位
 001C 0695              lsr R16
 001E                   .dbline 51
 001E           ;                         SCLK_H;
 001E 909A              sbi 0x12,0
 0020                   .dbline 52
 0020           ;  }
 0020           L3:
 0020                   .dbline 40
 0020 4A95              dec R20
 0022           L5:
 0022                   .dbline 40
 0022 80E0              ldi R24,0
 0024 8417              cp R24,R20
 0026 98F3              brlo L2
 0028           X1:
 0028                   .dbline 54
 0028           ; //发送数据?
 0028           ; for(i=8;i>0;i--){
 0028 48E0              ldi R20,8
 002A 0AC0              xjmp L11
 002C           L8:
 002C                   .dbline 54
 002C                   .dbline 55
 002C           ;    SCLK_L; 
 002C 9098              cbi 0x12,0
 002E                   .dbline 56
 002E           ;    temp=dat;
 002E A22E              mov R10,R18
 0030                   .dbline 57
 0030           ;    if((temp&0x01))//每次传输低字节
 0030 20FF              sbrs R18,0
 0032 02C0              rjmp L12
 0034           X2:
 0034                   .dbline 58
 0034           ;          {
 0034                   .dbline 59
 0034           ;               DIO_H;
 0034 919A              sbi 0x12,1
 0036                   .dbline 60
 0036           ;          }else{
 0036 01C0              xjmp L13
 0038           L12:
 0038                   .dbline 60
 0038                   .dbline 61
 0038           ;          DIO_L;
 0038 9198              cbi 0x12,1
 003A                   .dbline 62
 003A           ;          }
 003A           L13:
 003A                   .dbline 63
 003A           ;       dat>>=1;
 003A 2695              lsr R18
 003C                   .dbline 64
 003C           ;     SCLK_H;
 003C 909A              sbi 0x12,0
 003E                   .dbline 65
 003E           ;   }
 003E           L9:
 003E                   .dbline 54
 003E 4A95              dec R20
 0040           L11:
 0040                   .dbline 54
 0040 80E0              ldi R24,0
 0042 8417              cp R24,R20
 0044 98F3              brlo L8
 0046           X3:
 0046                   .dbline 66
 0046           ;    CE_L;
 0046 9298              cbi 0x12,2
 0048                   .dbline -2
 0048           L1:
 0048                   .dbline 0 ; func end
 0048 4991              ld R20,y+
 004A A990              ld R10,y+
 004C 0895              ret
 004E                   .dbsym r temp 10 c
 004E                   .dbsym r i 20 c
 004E                   .dbsym r dat 18 c
 004E                   .dbsym r addr 16 c
 004E                   .dbend
 004E                   .dbfunc e Read1302 _Read1302 fc
 004E           ;           data -> R10
 004E           ;           temp -> R14
 004E           ;              i -> R20
 004E           ;           addr -> R12
                        .even
 004E           _Read1302::
 004E 0E940000          xcall push_xgset30FC
 0052 C02E              mov R12,R16
 0054                   .dbline -1
 0054                   .dbline 69
 0054           ; }
 0054           ; //数据读取子程序
 0054           ; unsigned char Read1302( unsigned char addr ){
 0054                   .dbline 70
 0054           ;    unsigned char i,temp,data=0;
 0054 AA24              clr R10
 0056                   .dbline 71
 0056           ;    CE_L;
 0056 9298              cbi 0x12,2
 0058                   .dbline 72
 0058           ;    SCLK_L;
 0058 9098              cbi 0x12,0
 005A                   .dbline 73
 005A           ;    CE_H;//发送地址?
 005A 929A              sbi 0x12,2
 005C                   .dbline 74
 005C           ;    for(i=8;i>0;i--)//循环8次移位
 005C 48E0              ldi R20,8
 005E 0AC0              xjmp L18
 0060           L15:
 0060                   .dbline 75
 0060           ;    {
 0060                   .dbline 77
 0060           ;       
 0060           ;          temp=addr;
 0060 EC2C              mov R14,R12
 0062                   .dbline 78
 0062           ;       if((temp&0x01))//每次传输低字节
 0062 C0FE              sbrs R12,0
 0064 02C0              rjmp L19
 0066           X4:
 0066                   .dbline 79
 0066           ;          {
 0066                   .dbline 80
 0066           ;               DIO_H;
 0066 919A              sbi 0x12,1
 0068                   .dbline 81
 0068           ;          }else{
 0068 01C0              xjmp L20
 006A           L19:
 006A                   .dbline 81
 006A                   .dbline 82
 006A           ;          DIO_L;
 006A 9198              cbi 0x12,1
 006C                   .dbline 83
 006C           ;          }
 006C           L20:
 006C                   .dbline 84
 006C           ;          SCLK_L;
 006C 9098              cbi 0x12,0
 006E                   .dbline 85
 006E           ;        addr>>=1;//右移一位
 006E C694              lsr R12
 0070                   .dbline 86
 0070           ;         SCLK_H;
 0070 909A              sbi 0x12,0
 0072                   .dbline 87
 0072           ;    }
 0072           L16:
 0072                   .dbline 74
 0072 4A95              dec R20
 0074           L18:
 0074                   .dbline 74
 0074 80E0              ldi R24,0
 0076 8417              cp R24,R20
 0078 98F3              brlo L15
 007A           X5:
 007A                   .dbline 89
 007A           ; //读取数据
 007A           ; DDRD&=0xFD;
 007A 81B3              in R24,0x11
 007C 8D7F              andi R24,253
 007E 81BB              out 0x11,R24
 0080                   .dbline 90
 0080           ;  for(i=0;i<8;i++)
 0080 4427              clr R20
 0082 0EC0              xjmp L24
 0084           L21:
 0084                   .dbline 91
 0084           ;   {
 0084                   .dbline 92
 0084           ;      SCLK_H;
 0084 909A              sbi 0x12,0
 0086                   .dbline 93
 0086           ;        SCLK_L;
 0086 9098              cbi 0x12,0
 0088                   .dbline 94
 0088           ;        delay_ms(1);
 0088 01E0              ldi R16,1
 008A 10E0              ldi R17,0
 008C 0E940000          xcall _delay_ms
 0090                   .dbline 95
 0090           ;        data |=(((PIND&(1<<PD1))>>1)<<i);
 0090 00B3              in R16,0x10
 0092 0270              andi R16,2
 0094 0695              lsr R16
 0096 142F              mov R17,R20
 0098 0E940000          xcall lsl8
 009C A02A              or R10,R16
 009E                   .dbline 97
 009E           ;            
 009E           ;     }
 009E           L22:
 009E                   .dbline 90
 009E 4395              inc R20
 00A0           L24:
 00A0                   .dbline 90
 00A0 4830              cpi R20,8
 00A2 80F3              brlo L21
 00A4           X6:
 00A4                   .dbline 99
 00A4           ;       ///PORTE=data;
 00A4           ;    DDRD|=0x07;
 00A4 81B3              in R24,0x11
 00A6 8760              ori R24,7
 00A8 81BB              out 0x11,R24
 00AA                   .dbline 100
 00AA           ;     CE_L;
 00AA 9298              cbi 0x12,2
 00AC                   .dbline 105
 00AC           ;     // temp = data>>4;
 00AC           ;    // data &= 0x0f;
 00AC           ;     //data = temp*10 + data;
 00AC           ;       
 00AC           ;     return(data);
 00AC 0A2D              mov R16,R10
 00AE                   .dbline -2
 00AE           L14:
 00AE                   .dbline 0 ; func end
 00AE 0C940000          xjmp pop_xgset30FC
 00B2                   .dbsym r data 10 c
 00B2                   .dbsym r temp 14 c
 00B2                   .dbsym r i 20 c
 00B2                   .dbsym r addr 12 c
 00B2                   .dbend
 00B2                   .dbfunc e Initial_time _Initial_time fV
                        .even
 00B2           _Initial_time::
 00B2                   .dbline -1
 00B2                   .dbline 108
 00B2           ; }
 00B2           ; //初始化DS1302?
 00B2           ; void Initial_time(void) {
 00B2                   .dbline 109
 00B2           ;    DDRD|=0x07;
 00B2 81B3              in R24,0x11
 00B4 8760              ori R24,7
 00B6 81BB              out 0x11,R24
 00B8                   .dbline 110
 00B8           ;    PORTD=0x00;
 00B8 2224              clr R2
 00BA 22BA              out 0x12,R2
 00BC                   .dbline 115
 00BC           ;   // Write1302(WRITE_PROTECT,0X00);//禁止写保护
 00BC           ;    //Write1302(WRITE_SECOND,0x00);//秒位初始化
 00BC           ;    //Write1302(WRITE_MINUTE,0x50);//分钟初始化
 00BC           ;   // Write1302(WRITE_HOUR,0xa4);//小时初始化
 00BC           ;    Write1302(WRITE_PROTECT,0x80);//写保护
 00BC 20E8              ldi R18,128
 00BE 0EE8              ldi R16,142
 00C0                   .dbline -2
 00C0           L25:
 00C0                   .dbline 0 ; func end
 00C0 9FCF              xjmp _Write1302
 00C2                   .dbend
 00C2                   .dbfunc e showTimeLcd _showTimeLcd fV
                        .even
 00C2           _showTimeLcd::
 00C2 AA92              st -y,R10
 00C4 4A93              st -y,R20
 00C6 2197              sbiw R28,1
 00C8                   .dbline -1
 00C8                   .dbline 118
 00C8           ; }
 00C8           ; //显示时间，时分秒
 00C8           ; void showTimeLcd(void){
 00C8                   .dbline 120
 00C8           ;    //PORTE=~Read1302(0x81);
 00C8           ;       if(Read1302(0x85)&0x80){
 00C8 05E8              ldi R16,133
 00CA C1DF              xcall _Read1302
 00CC 07FF              sbrs R16,7
 00CE 48C0              rjmp L27
 00D0           X7:
 00D0                   .dbline 120
 00D0                   .dbline 121
 00D0           ;       if( (Read1302(0x85)>>4)&0x01 )
 00D0 05E8              ldi R16,133
 00D2 BDDF              xcall _Read1302
 00D4 802F              mov R24,R16
 00D6 8295              swap R24
 00D8 8F70              andi R24,#0x0F
 00DA 8170              andi R24,1
 00DC B9F0              breq L29
 00DE           X8:
 00DE                   .dbline 122
 00DE           ;       {
 00DE                   .dbline 123
 00DE           ;        lcd_write_char(0x00,1,0x30|((Read1302(0x85)>>4)&0x01));
 00DE 05E8              ldi R16,133
 00E0 B6DF              xcall _Read1302
 00E2 A02E              mov R10,R16
 00E4 8A2D              mov R24,R10
 00E6 8295              swap R24
 00E8 8F70              andi R24,#0x0F
 00EA 8170              andi R24,1
 00EC 8063              ori R24,48
 00EE 8883              std y+0,R24
 00F0 21E0              ldi R18,1
 00F2 0027              clr R16
 00F4 0E940000          xcall _lcd_write_char
 00F8                   .dbline 124
 00F8           ;        lcd_write_char_con(1,0x30|(Read1302(0x85)&0x0F));
 00F8 05E8              ldi R16,133
 00FA A9DF              xcall _Read1302
 00FC 402F              mov R20,R16
 00FE 242F              mov R18,R20
 0100 2F70              andi R18,15
 0102 2063              ori R18,48
 0104 01E0              ldi R16,1
 0106 0E940000          xcall _lcd_write_char_con
 010A                   .dbline 125
 010A           ;       }else{
 010A 0FC0              xjmp L30
 010C           L29:
 010C                   .dbline 125
 010C                   .dbline 126
 010C           ;        lcd_write_char(0x00,1,' ' );
 010C 80E2              ldi R24,32
 010E 8883              std y+0,R24
 0110 21E0              ldi R18,1
 0112 0027              clr R16
 0114 0E940000          xcall _lcd_write_char
 0118                   .dbline 127
 0118           ;        lcd_write_char_con(1,0x30|(Read1302(0x85)&0x0F));
 0118 05E8              ldi R16,133
 011A 99DF              xcall _Read1302
 011C 402F              mov R20,R16
 011E 242F              mov R18,R20
 0120 2F70              andi R18,15
 0122 2063              ori R18,48
 0124 01E0              ldi R16,1
 0126 0E940000          xcall _lcd_write_char_con
 012A                   .dbline 128
 012A           ;       }
 012A           L30:
 012A                   .dbline 130
 012A           ; 
 012A           ;          if(((Read1302(0x85))&0x20)){
 012A 05E8              ldi R16,133
 012C 90DF              xcall _Read1302
 012E A02E              mov R10,R16
 0130 05FF              sbrs R16,5
 0132 0BC0              rjmp L31
 0134           X9:
 0134                   .dbline 130
 0134                   .dbline 131
 0134           ;             lcd_write_char(0x05,1, 'P');
 0134 80E5              ldi R24,80
 0136 8883              std y+0,R24
 0138 21E0              ldi R18,1
 013A 05E0              ldi R16,5
 013C 0E940000          xcall _lcd_write_char
 0140                   .dbline 132
 0140           ;            lcd_write_char_con(1, 'M');
 0140 2DE4              ldi R18,77
 0142 01E0              ldi R16,1
 0144 0E940000          xcall _lcd_write_char_con
 0148                   .dbline 133
 0148           ;          }else{
 0148 21C0              xjmp L28
 014A           L31:
 014A                   .dbline 133
 014A                   .dbline 134
 014A           ;            lcd_write_char(0x05,1, 'A');
 014A 81E4              ldi R24,65
 014C 8883              std y+0,R24
 014E 21E0              ldi R18,1
 0150 05E0              ldi R16,5
 0152 0E940000          xcall _lcd_write_char
 0156                   .dbline 135
 0156           ;            lcd_write_char_con(1, 'M');
 0156 2DE4              ldi R18,77
 0158 01E0              ldi R16,1
 015A 0E940000          xcall _lcd_write_char_con
 015E                   .dbline 136
 015E           ;           }
 015E                   .dbline 137
 015E           ;       }else{
 015E 16C0              xjmp L28
 0160           L27:
 0160                   .dbline 137
 0160                   .dbline 138
 0160           ;        lcd_write_char(0x00,1, 0x30|((Read1302(0x85)>>4)&0x03));
 0160 05E8              ldi R16,133
 0162 75DF              xcall _Read1302
 0164 A02E              mov R10,R16
 0166 8A2D              mov R24,R10
 0168 8295              swap R24
 016A 8F70              andi R24,#0x0F
 016C 8370              andi R24,3
 016E 8063              ori R24,48
 0170 8883              std y+0,R24
 0172 21E0              ldi R18,1
 0174 0027              clr R16
 0176 0E940000          xcall _lcd_write_char
 017A                   .dbline 139
 017A           ;        lcd_write_char_con(1,0x30|(Read1302(0x85)&0x0F)); 
 017A 05E8              ldi R16,133
 017C 68DF              xcall _Read1302
 017E 402F              mov R20,R16
 0180 242F              mov R18,R20
 0182 2F70              andi R18,15
 0184 2063              ori R18,48
 0186 01E0              ldi R16,1
 0188 0E940000          xcall _lcd_write_char_con
 018C                   .dbline 140
 018C           ;       }
 018C           L28:
 018C                   .dbline 142
 018C           ;       
 018C           ;       lcd_write_char(0x01,1,':');
 018C 8AE3              ldi R24,58
 018E 8883              std y+0,R24
 0190 21E0              ldi R18,1
 0192 01E0              ldi R16,1
 0194 0E940000          xcall _lcd_write_char
 0198                   .dbline 144
 0198           ;       
 0198           ;       lcd_write_char_con(1, 0x30|Read1302(0x83)>>4);
 0198 03E8              ldi R16,131
 019A 59DF              xcall _Read1302
 019C A02E              mov R10,R16
 019E 2A2D              mov R18,R10
 01A0 2295              swap R18
 01A2 2F70              andi R18,#0x0F
 01A4 2063              ori R18,48
 01A6 01E0              ldi R16,1
 01A8 0E940000          xcall _lcd_write_char_con
 01AC                   .dbline 145
 01AC           ;       lcd_write_char_con(1,0x30|(Read1302(0x83)&0x0F));
 01AC 03E8              ldi R16,131
 01AE 4FDF              xcall _Read1302
 01B0 402F              mov R20,R16
 01B2 242F              mov R18,R20
 01B4 2F70              andi R18,15
 01B6 2063              ori R18,48
 01B8 01E0              ldi R16,1
 01BA 0E940000          xcall _lcd_write_char_con
 01BE                   .dbline 147
 01BE           ; 
 01BE           ;       lcd_write_char_con(1,':');
 01BE 2AE3              ldi R18,58
 01C0 01E0              ldi R16,1
 01C2 0E940000          xcall _lcd_write_char_con
 01C6                   .dbline 149
 01C6           ;       
 01C6           ;        lcd_write_char_con(1, 0x30|(Read1302(0x81)>>4));
 01C6 01E8              ldi R16,129
 01C8 42DF              xcall _Read1302
 01CA A02E              mov R10,R16
 01CC 2A2D              mov R18,R10
 01CE 2295              swap R18
 01D0 2F70              andi R18,#0x0F
 01D2 2063              ori R18,48
 01D4 01E0              ldi R16,1
 01D6 0E940000          xcall _lcd_write_char_con
 01DA                   .dbline 150
 01DA           ;       lcd_write_char_con(1,0x30|(Read1302(0x81)&0x0F));
 01DA 01E8              ldi R16,129
 01DC 38DF              xcall _Read1302
 01DE 402F              mov R20,R16
 01E0 242F              mov R18,R20
 01E2 2F70              andi R18,15
 01E4 2063              ori R18,48
 01E6 01E0              ldi R16,1
 01E8 0E940000          xcall _lcd_write_char_con
 01EC                   .dbline -2
 01EC           L26:
 01EC                   .dbline 0 ; func end
 01EC 2196              adiw R28,1
 01EE 4991              ld R20,y+
 01F0 A990              ld R10,y+
 01F2 0895              ret
 01F4                   .dbend
 01F4                   .dbfunc e showTime_page _showTime_page fV
                        .even
 01F4           _showTime_page::
 01F4 AA92              st -y,R10
 01F6 4A93              st -y,R20
 01F8                   .dbline -1
 01F8                   .dbline 154
 01F8           ; }
 01F8           ; 
 01F8           ; //显示时间，年月日时分秒，用于page调用。没有改变AC，会接着写
 01F8           ; void showTime_page(void){
 01F8                   .dbline 157
 01F8           ;    //PORTE=~Read1302(0x81);
 01F8           ;    //年
 01F8           ;     lcd_write_str_con(1, "20");
 01F8 20E0              ldi R18,<L34
 01FA 30E0              ldi R19,>L34
 01FC 01E0              ldi R16,1
 01FE 0E940000          xcall _lcd_write_str_con
 0202                   .dbline 158
 0202           ;     lcd_write_char_con(1, 0x30|((Read1302(0x8D)>>4)&0x0F));
 0202 0DE8              ldi R16,141
 0204 24DF              xcall _Read1302
 0206 202F              mov R18,R16
 0208 2295              swap R18
 020A 2F70              andi R18,#0x0F
 020C 2F70              andi R18,15
 020E 2063              ori R18,48
 0210 01E0              ldi R16,1
 0212 0E940000          xcall _lcd_write_char_con
 0216                   .dbline 159
 0216           ;     lcd_write_char_con(1,0x30|(Read1302(0x8D)&0x0F)); 
 0216 0DE8              ldi R16,141
 0218 1ADF              xcall _Read1302
 021A 202F              mov R18,R16
 021C 2F70              andi R18,15
 021E 2063              ori R18,48
 0220 01E0              ldi R16,1
 0222 0E940000          xcall _lcd_write_char_con
 0226                   .dbline 160
 0226           ;       lcd_write_char_con(1,'-');
 0226 2DE2              ldi R18,45
 0228 01E0              ldi R16,1
 022A 0E940000          xcall _lcd_write_char_con
 022E                   .dbline 162
 022E           ;        //月
 022E           ;        lcd_write_char_con(1, 0x30|((Read1302(0x89)>>4)&0x01));
 022E 09E8              ldi R16,137
 0230 0EDF              xcall _Read1302
 0232 A02E              mov R10,R16
 0234 2A2D              mov R18,R10
 0236 2295              swap R18
 0238 2F70              andi R18,#0x0F
 023A 2170              andi R18,1
 023C 2063              ori R18,48
 023E 01E0              ldi R16,1
 0240 0E940000          xcall _lcd_write_char_con
 0244                   .dbline 163
 0244           ;      lcd_write_char_con(1,0x30|(Read1302(0x89)&0x0F)); 
 0244 09E8              ldi R16,137
 0246 03DF              xcall _Read1302
 0248 402F              mov R20,R16
 024A 242F              mov R18,R20
 024C 2F70              andi R18,15
 024E 2063              ori R18,48
 0250 01E0              ldi R16,1
 0252 0E940000          xcall _lcd_write_char_con
 0256                   .dbline 164
 0256           ;        lcd_write_char_con(1,'-');
 0256 2DE2              ldi R18,45
 0258 01E0              ldi R16,1
 025A 0E940000          xcall _lcd_write_char_con
 025E                   .dbline 166
 025E           ;        //日
 025E           ;        lcd_write_char_con(1, 0x30|((Read1302(0x87)>>4)&0x03));
 025E 07E8              ldi R16,135
 0260 F6DE              xcall _Read1302
 0262 A02E              mov R10,R16
 0264 2A2D              mov R18,R10
 0266 2295              swap R18
 0268 2F70              andi R18,#0x0F
 026A 2370              andi R18,3
 026C 2063              ori R18,48
 026E 01E0              ldi R16,1
 0270 0E940000          xcall _lcd_write_char_con
 0274                   .dbline 167
 0274           ;      lcd_write_char_con(1,0x30|(Read1302(0x87)&0x0F)); 
 0274 07E8              ldi R16,135
 0276 EBDE              xcall _Read1302
 0278 402F              mov R20,R16
 027A 242F              mov R18,R20
 027C 2F70              andi R18,15
 027E 2063              ori R18,48
 0280 01E0              ldi R16,1
 0282 0E940000          xcall _lcd_write_char_con
 0286                   .dbline 168
 0286           ;        lcd_write_char_con(1,' ');
 0286 20E2              ldi R18,32
 0288 01E0              ldi R16,1
 028A 0E940000          xcall _lcd_write_char_con
 028E                   .dbline 170
 028E           ;       //时
 028E           ;        lcd_write_char_con(1, 0x30|((Read1302(0x85)>>4)&0x03));
 028E 05E8              ldi R16,133
 0290 DEDE              xcall _Read1302
 0292 A02E              mov R10,R16
 0294 2A2D              mov R18,R10
 0296 2295              swap R18
 0298 2F70              andi R18,#0x0F
 029A 2370              andi R18,3
 029C 2063              ori R18,48
 029E 01E0              ldi R16,1
 02A0 0E940000          xcall _lcd_write_char_con
 02A4                   .dbline 171
 02A4           ;        lcd_write_char_con(1,0x30|(Read1302(0x85)&0x0F)); 
 02A4 05E8              ldi R16,133
 02A6 D3DE              xcall _Read1302
 02A8 402F              mov R20,R16
 02AA 242F              mov R18,R20
 02AC 2F70              andi R18,15
 02AE 2063              ori R18,48
 02B0 01E0              ldi R16,1
 02B2 0E940000          xcall _lcd_write_char_con
 02B6                   .dbline 172
 02B6           ;        lcd_write_char_con(1,':');
 02B6 2AE3              ldi R18,58
 02B8 01E0              ldi R16,1
 02BA 0E940000          xcall _lcd_write_char_con
 02BE                   .dbline 174
 02BE           ;       //分
 02BE           ;        lcd_write_char_con(1, 0x30|Read1302(0x83)>>4);
 02BE 03E8              ldi R16,131
 02C0 C6DE              xcall _Read1302
 02C2 A02E              mov R10,R16
 02C4 2A2D              mov R18,R10
 02C6 2295              swap R18
 02C8 2F70              andi R18,#0x0F
 02CA 2063              ori R18,48
 02CC 01E0              ldi R16,1
 02CE 0E940000          xcall _lcd_write_char_con
 02D2                   .dbline 175
 02D2           ;        lcd_write_char_con(1,0x30|(Read1302(0x83)&0x0F));
 02D2 03E8              ldi R16,131
 02D4 BCDE              xcall _Read1302
 02D6 402F              mov R20,R16
 02D8 242F              mov R18,R20
 02DA 2F70              andi R18,15
 02DC 2063              ori R18,48
 02DE 01E0              ldi R16,1
 02E0 0E940000          xcall _lcd_write_char_con
 02E4                   .dbline 176
 02E4           ;        lcd_write_char_con(1,':');
 02E4 2AE3              ldi R18,58
 02E6 01E0              ldi R16,1
 02E8 0E940000          xcall _lcd_write_char_con
 02EC                   .dbline 178
 02EC           ;       //秒
 02EC           ;        lcd_write_char_con(1, 0x30|(Read1302(0x81)>>4));
 02EC 01E8              ldi R16,129
 02EE AFDE              xcall _Read1302
 02F0 A02E              mov R10,R16
 02F2 2A2D              mov R18,R10
 02F4 2295              swap R18
 02F6 2F70              andi R18,#0x0F
 02F8 2063              ori R18,48
 02FA 01E0              ldi R16,1
 02FC 0E940000          xcall _lcd_write_char_con
 0300                   .dbline 179
 0300           ;        lcd_write_char_con(1,0x30|(Read1302(0x81)&0x0F));
 0300 01E8              ldi R16,129
 0302 A5DE              xcall _Read1302
 0304 402F              mov R20,R16
 0306 242F              mov R18,R20
 0308 2F70              andi R18,15
 030A 2063              ori R18,48
 030C 01E0              ldi R16,1
 030E 0E940000          xcall _lcd_write_char_con
 0312                   .dbline -2
 0312           L33:
 0312                   .dbline 0 ; func end
 0312 4991              ld R20,y+
 0314 A990              ld R10,y+
 0316 0895              ret
 0318                   .dbend
                        .area data(ram, con, rel)
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\time.c
 0000           L34:
 0000                   .blkb 3
                        .area idata
 0000 323000            .byte 50,48,0
                        .area data(ram, con, rel)
 0003                   .dbfile E:\ICCDemo\Temp_Control\temp_control\time.c
 0003           ; }
 0003           ; 
 0003           ; 
 0003           ; 
 0003           ; 
