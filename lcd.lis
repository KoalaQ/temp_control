                        .module lcd.c
                        .area text(rom, con, rel)
 0000                   .dbfile lcd.c
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\lcd.c
 0000                   .dbfunc e lcd_bz_1 _lcd_bz_1 fi
 0000           ;         result -> R20,R21
                        .even
 0000           _lcd_bz_1::
 0000 4A93              st -y,R20
 0002 5A93              st -y,R21
 0004                   .dbline -1
 0004                   .dbline 18
 0004           ; #include<iom128v.h>
 0004           ; #include "lcd.h"
 0004           ; #include "delay.h" 
 0004           ; #define rs_l PORTG&=~(1<<PG1)
 0004           ; #define rs_h PORTG|=1<<PG1
 0004           ; #define rw_l PORTG&=~(1<<PG0)
 0004           ; #define rw_h PORTG|=1<<PG0
 0004           ; #define ep1_l PORTG&=~(1<<PG3)
 0004           ; #define ep1_h PORTG|=1<<PG3
 0004           ; #define ep2_l PORTF&=~(1<<PF0)
 0004           ; #define ep2_h PORTF|=1<<PF0
 0004           ; //***********************************
 0004           ; //上半屏幕
 0004           ; //**********************************
 0004           ; /*
 0004           ;  读忙程序。命令后，读入BF
 0004           ; */
 0004           ; uint lcd_bz_1(void){
 0004                   .dbline 20
 0004           ;       uint result;
 0004           ;       DDRA=0x00;
 0004 2224              clr R2
 0006 2ABA              out 0x1a,R2
 0008                   .dbline 21
 0008           ;       rs_l;
 0008 80916500          lds R24,101
 000C 8D7F              andi R24,253
 000E 80936500          sts 101,R24
 0012                   .dbline 22
 0012           ;       rw_h;
 0012 80916500          lds R24,101
 0016 8160              ori R24,1
 0018 80936500          sts 101,R24
 001C                   .dbline 23
 001C           ;       ep1_h;
 001C 80916500          lds R24,101
 0020 8860              ori R24,8
 0022 80936500          sts 101,R24
 0026                   .dbline 24
 0026           ;       delay_ms(1);
 0026 01E0              ldi R16,1
 0028 10E0              ldi R17,0
 002A 0E940000          xcall _delay_ms
 002E                   .dbline 25
 002E           ;       result=PINA&(1<<PINA7);
 002E 49B3              in R20,0x19
 0030 5527              clr R21
 0032 4078              andi R20,128
 0034 5070              andi R21,0
 0036                   .dbline 26
 0036           ;       DDRA=0xFF;
 0036 8FEF              ldi R24,255
 0038 8ABB              out 0x1a,R24
 003A                   .dbline 27
 003A           ;       ep1_l;
 003A 80916500          lds R24,101
 003E 877F              andi R24,247
 0040 80936500          sts 101,R24
 0044                   .dbline 28
 0044           ;       return result;
 0044 8A01              movw R16,R20
 0046                   .dbline -2
 0046           L1:
 0046                   .dbline 0 ; func end
 0046 5991              ld R21,y+
 0048 4991              ld R20,y+
 004A 0895              ret
 004C                   .dbsym r result 20 i
 004C                   .dbend
 004C                   .dbfunc e lcd_wcmd_1 _lcd_wcmd_1 fV
 004C           ;            cmd -> R10
                        .even
 004C           _lcd_wcmd_1::
 004C AA92              st -y,R10
 004E A02E              mov R10,R16
 0050                   .dbline -1
 0050                   .dbline 30
 0050           ; }
 0050           ; void lcd_wcmd_1(uchar cmd){
 0050           L3:
 0050                   .dbline 31
 0050           ;        while(lcd_bz_1());
 0050           L4:
 0050                   .dbline 31
 0050 D7DF              xcall _lcd_bz_1
 0052 0030              cpi R16,0
 0054 0107              cpc R16,R17
 0056 E1F7              brne L3
 0058           X0:
 0058                   .dbline 32
 0058           ;        rs_l;
 0058 80916500          lds R24,101
 005C 8D7F              andi R24,253
 005E 80936500          sts 101,R24
 0062                   .dbline 33
 0062           ;        rw_l;
 0062 80916500          lds R24,101
 0066 8E7F              andi R24,254
 0068 80936500          sts 101,R24
 006C                   .dbline 34
 006C           ;        ep1_l;
 006C 80916500          lds R24,101
 0070 877F              andi R24,247
 0072 80936500          sts 101,R24
 0076                   .dbline 35
 0076           ;        delay_ms(1);
 0076 01E0              ldi R16,1
 0078 10E0              ldi R17,0
 007A 0E940000          xcall _delay_ms
 007E                   .dbline 36
 007E           ;        PORTA=cmd;
 007E ABBA              out 0x1b,R10
 0080                   .dbline 37
 0080           ;        delay_ms(2);
 0080 02E0              ldi R16,2
 0082 10E0              ldi R17,0
 0084 0E940000          xcall _delay_ms
 0088                   .dbline 38
 0088           ;        ep1_h;
 0088 80916500          lds R24,101
 008C 8860              ori R24,8
 008E 80936500          sts 101,R24
 0092                   .dbline 39
 0092           ;        delay_ms(1);
 0092 01E0              ldi R16,1
 0094 10E0              ldi R17,0
 0096 0E940000          xcall _delay_ms
 009A                   .dbline 40
 009A           ;        ep1_l;
 009A 80916500          lds R24,101
 009E 877F              andi R24,247
 00A0 80936500          sts 101,R24
 00A4                   .dbline 41
 00A4           ;        return;
 00A4                   .dbline -2
 00A4           L2:
 00A4                   .dbline 0 ; func end
 00A4 A990              ld R10,y+
 00A6 0895              ret
 00A8                   .dbsym r cmd 10 c
 00A8                   .dbend
 00A8                   .dbfunc e lcd_wdat_1 _lcd_wdat_1 fV
 00A8           ;            dat -> R10
                        .even
 00A8           _lcd_wdat_1::
 00A8 AA92              st -y,R10
 00AA A02E              mov R10,R16
 00AC                   .dbline -1
 00AC                   .dbline 46
 00AC           ; }
 00AC           ; /*
 00AC           ; 写输出数据,char
 00AC           ; */
 00AC           ; void lcd_wdat_1(uchar dat){
 00AC           L7:
 00AC                   .dbline 47
 00AC           ;        while(lcd_bz_1());
 00AC           L8:
 00AC                   .dbline 47
 00AC A9DF              xcall _lcd_bz_1
 00AE 0030              cpi R16,0
 00B0 0107              cpc R16,R17
 00B2 E1F7              brne L7
 00B4           X1:
 00B4                   .dbline 48
 00B4           ;        rs_h;
 00B4 80916500          lds R24,101
 00B8 8260              ori R24,2
 00BA 80936500          sts 101,R24
 00BE                   .dbline 49
 00BE           ;        rw_l;
 00BE 80916500          lds R24,101
 00C2 8E7F              andi R24,254
 00C4 80936500          sts 101,R24
 00C8                   .dbline 50
 00C8           ;        ep1_l;
 00C8 80916500          lds R24,101
 00CC 877F              andi R24,247
 00CE 80936500          sts 101,R24
 00D2                   .dbline 51
 00D2           ;        PORTA=dat;
 00D2 ABBA              out 0x1b,R10
 00D4                   .dbline 52
 00D4           ;        delay_ms(2);
 00D4 02E0              ldi R16,2
 00D6 10E0              ldi R17,0
 00D8 0E940000          xcall _delay_ms
 00DC                   .dbline 53
 00DC           ;        ep1_h;
 00DC 80916500          lds R24,101
 00E0 8860              ori R24,8
 00E2 80936500          sts 101,R24
 00E6                   .dbline 54
 00E6           ;        delay_ms(2);
 00E6 02E0              ldi R16,2
 00E8 10E0              ldi R17,0
 00EA 0E940000          xcall _delay_ms
 00EE                   .dbline 55
 00EE           ;        ep1_l;
 00EE 80916500          lds R24,101
 00F2 877F              andi R24,247
 00F4 80936500          sts 101,R24
 00F8                   .dbline -2
 00F8           L6:
 00F8                   .dbline 0 ; func end
 00F8 A990              ld R10,y+
 00FA 0895              ret
 00FC                   .dbsym r dat 10 c
 00FC                   .dbend
 00FC                   .dbfunc e lcd_clear_1 _lcd_clear_1 fV
                        .even
 00FC           _lcd_clear_1::
 00FC                   .dbline -1
 00FC                   .dbline 60
 00FC           ; }
 00FC           ; 
 00FC           ; /*清显示*/
 00FC           ; void lcd_clear_1(void) 
 00FC           ; {
 00FC                   .dbline 61
 00FC           ;       lcd_wcmd_1(0x01);
 00FC 01E0              ldi R16,1
 00FE A6DF              xcall _lcd_wcmd_1
 0100                   .dbline 62
 0100           ;       delay_ms(5);
 0100 05E0              ldi R16,5
 0102 10E0              ldi R17,0
 0104                   .dbline -2
 0104           L10:
 0104                   .dbline 0 ; func end
 0104 0C940000          xjmp _delay_ms
 0108                   .dbend
 0108                   .dbfunc e lcd_bz_2 _lcd_bz_2 fi
 0108           ;         result -> R20,R21
                        .even
 0108           _lcd_bz_2::
 0108 4A93              st -y,R20
 010A 5A93              st -y,R21
 010C                   .dbline -1
 010C                   .dbline 67
 010C           ; }
 010C           ; //***********************************
 010C           ; //    下半屏幕
 010C           ; //***********************************
 010C           ; uint lcd_bz_2(void){
 010C                   .dbline 69
 010C           ;       uint result;
 010C           ;       DDRA=0x00;
 010C 2224              clr R2
 010E 2ABA              out 0x1a,R2
 0110                   .dbline 70
 0110           ;       rs_l;
 0110 80916500          lds R24,101
 0114 8D7F              andi R24,253
 0116 80936500          sts 101,R24
 011A                   .dbline 71
 011A           ;       rw_h;
 011A 80916500          lds R24,101
 011E 8160              ori R24,1
 0120 80936500          sts 101,R24
 0124                   .dbline 72
 0124           ;       ep2_h;
 0124 80916200          lds R24,98
 0128 8160              ori R24,1
 012A 80936200          sts 98,R24
 012E                   .dbline 73
 012E           ;       delay_ms(1);
 012E 01E0              ldi R16,1
 0130 10E0              ldi R17,0
 0132 0E940000          xcall _delay_ms
 0136                   .dbline 74
 0136           ;       result=PINA&(1<<PINA7);
 0136 49B3              in R20,0x19
 0138 5527              clr R21
 013A 4078              andi R20,128
 013C 5070              andi R21,0
 013E                   .dbline 75
 013E           ;       DDRA=0xFF;
 013E 8FEF              ldi R24,255
 0140 8ABB              out 0x1a,R24
 0142                   .dbline 76
 0142           ;       ep2_l;
 0142 80916200          lds R24,98
 0146 8E7F              andi R24,254
 0148 80936200          sts 98,R24
 014C                   .dbline 77
 014C           ;       return result;
 014C 8A01              movw R16,R20
 014E                   .dbline -2
 014E           L11:
 014E                   .dbline 0 ; func end
 014E 5991              ld R21,y+
 0150 4991              ld R20,y+
 0152 0895              ret
 0154                   .dbsym r result 20 i
 0154                   .dbend
 0154                   .dbfunc e lcd_wcmd_2 _lcd_wcmd_2 fV
 0154           ;            cmd -> R10
                        .even
 0154           _lcd_wcmd_2::
 0154 AA92              st -y,R10
 0156 A02E              mov R10,R16
 0158                   .dbline -1
 0158                   .dbline 79
 0158           ; }
 0158           ; void lcd_wcmd_2(uchar cmd){
 0158           L13:
 0158                   .dbline 80
 0158           ;        while(lcd_bz_2());
 0158           L14:
 0158                   .dbline 80
 0158 D7DF              xcall _lcd_bz_2
 015A 0030              cpi R16,0
 015C 0107              cpc R16,R17
 015E E1F7              brne L13
 0160           X2:
 0160                   .dbline 81
 0160           ;        rs_l;
 0160 80916500          lds R24,101
 0164 8D7F              andi R24,253
 0166 80936500          sts 101,R24
 016A                   .dbline 82
 016A           ;        rw_l;
 016A 80916500          lds R24,101
 016E 8E7F              andi R24,254
 0170 80936500          sts 101,R24
 0174                   .dbline 83
 0174           ;        ep2_l;
 0174 80916200          lds R24,98
 0178 8E7F              andi R24,254
 017A 80936200          sts 98,R24
 017E                   .dbline 84
 017E           ;        delay_ms(1);
 017E 01E0              ldi R16,1
 0180 10E0              ldi R17,0
 0182 0E940000          xcall _delay_ms
 0186                   .dbline 85
 0186           ;        PORTA=cmd;
 0186 ABBA              out 0x1b,R10
 0188                   .dbline 86
 0188           ;        delay_ms(2);
 0188 02E0              ldi R16,2
 018A 10E0              ldi R17,0
 018C 0E940000          xcall _delay_ms
 0190                   .dbline 87
 0190           ;        ep2_h;
 0190 80916200          lds R24,98
 0194 8160              ori R24,1
 0196 80936200          sts 98,R24
 019A                   .dbline 88
 019A           ;        delay_ms(1);
 019A 01E0              ldi R16,1
 019C 10E0              ldi R17,0
 019E 0E940000          xcall _delay_ms
 01A2                   .dbline 89
 01A2           ;        ep2_l;
 01A2 80916200          lds R24,98
 01A6 8E7F              andi R24,254
 01A8 80936200          sts 98,R24
 01AC                   .dbline -2
 01AC           L12:
 01AC                   .dbline 0 ; func end
 01AC A990              ld R10,y+
 01AE 0895              ret
 01B0                   .dbsym r cmd 10 c
 01B0                   .dbend
 01B0                   .dbfunc e lcd_wdat_2 _lcd_wdat_2 fV
 01B0           ;            dat -> R10
                        .even
 01B0           _lcd_wdat_2::
 01B0 AA92              st -y,R10
 01B2 A02E              mov R10,R16
 01B4                   .dbline -1
 01B4                   .dbline 92
 01B4           ; }
 01B4           ; //  写输出数据,char
 01B4           ; void lcd_wdat_2(uchar dat){
 01B4           L17:
 01B4                   .dbline 93
 01B4           ;        while(lcd_bz_2());
 01B4           L18:
 01B4                   .dbline 93
 01B4 A9DF              xcall _lcd_bz_2
 01B6 0030              cpi R16,0
 01B8 0107              cpc R16,R17
 01BA E1F7              brne L17
 01BC           X3:
 01BC                   .dbline 94
 01BC           ;        rs_h;
 01BC 80916500          lds R24,101
 01C0 8260              ori R24,2
 01C2 80936500          sts 101,R24
 01C6                   .dbline 95
 01C6           ;        rw_l;
 01C6 80916500          lds R24,101
 01CA 8E7F              andi R24,254
 01CC 80936500          sts 101,R24
 01D0                   .dbline 96
 01D0           ;        ep2_l;
 01D0 80916200          lds R24,98
 01D4 8E7F              andi R24,254
 01D6 80936200          sts 98,R24
 01DA                   .dbline 97
 01DA           ;        PORTA=dat;
 01DA ABBA              out 0x1b,R10
 01DC                   .dbline 98
 01DC           ;        delay_ms(2);
 01DC 02E0              ldi R16,2
 01DE 10E0              ldi R17,0
 01E0 0E940000          xcall _delay_ms
 01E4                   .dbline 99
 01E4           ;        ep2_h;
 01E4 80916200          lds R24,98
 01E8 8160              ori R24,1
 01EA 80936200          sts 98,R24
 01EE                   .dbline 100
 01EE           ;        delay_ms(2);
 01EE 02E0              ldi R16,2
 01F0 10E0              ldi R17,0
 01F2 0E940000          xcall _delay_ms
 01F6                   .dbline 101
 01F6           ;        ep2_l;
 01F6 80916200          lds R24,98
 01FA 8E7F              andi R24,254
 01FC 80936200          sts 98,R24
 0200                   .dbline -2
 0200           L16:
 0200                   .dbline 0 ; func end
 0200 A990              ld R10,y+
 0202 0895              ret
 0204                   .dbsym r dat 10 c
 0204                   .dbend
 0204                   .dbfunc e lcd_clear_2 _lcd_clear_2 fV
                        .even
 0204           _lcd_clear_2::
 0204                   .dbline -1
 0204                   .dbline 105
 0204           ; }
 0204           ; /*清显示*/
 0204           ; void lcd_clear_2(void) 
 0204           ; {
 0204                   .dbline 107
 0204           ;       
 0204           ;       lcd_wcmd_2(0x01);
 0204 01E0              ldi R16,1
 0206 A6DF              xcall _lcd_wcmd_2
 0208                   .dbline 109
 0208           ; 
 0208           ;       delay_ms(5);
 0208 05E0              ldi R16,5
 020A 10E0              ldi R17,0
 020C                   .dbline -2
 020C           L20:
 020C                   .dbline 0 ; func end
 020C 0C940000          xjmp _delay_ms
 0210                   .dbend
 0210                   .dbfunc e lcd_write_char_con _lcd_write_char_con fV
 0210           ;           data -> R10
 0210           ;              y -> R20
                        .even
 0210           _lcd_write_char_con::
 0210 AA92              st -y,R10
 0212 4A93              st -y,R20
 0214 A22E              mov R10,R18
 0216 402F              mov R20,R16
 0218                   .dbline -1
 0218                   .dbline 120
 0218           ; 
 0218           ; }
 0218           ; 
 0218           ; //*************************************************
 0218           ; //                                    写字符
 0218           ; //***************************************************
 0218           ; /*
 0218           ;   附带y。调用 lcd_wdat（）方法。传入时转换为char。直接连续写入使用
 0218           ; */
 0218           ; void lcd_write_char_con(unsigned char y,unsigned char data) 
 0218           ; {
 0218                   .dbline 122
 0218           ;       
 0218           ;     if (y == 0) 
 0218 4423              tst R20
 021A 19F4              brne L22
 021C           X4:
 021C                   .dbline 123
 021C           ;     {
 021C                   .dbline 125
 021C           ;       
 021C           ;                lcd_wdat_1( data);
 021C 0A2D              mov R16,R10
 021E 44DF              xcall _lcd_wdat_1
 0220                   .dbline 126
 0220           ;     }
 0220 0EC0              xjmp L21
 0222           L22:
 0222                   .dbline 127
 0222           ;     else  if(y==1)
 0222 4130              cpi R20,1
 0224 19F4              brne L24
 0226           X5:
 0226                   .dbline 128
 0226           ;     {
 0226                   .dbline 130
 0226           ;       
 0226           ;                lcd_wdat_1( data);
 0226 0A2D              mov R16,R10
 0228 3FDF              xcall _lcd_wdat_1
 022A                   .dbline 131
 022A           ;     }else  if(y==2)
 022A 09C0              xjmp L21
 022C           L24:
 022C                   .dbline 131
 022C 4230              cpi R20,2
 022E 19F4              brne L26
 0230           X6:
 0230                   .dbline 132
 0230           ;     {
 0230                   .dbline 134
 0230           ;       
 0230           ;                lcd_wdat_2( data);
 0230 0A2D              mov R16,R10
 0232 BEDF              xcall _lcd_wdat_2
 0234                   .dbline 135
 0234           ;     }else  if(y==3)
 0234 04C0              xjmp L21
 0236           L26:
 0236                   .dbline 135
 0236 4330              cpi R20,3
 0238 11F4              brne L21
 023A           X7:
 023A                   .dbline 136
 023A           ;     {
 023A                   .dbline 138
 023A           ;       
 023A           ;                lcd_wdat_2( data);
 023A 0A2D              mov R16,R10
 023C B9DF              xcall _lcd_wdat_2
 023E                   .dbline 139
 023E           ;     }
 023E                   .dbline 140
 023E           ;    return; 
 023E                   .dbline -2
 023E           L21:
 023E                   .dbline 0 ; func end
 023E 4991              ld R20,y+
 0240 A990              ld R10,y+
 0242 0895              ret
 0244                   .dbsym r data 10 c
 0244                   .dbsym r y 20 c
 0244                   .dbend
 0244                   .dbfunc e lcd_write_pos _lcd_write_pos fV
 0244           ;              y -> R22
 0244           ;              x -> R20
                        .even
 0244           _lcd_write_pos::
 0244 4A93              st -y,R20
 0246 6A93              st -y,R22
 0248 622F              mov R22,R18
 024A 402F              mov R20,R16
 024C                   .dbline -1
 024C                   .dbline 146
 024C           ; }
 024C           ; /*
 024C           ;   附带x,y。写光标位置
 024C           ; */
 024C           ; void lcd_write_pos(unsigned char x,unsigned char y) 
 024C           ; {
 024C                   .dbline 148
 024C           ;       
 024C           ;     if (y == 0) 
 024C 6623              tst R22
 024E 21F4              brne L31
 0250           X8:
 0250                   .dbline 149
 0250           ;     {
 0250                   .dbline 150
 0250           ;       lcd_wcmd_1(0x80 + x);
 0250 042F              mov R16,R20
 0252 0058              subi R16,128    ; addi 128
 0254 FBDE              xcall _lcd_wcmd_1
 0256                   .dbline 151
 0256           ;     }
 0256 11C0              xjmp L30
 0258           L31:
 0258                   .dbline 152
 0258           ;     else  if(y==1)
 0258 6130              cpi R22,1
 025A 21F4              brne L33
 025C           X9:
 025C                   .dbline 153
 025C           ;     {
 025C                   .dbline 154
 025C           ;       lcd_wcmd_1(0x90 + x);
 025C 042F              mov R16,R20
 025E 0057              subi R16,112    ; addi 144
 0260 F5DE              xcall _lcd_wcmd_1
 0262                   .dbline 155
 0262           ;     }else  if(y==2)
 0262 0BC0              xjmp L30
 0264           L33:
 0264                   .dbline 155
 0264 6230              cpi R22,2
 0266 21F4              brne L35
 0268           X10:
 0268                   .dbline 156
 0268           ;     {
 0268                   .dbline 157
 0268           ;       lcd_wcmd_2(0x80 + x);
 0268 042F              mov R16,R20
 026A 0058              subi R16,128    ; addi 128
 026C 73DF              xcall _lcd_wcmd_2
 026E                   .dbline 158
 026E           ;     }else  if(y==3)
 026E 05C0              xjmp L30
 0270           L35:
 0270                   .dbline 158
 0270 6330              cpi R22,3
 0272 19F4              brne L30
 0274           X11:
 0274                   .dbline 159
 0274           ;     {
 0274                   .dbline 160
 0274           ;       lcd_wcmd_2(0x90 + x);
 0274 042F              mov R16,R20
 0276 0057              subi R16,112    ; addi 144
 0278 6DDF              xcall _lcd_wcmd_2
 027A                   .dbline 161
 027A           ;     }
 027A                   .dbline 162
 027A           ;    return; 
 027A                   .dbline -2
 027A           L30:
 027A                   .dbline 0 ; func end
 027A 6991              ld R22,y+
 027C 4991              ld R20,y+
 027E 0895              ret
 0280                   .dbsym r y 22 c
 0280                   .dbsym r x 20 c
 0280                   .dbend
 0280                   .dbfunc e lcd_write_char _lcd_write_char fV
 0280           ;           data -> R10
 0280           ;              y -> R22
 0280           ;              x -> R20
                        .even
 0280           _lcd_write_char::
 0280 0E940000          xcall push_xgsetF00C
 0284 622F              mov R22,R18
 0286 402F              mov R20,R16
 0288 AE80              ldd R10,y+6
 028A                   .dbline -1
 028A                   .dbline 168
 028A           ; }
 028A           ; /*
 028A           ;   附带x,y。调用 lcd_wdat（）方法。传入时转换为char
 028A           ; */
 028A           ; void lcd_write_char(unsigned char x,unsigned char y,unsigned char data) 
 028A           ; {
 028A                   .dbline 170
 028A           ;       
 028A           ;     if (y == 0) 
 028A 6623              tst R22
 028C 31F4              brne L40
 028E           X12:
 028E                   .dbline 171
 028E           ;     {
 028E                   .dbline 172
 028E           ;       lcd_wcmd_1(0x80 + x);
 028E 042F              mov R16,R20
 0290 0058              subi R16,128    ; addi 128
 0292 DCDE              xcall _lcd_wcmd_1
 0294                   .dbline 173
 0294           ;                lcd_wdat_1( data);
 0294 0A2D              mov R16,R10
 0296 08DF              xcall _lcd_wdat_1
 0298                   .dbline 174
 0298           ;     }
 0298 17C0              xjmp L39
 029A           L40:
 029A                   .dbline 175
 029A           ;     else  if(y==1)
 029A 6130              cpi R22,1
 029C 31F4              brne L42
 029E           X13:
 029E                   .dbline 176
 029E           ;     {
 029E                   .dbline 177
 029E           ;       lcd_wcmd_1(0x90 + x);
 029E 042F              mov R16,R20
 02A0 0057              subi R16,112    ; addi 144
 02A2 D4DE              xcall _lcd_wcmd_1
 02A4                   .dbline 178
 02A4           ;                lcd_wdat_1( data);
 02A4 0A2D              mov R16,R10
 02A6 00DF              xcall _lcd_wdat_1
 02A8                   .dbline 179
 02A8           ;     }else  if(y==2)
 02A8 0FC0              xjmp L39
 02AA           L42:
 02AA                   .dbline 179
 02AA 6230              cpi R22,2
 02AC 31F4              brne L44
 02AE           X14:
 02AE                   .dbline 180
 02AE           ;     {
 02AE                   .dbline 181
 02AE           ;       lcd_wcmd_2(0x80 + x);
 02AE 042F              mov R16,R20
 02B0 0058              subi R16,128    ; addi 128
 02B2 50DF              xcall _lcd_wcmd_2
 02B4                   .dbline 182
 02B4           ;                lcd_wdat_2( data);
 02B4 0A2D              mov R16,R10
 02B6 7CDF              xcall _lcd_wdat_2
 02B8                   .dbline 183
 02B8           ;     }else  if(y==3)
 02B8 07C0              xjmp L39
 02BA           L44:
 02BA                   .dbline 183
 02BA 6330              cpi R22,3
 02BC 29F4              brne L39
 02BE           X15:
 02BE                   .dbline 184
 02BE           ;     {
 02BE                   .dbline 185
 02BE           ;       lcd_wcmd_2(0x90 + x);
 02BE 042F              mov R16,R20
 02C0 0057              subi R16,112    ; addi 144
 02C2 48DF              xcall _lcd_wcmd_2
 02C4                   .dbline 186
 02C4           ;                lcd_wdat_2( data);
 02C4 0A2D              mov R16,R10
 02C6 74DF              xcall _lcd_wdat_2
 02C8                   .dbline 187
 02C8           ;     }
 02C8                   .dbline 188
 02C8           ;    return; 
 02C8                   .dbline -2
 02C8           L39:
 02C8                   .dbline 0 ; func end
 02C8 0C940000          xjmp pop_xgsetF00C
 02CC                   .dbsym r data 10 c
 02CC                   .dbsym r y 22 c
 02CC                   .dbsym r x 20 c
 02CC                   .dbend
 02CC                   .dbfunc e lcd_write_str _lcd_write_str fV
 02CC           ;              s -> R20,R21
 02CC           ;              y -> R10
 02CC           ;              x -> R22
                        .even
 02CC           _lcd_write_str::
 02CC 0E940000          xcall push_xgsetF00C
 02D0 A22E              mov R10,R18
 02D2 602F              mov R22,R16
 02D4 4E81              ldd R20,y+6
 02D6 5F81              ldd R21,y+7
 02D8                   .dbline -1
 02D8                   .dbline 194
 02D8           ; }
 02D8           ; /*
 02D8           ;   附带x,y。调用 lcd_wdat（）方法，会通过指针遍历字符串。不太好，还是自己循环遍历
 02D8           ; */
 02D8           ; void lcd_write_str(unsigned char x,unsigned char y,unsigned char *s) 
 02D8           ; {
 02D8                   .dbline 196
 02D8           ;       
 02D8           ;     if (y == 0) 
 02D8 AA20              tst R10
 02DA 71F4              brne L49
 02DC           X16:
 02DC                   .dbline 197
 02DC           ;     {
 02DC                   .dbline 198
 02DC           ;       lcd_wcmd_1(0x80 + x);
 02DC 062F              mov R16,R22
 02DE 0058              subi R16,128    ; addi 128
 02E0 B5DE              xcall _lcd_wcmd_1
 02E2 05C0              xjmp L52
 02E4           L51:
 02E4                   .dbline 200
 02E4           ;                while (*s) 
 02E4           ;        {
 02E4                   .dbline 201
 02E4           ;       lcd_wdat_1( *s);
 02E4 FA01              movw R30,R20
 02E6 0081              ldd R16,z+0
 02E8 DFDE              xcall _lcd_wdat_1
 02EA                   .dbline 202
 02EA           ;       s ++;
 02EA 4F5F              subi R20,255  ; offset = 1
 02EC 5F4F              sbci R21,255
 02EE                   .dbline 203
 02EE           ;         }
 02EE           L52:
 02EE                   .dbline 199
 02EE FA01              movw R30,R20
 02F0 2080              ldd R2,z+0
 02F2 2220              tst R2
 02F4 B9F7              brne L51
 02F6           X17:
 02F6                   .dbline 204
 02F6           ;     }
 02F6 32C0              xjmp L50
 02F8           L49:
 02F8                   .dbline 205
 02F8           ;     else  if(y==1)
 02F8 8A2D              mov R24,R10
 02FA 8130              cpi R24,1
 02FC 71F4              brne L54
 02FE           X18:
 02FE                   .dbline 206
 02FE           ;     {
 02FE                   .dbline 207
 02FE           ;       lcd_wcmd_1(0x90 + x);
 02FE 062F              mov R16,R22
 0300 0057              subi R16,112    ; addi 144
 0302 A4DE              xcall _lcd_wcmd_1
 0304 05C0              xjmp L57
 0306           L56:
 0306                   .dbline 209
 0306           ;                while (*s) 
 0306           ;         {
 0306                   .dbline 210
 0306           ;       lcd_wdat_1( *s);
 0306 FA01              movw R30,R20
 0308 0081              ldd R16,z+0
 030A CEDE              xcall _lcd_wdat_1
 030C                   .dbline 211
 030C           ;       s ++;
 030C 4F5F              subi R20,255  ; offset = 1
 030E 5F4F              sbci R21,255
 0310                   .dbline 212
 0310           ;        }
 0310           L57:
 0310                   .dbline 208
 0310 FA01              movw R30,R20
 0312 2080              ldd R2,z+0
 0314 2220              tst R2
 0316 B9F7              brne L56
 0318           X19:
 0318                   .dbline 213
 0318           ;     }else  if(y==2)
 0318 21C0              xjmp L55
 031A           L54:
 031A                   .dbline 213
 031A 8A2D              mov R24,R10
 031C 8230              cpi R24,2
 031E 71F4              brne L59
 0320           X20:
 0320                   .dbline 214
 0320           ;     {
 0320                   .dbline 215
 0320           ;       lcd_wcmd_2(0x80 + x);
 0320 062F              mov R16,R22
 0322 0058              subi R16,128    ; addi 128
 0324 17DF              xcall _lcd_wcmd_2
 0326 05C0              xjmp L62
 0328           L61:
 0328                   .dbline 217
 0328           ;                 while (*s) 
 0328           ;        {
 0328                   .dbline 218
 0328           ;       lcd_wdat_2( *s);
 0328 FA01              movw R30,R20
 032A 0081              ldd R16,z+0
 032C 41DF              xcall _lcd_wdat_2
 032E                   .dbline 219
 032E           ;       s ++;
 032E 4F5F              subi R20,255  ; offset = 1
 0330 5F4F              sbci R21,255
 0332                   .dbline 220
 0332           ;        }
 0332           L62:
 0332                   .dbline 216
 0332 FA01              movw R30,R20
 0334 2080              ldd R2,z+0
 0336 2220              tst R2
 0338 B9F7              brne L61
 033A           X21:
 033A                   .dbline 221
 033A           ;     }else  if(y==3)
 033A 10C0              xjmp L60
 033C           L59:
 033C                   .dbline 221
 033C 8A2D              mov R24,R10
 033E 8330              cpi R24,3
 0340 69F4              brne L64
 0342           X22:
 0342                   .dbline 222
 0342           ;     {
 0342                   .dbline 223
 0342           ;       lcd_wcmd_2(0x90 + x);
 0342 062F              mov R16,R22
 0344 0057              subi R16,112    ; addi 144
 0346 06DF              xcall _lcd_wcmd_2
 0348 05C0              xjmp L67
 034A           L66:
 034A                   .dbline 225
 034A           ;                 while (*s) 
 034A           ;        {
 034A                   .dbline 226
 034A           ;       lcd_wdat_2( *s);
 034A FA01              movw R30,R20
 034C 0081              ldd R16,z+0
 034E 30DF              xcall _lcd_wdat_2
 0350                   .dbline 227
 0350           ;       s ++;
 0350 4F5F              subi R20,255  ; offset = 1
 0352 5F4F              sbci R21,255
 0354                   .dbline 228
 0354           ;        }
 0354           L67:
 0354                   .dbline 224
 0354 FA01              movw R30,R20
 0356 2080              ldd R2,z+0
 0358 2220              tst R2
 035A B9F7              brne L66
 035C           X23:
 035C                   .dbline 229
 035C           ;     }
 035C           L64:
 035C           L60:
 035C           L55:
 035C           L50:
 035C                   .dbline -2
 035C           L48:
 035C                   .dbline 0 ; func end
 035C 0C940000          xjmp pop_xgsetF00C
 0360                   .dbsym r s 20 pc
 0360                   .dbsym r y 10 c
 0360                   .dbsym r x 22 c
 0360                   .dbend
 0360                   .dbfunc e read_ac_1 _read_ac_1 fc
 0360           ;         result -> R20,R21
                        .even
 0360           _read_ac_1::
 0360 4A93              st -y,R20
 0362 5A93              st -y,R21
 0364                   .dbline -1
 0364                   .dbline 238
 0364           ;    
 0364           ; }
 0364           ; //****************************
 0364           ; //  读出数据,.不知道有没有用，先放在这
 0364           ; //****************************
 0364           ; /**
 0364           ;  读程序。命令后，读AC地址
 0364           ; */
 0364           ; uchar read_ac_1(void){
 0364                   .dbline 240
 0364           ;       uint result;
 0364           ;       DDRA=0x00;
 0364 2224              clr R2
 0366 2ABA              out 0x1a,R2
 0368                   .dbline 241
 0368           ;       rs_l;
 0368 80916500          lds R24,101
 036C 8D7F              andi R24,253
 036E 80936500          sts 101,R24
 0372                   .dbline 242
 0372           ;       rw_h;
 0372 80916500          lds R24,101
 0376 8160              ori R24,1
 0378 80936500          sts 101,R24
 037C                   .dbline 243
 037C           ;       ep1_h;
 037C 80916500          lds R24,101
 0380 8860              ori R24,8
 0382 80936500          sts 101,R24
 0386                   .dbline 244
 0386           ;       delay_ms(1);
 0386 01E0              ldi R16,1
 0388 10E0              ldi R17,0
 038A 0E940000          xcall _delay_ms
 038E                   .dbline 245
 038E           ;       result=PINA&(~(1<<PINA7));
 038E 49B3              in R20,0x19
 0390 5527              clr R21
 0392 4F77              andi R20,127
 0394                   .dbline 246
 0394           ;       DDRA=0xFF;
 0394 8FEF              ldi R24,255
 0396 8ABB              out 0x1a,R24
 0398                   .dbline 247
 0398           ;       ep1_l;
 0398 80916500          lds R24,101
 039C 877F              andi R24,247
 039E 80936500          sts 101,R24
 03A2                   .dbline 248
 03A2           ;       return result;
 03A2 042F              mov R16,R20
 03A4                   .dbline -2
 03A4           L69:
 03A4                   .dbline 0 ; func end
 03A4 5991              ld R21,y+
 03A6 4991              ld R20,y+
 03A8 0895              ret
 03AA                   .dbsym r result 20 i
 03AA                   .dbend
 03AA                   .dbfunc e read_ac_2 _read_ac_2 fc
 03AA           ;         result -> R20,R21
                        .even
 03AA           _read_ac_2::
 03AA 4A93              st -y,R20
 03AC 5A93              st -y,R21
 03AE                   .dbline -1
 03AE                   .dbline 250
 03AE           ; }
 03AE           ; uchar read_ac_2(void){
 03AE                   .dbline 252
 03AE           ;       uint result;
 03AE           ;       DDRA=0x00;
 03AE 2224              clr R2
 03B0 2ABA              out 0x1a,R2
 03B2                   .dbline 253
 03B2           ;       rs_l;
 03B2 80916500          lds R24,101
 03B6 8D7F              andi R24,253
 03B8 80936500          sts 101,R24
 03BC                   .dbline 254
 03BC           ;       rw_h;
 03BC 80916500          lds R24,101
 03C0 8160              ori R24,1
 03C2 80936500          sts 101,R24
 03C6                   .dbline 255
 03C6           ;       ep2_h;
 03C6 80916200          lds R24,98
 03CA 8160              ori R24,1
 03CC 80936200          sts 98,R24
 03D0                   .dbline 256
 03D0           ;       delay_ms(1);
 03D0 01E0              ldi R16,1
 03D2 10E0              ldi R17,0
 03D4 0E940000          xcall _delay_ms
 03D8                   .dbline 257
 03D8           ;       result=PINA&(~(1<<PINA7));
 03D8 49B3              in R20,0x19
 03DA 5527              clr R21
 03DC 4F77              andi R20,127
 03DE                   .dbline 258
 03DE           ;       DDRA=0xFF;
 03DE 8FEF              ldi R24,255
 03E0 8ABB              out 0x1a,R24
 03E2                   .dbline 259
 03E2           ;       ep2_l;
 03E2 80916200          lds R24,98
 03E6 8E7F              andi R24,254
 03E8 80936200          sts 98,R24
 03EC                   .dbline 260
 03EC           ;       return result;
 03EC 042F              mov R16,R20
 03EE                   .dbline -2
 03EE           L70:
 03EE                   .dbline 0 ; func end
 03EE 5991              ld R21,y+
 03F0 4991              ld R20,y+
 03F2 0895              ret
 03F4                   .dbsym r result 20 i
 03F4                   .dbend
 03F4                   .dbfunc e lcd_clear _lcd_clear fV
                        .even
 03F4           _lcd_clear::
 03F4                   .dbline -1
 03F4                   .dbline 263
 03F4           ; }
 03F4           ; 
 03F4           ; void lcd_clear(void){
 03F4                   .dbline 264
 03F4           ;    lcd_clear_1();
 03F4 83DE              xcall _lcd_clear_1
 03F6                   .dbline 265
 03F6           ;     lcd_clear_2();
 03F6                   .dbline -2
 03F6           L71:
 03F6                   .dbline 0 ; func end
 03F6 06CF              xjmp _lcd_clear_2
 03F8                   .dbend
 03F8                   .dbfunc e date_cmd_1 _date_cmd_1 fc
 03F8           ;         result -> R10,R11
                        .even
 03F8           _date_cmd_1::
 03F8 AA92              st -y,R10
 03FA BA92              st -y,R11
 03FC                   .dbline -1
 03FC                   .dbline 271
 03FC           ; }
 03FC           ; /*
 03FC           ;  读数据程序。命令后，读入。使用read_data函数会是设定的值，再吃调用本函数会使ac
 03FC           ;  移动一次，8读取位的数据
 03FC           ; */
 03FC           ; uchar date_cmd_1(void){
 03FC                   .dbline 273
 03FC           ;       uint result;
 03FC           ;       DDRA=0x00;
 03FC 2224              clr R2
 03FE 2ABA              out 0x1a,R2
 0400                   .dbline 274
 0400           ;       rs_h;
 0400 80916500          lds R24,101
 0404 8260              ori R24,2
 0406 80936500          sts 101,R24
 040A                   .dbline 275
 040A           ;       rw_h;
 040A 80916500          lds R24,101
 040E 8160              ori R24,1
 0410 80936500          sts 101,R24
 0414                   .dbline 276
 0414           ;       ep1_h;
 0414 80916500          lds R24,101
 0418 8860              ori R24,8
 041A 80936500          sts 101,R24
 041E                   .dbline 277
 041E           ;       delay_ms(1);
 041E 01E0              ldi R16,1
 0420 10E0              ldi R17,0
 0422 0E940000          xcall _delay_ms
 0426                   .dbline 278
 0426           ;       result=PINA;
 0426 A9B2              in R10,0x19
 0428 BB24              clr R11
 042A                   .dbline 279
 042A           ;       DDRA=0xFF;
 042A 8FEF              ldi R24,255
 042C 8ABB              out 0x1a,R24
 042E                   .dbline 280
 042E           ;       ep1_l;
 042E 80916500          lds R24,101
 0432 877F              andi R24,247
 0434 80936500          sts 101,R24
 0438                   .dbline 281
 0438           ;       return result;
 0438 0A2D              mov R16,R10
 043A                   .dbline -2
 043A           L72:
 043A                   .dbline 0 ; func end
 043A B990              ld R11,y+
 043C A990              ld R10,y+
 043E 0895              ret
 0440                   .dbsym r result 10 i
 0440                   .dbend
 0440                   .dbfunc e date_cmd_2 _date_cmd_2 fc
 0440           ;         result -> R10,R11
                        .even
 0440           _date_cmd_2::
 0440 AA92              st -y,R10
 0442 BA92              st -y,R11
 0444                   .dbline -1
 0444                   .dbline 283
 0444           ; }
 0444           ; uchar date_cmd_2(void){
 0444                   .dbline 285
 0444           ;       uint result;
 0444           ;       DDRA=0x00;
 0444 2224              clr R2
 0446 2ABA              out 0x1a,R2
 0448                   .dbline 286
 0448           ;       rs_h;
 0448 80916500          lds R24,101
 044C 8260              ori R24,2
 044E 80936500          sts 101,R24
 0452                   .dbline 287
 0452           ;       rw_h;
 0452 80916500          lds R24,101
 0456 8160              ori R24,1
 0458 80936500          sts 101,R24
 045C                   .dbline 288
 045C           ;       ep2_h;
 045C 80916200          lds R24,98
 0460 8160              ori R24,1
 0462 80936200          sts 98,R24
 0466                   .dbline 289
 0466           ;       delay_ms(1);
 0466 01E0              ldi R16,1
 0468 10E0              ldi R17,0
 046A 0E940000          xcall _delay_ms
 046E                   .dbline 290
 046E           ;       result=PINA;
 046E A9B2              in R10,0x19
 0470 BB24              clr R11
 0472                   .dbline 291
 0472           ;       DDRA=0xFF;
 0472 8FEF              ldi R24,255
 0474 8ABB              out 0x1a,R24
 0476                   .dbline 292
 0476           ;       ep2_l;
 0476 80916200          lds R24,98
 047A 8E7F              andi R24,254
 047C 80936200          sts 98,R24
 0480                   .dbline 293
 0480           ;       return result;
 0480 0A2D              mov R16,R10
 0482                   .dbline -2
 0482           L73:
 0482                   .dbline 0 ; func end
 0482 B990              ld R11,y+
 0484 A990              ld R10,y+
 0486 0895              ret
 0488                   .dbsym r result 10 i
 0488                   .dbend
 0488                   .dbfunc e read_data_xy _read_data_xy fc
 0488           ;              y -> R22
 0488           ;              x -> R20
                        .even
 0488           _read_data_xy::
 0488 0E940000          xcall push_xgsetF00C
 048C 622F              mov R22,R18
 048E 402F              mov R20,R16
 0490                   .dbline -1
 0490                   .dbline 298
 0490           ; }
 0490           ; //**************************
 0490           ; //读取函数，注意会ac位置
 0490           ; //**************************
 0490           ; uchar read_data_xy(unsigned char x,unsigned char y){
 0490                   .dbline 299
 0490           ;       if (y == 0) {
 0490 6623              tst R22
 0492 49F4              brne L75
 0494           X24:
 0494                   .dbline 299
 0494                   .dbline 300
 0494           ;       lcd_wcmd_1(0x80 + x);
 0494 042F              mov R16,R20
 0496 0058              subi R16,128    ; addi 128
 0498 D9DD              xcall _lcd_wcmd_1
 049A                   .dbline 301
 049A           ;               delay_us(10);
 049A 0AE0              ldi R16,10
 049C 10E0              ldi R17,0
 049E 0E940000          xcall _delay_us
 04A2                   .dbline 302
 04A2           ;               return date_cmd_1();
 04A2 AADF              xcall _date_cmd_1
 04A4 24C0              xjmp L74
 04A6           L75:
 04A6                   .dbline 304
 04A6           ;               
 04A6           ;     }else  if(y==1){
 04A6 6130              cpi R22,1
 04A8 49F4              brne L77
 04AA           X25:
 04AA                   .dbline 304
 04AA                   .dbline 305
 04AA           ;       lcd_wcmd_1(0x90 + x);
 04AA 042F              mov R16,R20
 04AC 0057              subi R16,112    ; addi 144
 04AE CEDD              xcall _lcd_wcmd_1
 04B0                   .dbline 306
 04B0           ;               delay_us(10);
 04B0 0AE0              ldi R16,10
 04B2 10E0              ldi R17,0
 04B4 0E940000          xcall _delay_us
 04B8                   .dbline 307
 04B8           ;               return date_cmd_1();
 04B8 9FDF              xcall _date_cmd_1
 04BA 19C0              xjmp L74
 04BC           L77:
 04BC                   .dbline 308
 04BC           ;     }else  if(y==2){
 04BC 6230              cpi R22,2
 04BE 51F4              brne L79
 04C0           X26:
 04C0                   .dbline 308
 04C0                   .dbline 309
 04C0           ;       lcd_wcmd_2(0x80 + x);
 04C0 042F              mov R16,R20
 04C2 0058              subi R16,128    ; addi 128
 04C4 47DE              xcall _lcd_wcmd_2
 04C6                   .dbline 310
 04C6           ;               delay_us(10);
 04C6 0AE0              ldi R16,10
 04C8 10E0              ldi R17,0
 04CA 0E940000          xcall _delay_us
 04CE                   .dbline 311
 04CE           ;               return date_cmd_2();
 04CE B8DF              xcall _date_cmd_2
 04D0 A02E              mov R10,R16
 04D2 0DC0              xjmp L74
 04D4           L79:
 04D4                   .dbline 312
 04D4           ;     }else  if(y==3){
 04D4 6330              cpi R22,3
 04D6 51F4              brne L81
 04D8           X27:
 04D8                   .dbline 312
 04D8                   .dbline 313
 04D8           ;       lcd_wcmd_2(0x90 + x);
 04D8 042F              mov R16,R20
 04DA 0057              subi R16,112    ; addi 144
 04DC 3BDE              xcall _lcd_wcmd_2
 04DE                   .dbline 314
 04DE           ;               delay_us(10);
 04DE 0AE0              ldi R16,10
 04E0 10E0              ldi R17,0
 04E2 0E940000          xcall _delay_us
 04E6                   .dbline 315
 04E6           ;               return date_cmd_2();
 04E6 ACDF              xcall _date_cmd_2
 04E8 A02E              mov R10,R16
 04EA 01C0              xjmp L74
 04EC           L81:
 04EC                   .dbline 318
 04EC           ;     }
 04EC           ;       
 04EC           ;       return 0x00;
 04EC 0027              clr R16
 04EE                   .dbline -2
 04EE           L74:
 04EE                   .dbline 0 ; func end
 04EE 0C940000          xjmp pop_xgsetF00C
 04F2                   .dbsym r y 22 c
 04F2                   .dbsym r x 20 c
 04F2                   .dbend
 04F2                   .dbfunc e read_data_1 _read_data_1 fc
 04F2           ;           addr -> R10
                        .even
 04F2           _read_data_1::
 04F2 AA92              st -y,R10
 04F4 A02E              mov R10,R16
 04F6                   .dbline -1
 04F6                   .dbline 320
 04F6           ; }
 04F6           ; uchar read_data_1(unsigned char addr){
 04F6                   .dbline 322
 04F6           ;       
 04F6           ;       lcd_wcmd_1(addr);
 04F6 0A2D              mov R16,R10
 04F8 A9DD              xcall _lcd_wcmd_1
 04FA                   .dbline 323
 04FA           ;       return date_cmd_1();
 04FA 7EDF              xcall _date_cmd_1
 04FC                   .dbline -2
 04FC           L83:
 04FC                   .dbline 0 ; func end
 04FC A990              ld R10,y+
 04FE 0895              ret
 0500                   .dbsym r addr 10 c
 0500                   .dbend
 0500                   .dbfunc e read_data_2 _read_data_2 fc
 0500           ;           addr -> R10
                        .even
 0500           _read_data_2::
 0500 AA92              st -y,R10
 0502 A02E              mov R10,R16
 0504                   .dbline -1
 0504                   .dbline 325
 0504           ; }
 0504           ; uchar read_data_2(unsigned char addr){
 0504                   .dbline 326
 0504           ;       lcd_wcmd_1(addr);
 0504 0A2D              mov R16,R10
 0506 A2DD              xcall _lcd_wcmd_1
 0508                   .dbline 327
 0508           ;               return date_cmd_2();
 0508 9BDF              xcall _date_cmd_2
 050A                   .dbline -2
 050A           L84:
 050A                   .dbline 0 ; func end
 050A A990              ld R10,y+
 050C 0895              ret
 050E                   .dbsym r addr 10 c
 050E                   .dbend
 050E                   .dbfunc e lcd_init _lcd_init fV
                        .even
 050E           _lcd_init::
 050E                   .dbline -1
 050E                   .dbline 332
 050E           ; }
 050E           ; 
 050E           ; 
 050E           ; /*初始化功能*/
 050E           ; void lcd_init(void){
 050E                   .dbline 334
 050E           ;        //初始化端口功能
 050E           ;        DDRA |=0xFF;
 050E 8AB3              in R24,0x1a
 0510 8F6F              ori R24,255
 0512 8ABB              out 0x1a,R24
 0514                   .dbline 335
 0514           ;        PORTA=0xFF;
 0514 8FEF              ldi R24,255
 0516 8BBB              out 0x1b,R24
 0518                   .dbline 336
 0518           ;        DDRG |=0x0F;
 0518 80916400          lds R24,100
 051C 8F60              ori R24,15
 051E 80936400          sts 100,R24
 0522                   .dbline 337
 0522           ;        PORTG|=0x0F;
 0522 80916500          lds R24,101
 0526 8F60              ori R24,15
 0528 80936500          sts 101,R24
 052C                   .dbline 338
 052C           ;        DDRF|=0x01;
 052C 80916100          lds R24,97
 0530 8160              ori R24,1
 0532 80936100          sts 97,R24
 0536                   .dbline 339
 0536           ;        PORTF|=0x01;
 0536 80916200          lds R24,98
 053A 8160              ori R24,1
 053C 80936200          sts 98,R24
 0540                   .dbline 341
 0540           ;        //lcd_wcmd(0x38);//初始化功能,8位，基本指令
 0540           ;        lcd_wcmd_1(0x30);//初始化功能,8位，基本指令
 0540 00E3              ldi R16,48
 0542 84DD              xcall _lcd_wcmd_1
 0544                   .dbline 342
 0544           ;        delay_us(1);
 0544 01E0              ldi R16,1
 0546 10E0              ldi R17,0
 0548 0E940000          xcall _delay_us
 054C                   .dbline 343
 054C           ;         lcd_wcmd_1(0x08);//关显示
 054C 08E0              ldi R16,8
 054E 7EDD              xcall _lcd_wcmd_1
 0550                   .dbline 344
 0550           ;        delay_us(1);
 0550 01E0              ldi R16,1
 0552 10E0              ldi R17,0
 0554 0E940000          xcall _delay_us
 0558                   .dbline 345
 0558           ;         lcd_wcmd_1(0x01);//清显示
 0558 01E0              ldi R16,1
 055A 78DD              xcall _lcd_wcmd_1
 055C                   .dbline 346
 055C           ;        delay_us(1);
 055C 01E0              ldi R16,1
 055E 10E0              ldi R17,0
 0560 0E940000          xcall _delay_us
 0564                   .dbline 347
 0564           ;         lcd_wcmd_1(0x06);//输入模式，右移
 0564 06E0              ldi R16,6
 0566 72DD              xcall _lcd_wcmd_1
 0568                   .dbline 348
 0568           ;         delay_us(1);
 0568 01E0              ldi R16,1
 056A 10E0              ldi R17,0
 056C 0E940000          xcall _delay_us
 0570                   .dbline 349
 0570           ;         lcd_wcmd_1(0x0c);//初始化光标,开显示
 0570 0CE0              ldi R16,12
 0572 6CDD              xcall _lcd_wcmd_1
 0574                   .dbline 351
 0574           ;       
 0574           ;        delay_us(1);
 0574 01E0              ldi R16,1
 0576 10E0              ldi R17,0
 0578 0E940000          xcall _delay_us
 057C                   .dbline 352
 057C           ;         lcd_wcmd_2(0x30);//初始化功能,8位，基本指令
 057C 00E3              ldi R16,48
 057E EADD              xcall _lcd_wcmd_2
 0580                   .dbline 353
 0580           ;        delay_us(1);
 0580 01E0              ldi R16,1
 0582 10E0              ldi R17,0
 0584 0E940000          xcall _delay_us
 0588                   .dbline 354
 0588           ;        lcd_wcmd_2(0x08);//关显示
 0588 08E0              ldi R16,8
 058A E4DD              xcall _lcd_wcmd_2
 058C                   .dbline 355
 058C           ;        delay_us(1);
 058C 01E0              ldi R16,1
 058E 10E0              ldi R17,0
 0590 0E940000          xcall _delay_us
 0594                   .dbline 356
 0594           ;        lcd_wcmd_2(0x01);//清显示
 0594 01E0              ldi R16,1
 0596 DEDD              xcall _lcd_wcmd_2
 0598                   .dbline 357
 0598           ;        delay_us(1);
 0598 01E0              ldi R16,1
 059A 10E0              ldi R17,0
 059C 0E940000          xcall _delay_us
 05A0                   .dbline 358
 05A0           ;        lcd_wcmd_2(0x06);//输入模式，右移
 05A0 06E0              ldi R16,6
 05A2 D8DD              xcall _lcd_wcmd_2
 05A4                   .dbline 359
 05A4           ;         delay_us(1);
 05A4 01E0              ldi R16,1
 05A6 10E0              ldi R17,0
 05A8 0E940000          xcall _delay_us
 05AC                   .dbline 360
 05AC           ;        lcd_wcmd_2(0x0c);//初始化光标,开显示
 05AC 0CE0              ldi R16,12
 05AE                   .dbline -2
 05AE           L85:
 05AE                   .dbline 0 ; func end
 05AE D2CD              xjmp _lcd_wcmd_2
 05B0                   .dbend
 05B0                   .dbfunc e cur_set _cur_set fV
 05B0           ;           type -> R20,R21
                        .even
 05B0           _cur_set::
 05B0 4A93              st -y,R20
 05B2 5A93              st -y,R21
 05B4 A801              movw R20,R16
 05B6                   .dbline -1
 05B6                   .dbline 366
 05B6           ; }
 05B6           ; //************
 05B6           ; // 光标显示操作,默认初始化都是关闭。上半屏 0:关闭,1：开游标,2：游标反白,3：开游标、反白
 05B6           ; // 下半屏  4:关闭,5：开游标,6：游标反白,7：开游标、反白
 05B6           ; //************
 05B6           ; void cur_set(uint type){
 05B6                   .dbline 367
 05B6           ;        if(type==0){
 05B6 4030              cpi R20,0
 05B8 4507              cpc R20,R21
 05BA 19F4              brne L87
 05BC           X28:
 05BC                   .dbline 367
 05BC                   .dbline 368
 05BC           ;               lcd_wcmd_1(0x0c);        
 05BC 0CE0              ldi R16,12
 05BE 46DD              xcall _lcd_wcmd_1
 05C0                   .dbline 369
 05C0           ;        }else if(type==1){
 05C0 30C0              xjmp L88
 05C2           L87:
 05C2                   .dbline 369
 05C2 4130              cpi R20,1
 05C4 E0E0              ldi R30,0
 05C6 5E07              cpc R21,R30
 05C8 19F4              brne L89
 05CA           X29:
 05CA                   .dbline 369
 05CA                   .dbline 370
 05CA           ;            lcd_wcmd_1(0x0e);
 05CA 0EE0              ldi R16,14
 05CC 3FDD              xcall _lcd_wcmd_1
 05CE                   .dbline 371
 05CE           ;        }else if(type==2){
 05CE 29C0              xjmp L90
 05D0           L89:
 05D0                   .dbline 371
 05D0 4230              cpi R20,2
 05D2 E0E0              ldi R30,0
 05D4 5E07              cpc R21,R30
 05D6 19F4              brne L91
 05D8           X30:
 05D8                   .dbline 371
 05D8                   .dbline 372
 05D8           ;           lcd_wcmd_1(0x0d);
 05D8 0DE0              ldi R16,13
 05DA 38DD              xcall _lcd_wcmd_1
 05DC                   .dbline 373
 05DC           ;        }else if(type==3){
 05DC 22C0              xjmp L92
 05DE           L91:
 05DE                   .dbline 373
 05DE 4330              cpi R20,3
 05E0 E0E0              ldi R30,0
 05E2 5E07              cpc R21,R30
 05E4 19F4              brne L93
 05E6           X31:
 05E6                   .dbline 373
 05E6                   .dbline 374
 05E6           ;           lcd_wcmd_1(0x0f);
 05E6 0FE0              ldi R16,15
 05E8 31DD              xcall _lcd_wcmd_1
 05EA                   .dbline 375
 05EA           ;        }else if(type==4){
 05EA 1BC0              xjmp L94
 05EC           L93:
 05EC                   .dbline 375
 05EC 4430              cpi R20,4
 05EE E0E0              ldi R30,0
 05F0 5E07              cpc R21,R30
 05F2 19F4              brne L95
 05F4           X32:
 05F4                   .dbline 375
 05F4                   .dbline 376
 05F4           ;           lcd_wcmd_2(0x0c);
 05F4 0CE0              ldi R16,12
 05F6 AEDD              xcall _lcd_wcmd_2
 05F8                   .dbline 377
 05F8           ;        }else if(type==5){
 05F8 14C0              xjmp L96
 05FA           L95:
 05FA                   .dbline 377
 05FA 4530              cpi R20,5
 05FC E0E0              ldi R30,0
 05FE 5E07              cpc R21,R30
 0600 19F4              brne L97
 0602           X33:
 0602                   .dbline 377
 0602                   .dbline 378
 0602           ;           lcd_wcmd_2(0x0e);
 0602 0EE0              ldi R16,14
 0604 A7DD              xcall _lcd_wcmd_2
 0606                   .dbline 379
 0606           ;        }else if(type==6){
 0606 0DC0              xjmp L98
 0608           L97:
 0608                   .dbline 379
 0608 4630              cpi R20,6
 060A E0E0              ldi R30,0
 060C 5E07              cpc R21,R30
 060E 19F4              brne L99
 0610           X34:
 0610                   .dbline 379
 0610                   .dbline 380
 0610           ;           lcd_wcmd_2(0x0d);
 0610 0DE0              ldi R16,13
 0612 A0DD              xcall _lcd_wcmd_2
 0614                   .dbline 381
 0614           ;        }else if(type==7){
 0614 06C0              xjmp L100
 0616           L99:
 0616                   .dbline 381
 0616 4730              cpi R20,7
 0618 E0E0              ldi R30,0
 061A 5E07              cpc R21,R30
 061C 11F4              brne L101
 061E           X35:
 061E                   .dbline 381
 061E                   .dbline 382
 061E           ;           lcd_wcmd_2(0x0f);
 061E 0FE0              ldi R16,15
 0620 99DD              xcall _lcd_wcmd_2
 0622                   .dbline 383
 0622           ;        }
 0622           L101:
 0622           L100:
 0622           L98:
 0622           L96:
 0622           L94:
 0622           L92:
 0622           L90:
 0622           L88:
 0622                   .dbline -2
 0622           L86:
 0622                   .dbline 0 ; func end
 0622 5991              ld R21,y+
 0624 4991              ld R20,y+
 0626 0895              ret
 0628                   .dbsym r type 20 i
 0628                   .dbend
 0628                   .dbfunc e Set_Draw _Set_Draw fV
                        .even
 0628           _Set_Draw::
 0628                   .dbline -1
 0628                   .dbline 397
 0628           ; }
 0628           ; //***************************************************
 0628           ; //   反白相关
 0628           ; //***************************************************
 0628           ; /********************************************************************  
 0628           ;     函 数 名：Set_Draw(  
 0628           ;     入口参数：无  
 0628           ;     出口参数：无  
 0628           ;     修改日期：  
 0628           ;     函数作用：  
 0628           ;     说    明：  
 0628           ;     ********************************************************************/   
 0628           ;     void Set_Draw(void)   
 0628           ;     {   
 0628                   .dbline 399
 0628           ;         //W_1byte(0,0,0x01);            //清屏   
 0628           ;         delay_ms(2);                  //延时   
 0628 02E0              ldi R16,2
 062A 10E0              ldi R17,0
 062C 0E940000          xcall _delay_ms
 0630                   .dbline 401
 0630           ;         //W_1byte(0,0,0x34);            //8BIT控制界面，扩充指令集,，绘图显示OFF   
 0630           ;         lcd_wcmd_1(0x36); 
 0630 06E3              ldi R16,54
 0632 0CDD              xcall _lcd_wcmd_1
 0634                   .dbline 403
 0634           ;               //lcd_wcmd_2(0x36);   
 0634           ;         delay_ms(2);                  //延时   
 0634 02E0              ldi R16,2
 0636 10E0              ldi R17,0
 0638                   .dbline -2
 0638           L103:
 0638                   .dbline 0 ; func end
 0638 0C940000          xjmp _delay_ms
 063C                   .dbend
 063C                   .dbfunc e Set_UNDraw _Set_UNDraw fV
                        .even
 063C           _Set_UNDraw::
 063C                   .dbline -1
 063C                   .dbline 406
 063C           ;     }
 063C           ;       void Set_UNDraw(void)   
 063C           ;     {   
 063C                   .dbline 408
 063C           ;         //W_1byte(0,0,0x01);            //清屏   
 063C           ;         delay_ms(2);                  //延时   
 063C 02E0              ldi R16,2
 063E 10E0              ldi R17,0
 0640 0E940000          xcall _delay_ms
 0644                   .dbline 410
 0644           ;         //W_1byte(0,0,0x34);            //8BIT控制界面，扩充指令集,，绘图显示OFF   
 0644           ;         lcd_wcmd_1(0x30); 
 0644 00E3              ldi R16,48
 0646 02DD              xcall _lcd_wcmd_1
 0648                   .dbline 412
 0648           ;               //lcd_wcmd_2(0x36);   
 0648           ;         delay_ms(2);                  //延时   
 0648 02E0              ldi R16,2
 064A 10E0              ldi R17,0
 064C                   .dbline -2
 064C           L104:
 064C                   .dbline 0 ; func end
 064C 0C940000          xjmp _delay_ms
 0650                   .dbend
 0650                   .dbfunc e Set_White_off _Set_White_off fV
 0650           ;          clr_y -> R12
 0650           ;          clr_x -> R14
 0650           ;        white_y -> R20
 0650           ;        white_x -> R22
 0650           ;              i -> R12
 0650           ;    white_end_x -> R10
 0650           ;              j -> R14
 0650           ;          end_x -> R10
 0650           ;              y -> y+12
 0650           ;              x -> y+10
                        .even
 0650           _Set_White_off::
 0650 0E940000          xcall push_arg4
 0654 0E940000          xcall push_xgsetF0FC
 0658 AE84              ldd R10,y+14
 065A                   .dbline -1
 065A                   .dbline 421
 065A           ;     }
 065A           ; /**************************************************  
 065A           ;     uchar x,起始位置
 065A           ;       uchar y,对应y
 065A           ;       uchar end_x, 反白结束位置
 065A           ;       uchar clear 0：反白，1：不反白
 065A           ;  **************************************************/   
 065A           ;     void Set_White_off(uchar x,uchar y,uchar end_x)   
 065A           ;     {   
 065A                   .dbline 423
 065A           ;         uchar i, j, white_x, white_y,white_end_x,clr_x,clr_y;       //   
 065A           ;         white_end_x = (end_x-x+1);   
 065A 8A2D              mov R24,R10
 065C 0A84              ldd R0,y+10
 065E 8019              sub R24,R0
 0660 8F5F              subi R24,255    ; addi 1
 0662 A82E              mov R10,R24
 0664                   .dbline 424
 0664           ;         white_end_x <<= 1;   //16*16，一次写8个，所以乘2
 0664 AA0C              lsl R10
 0666                   .dbline 425
 0666           ;               Set_Draw(); //开画图
 0666 E0DF              xcall _Set_Draw
 0668                   .dbline 426
 0668           ;               delay_us(1); 
 0668 01E0              ldi R16,1
 066A 10E0              ldi R17,0
 066C 0E940000          xcall _delay_us
 0670                   .dbline 427
 0670           ;         if(y==1)   
 0670 8C85              ldd R24,y+12
 0672 8130              cpi R24,1
 0674 41F4              brne L106
 0676           X36:
 0676                   .dbline 428
 0676           ;         {   
 0676                   .dbline 429
 0676           ;             white_x = (0x80+x-1);   
 0676 6A85              ldd R22,y+10
 0678 6058              subi R22,128    ; addi 128
 067A 6150              subi R22,1
 067C                   .dbline 430
 067C           ;             white_y = 0x80;   
 067C 40E8              ldi R20,128
 067E                   .dbline 431
 067E           ;             clr_x = 0x80;   
 067E 80E8              ldi R24,128
 0680 E82E              mov R14,R24
 0682                   .dbline 432
 0682           ;             clr_y = 0x80;   
 0682 C82E              mov R12,R24
 0684                   .dbline 433
 0684           ;         }   
 0684 23C0              xjmp L107
 0686           L106:
 0686                   .dbline 434
 0686           ;         else if(y==2)   
 0686 8C85              ldd R24,y+12
 0688 8230              cpi R24,2
 068A 49F4              brne L108
 068C           X37:
 068C                   .dbline 435
 068C           ;         {   
 068C                   .dbline 436
 068C           ;             white_x = (0x80+x-1);   
 068C 6A85              ldd R22,y+10
 068E 6058              subi R22,128    ; addi 128
 0690 6150              subi R22,1
 0692                   .dbline 437
 0692           ;             white_y = 0x90;   
 0692 40E9              ldi R20,144
 0694                   .dbline 438
 0694           ;             clr_x = 0x80;   
 0694 80E8              ldi R24,128
 0696 E82E              mov R14,R24
 0698                   .dbline 439
 0698           ;             clr_y = 0x90;   
 0698 80E9              ldi R24,144
 069A C82E              mov R12,R24
 069C                   .dbline 440
 069C           ;         }   
 069C 17C0              xjmp L109
 069E           L108:
 069E                   .dbline 441
 069E           ;         else if(y==3)   
 069E 8C85              ldd R24,y+12
 06A0 8330              cpi R24,3
 06A2 49F4              brne L110
 06A4           X38:
 06A4                   .dbline 442
 06A4           ;         {   
 06A4                   .dbline 443
 06A4           ;             white_x = (0x88+x-1);   
 06A4 6A85              ldd R22,y+10
 06A6 6857              subi R22,120    ; addi 136
 06A8 6150              subi R22,1
 06AA                   .dbline 444
 06AA           ;             white_y = 0x80;   
 06AA 40E8              ldi R20,128
 06AC                   .dbline 445
 06AC           ;             clr_x = 0x88;   
 06AC 88E8              ldi R24,136
 06AE E82E              mov R14,R24
 06B0                   .dbline 446
 06B0           ;             clr_y = 0x80;   
 06B0 80E8              ldi R24,128
 06B2 C82E              mov R12,R24
 06B4                   .dbline 447
 06B4           ;         }   
 06B4 0BC0              xjmp L111
 06B6           L110:
 06B6                   .dbline 448
 06B6           ;         else if(y==4)   
 06B6 8C85              ldd R24,y+12
 06B8 8430              cpi R24,4
 06BA 41F4              brne L112
 06BC           X39:
 06BC                   .dbline 449
 06BC           ;         {   
 06BC                   .dbline 450
 06BC           ;             white_x = (0x88+x-1);   
 06BC 6A85              ldd R22,y+10
 06BE 6857              subi R22,120    ; addi 136
 06C0 6150              subi R22,1
 06C2                   .dbline 451
 06C2           ;             white_y = 0x90;   
 06C2 40E9              ldi R20,144
 06C4                   .dbline 452
 06C4           ;             clr_x = 0x88;   
 06C4 88E8              ldi R24,136
 06C6 E82E              mov R14,R24
 06C8                   .dbline 453
 06C8           ;             clr_y = 0x90;   
 06C8 80E9              ldi R24,144
 06CA C82E              mov R12,R24
 06CC                   .dbline 454
 06CC           ;         }   
 06CC           L112:
 06CC           L111:
 06CC           L109:
 06CC           L107:
 06CC                   .dbline 455
 06CC           ;         delay_us(1);     
 06CC 01E0              ldi R16,1
 06CE 10E0              ldi R17,0
 06D0 0E940000          xcall _delay_us
 06D4                   .dbline 456
 06D4           ;         for(i=0;i<16;i++ )               //16行，因为是16*16汉字   
 06D4 CC24              clr R12
 06D6 0EC0              xjmp L117
 06D8           L114:
 06D8                   .dbline 457
 06D8           ;         {   
 06D8                   .dbline 458
 06D8           ;             lcd_wcmd_1(white_y++);     //设置绘图区的Y地址坐标0   
 06D8 242E              mov R2,R20
 06DA 4F5F              subi R20,255    ; addi 1
 06DC 022D              mov R16,R2
 06DE B6DC              xcall _lcd_wcmd_1
 06E0                   .dbline 459
 06E0           ;             lcd_wcmd_1(white_x);       //设置绘图区的X地址坐标0   
 06E0 062F              mov R16,R22
 06E2 B4DC              xcall _lcd_wcmd_1
 06E4                   .dbline 460
 06E4           ;             for(j=0;j<white_end_x;j++)   //   
 06E4 EE24              clr R14
 06E6 03C0              xjmp L121
 06E8           L118:
 06E8                   .dbline 461
 06E8           ;             {     
 06E8                   .dbline 462
 06E8           ;               lcd_wdat_1(0x00); //取消这一行的8个点的反白，液晶地址自动加   
 06E8 0027              clr R16
 06EA DEDC              xcall _lcd_wdat_1
 06EC                   .dbline 463
 06EC           ;             }   
 06EC           L119:
 06EC                   .dbline 460
 06EC E394              inc R14
 06EE           L121:
 06EE                   .dbline 460
 06EE EA14              cp R14,R10
 06F0 D8F3              brlo L118
 06F2           X40:
 06F2                   .dbline 464
 06F2           ;         }
 06F2           L115:
 06F2                   .dbline 456
 06F2 C394              inc R12
 06F4           L117:
 06F4                   .dbline 456
 06F4 8C2D              mov R24,R12
 06F6 8031              cpi R24,16
 06F8 78F3              brlo L114
 06FA           X41:
 06FA                   .dbline 465
 06FA           ;                 Set_UNDraw();//关画图  
 06FA A0DF              xcall _Set_UNDraw
 06FC                   .dbline 466
 06FC           ;                 delay_us(1);  
 06FC 01E0              ldi R16,1
 06FE 10E0              ldi R17,0
 0700 0E940000          xcall _delay_us
 0704                   .dbline -2
 0704           L105:
 0704                   .dbline 0 ; func end
 0704 0E940000          xcall pop_xgsetF0FC
 0708 2496              adiw R28,4
 070A 0895              ret
 070C                   .dbsym r clr_y 12 c
 070C                   .dbsym r clr_x 14 c
 070C                   .dbsym r white_y 20 c
 070C                   .dbsym r white_x 22 c
 070C                   .dbsym r i 12 c
 070C                   .dbsym r white_end_x 10 c
 070C                   .dbsym r j 14 c
 070C                   .dbsym r end_x 10 c
 070C                   .dbsym l y 12 c
 070C                   .dbsym l x 10 c
 070C                   .dbend
 070C                   .dbfunc e Set_White _Set_White fV
 070C           ;          clr_y -> R12
 070C           ;          clr_x -> R14
 070C           ;        white_y -> R20
 070C           ;        white_x -> R22
 070C           ;              i -> R12
 070C           ;    white_end_x -> R10
 070C           ;              j -> R14
 070C           ;          end_x -> R10
 070C           ;              y -> y+12
 070C           ;              x -> y+10
                        .even
 070C           _Set_White::
 070C 0E940000          xcall push_arg4
 0710 0E940000          xcall push_xgsetF0FC
 0714 AE84              ldd R10,y+14
 0716                   .dbline -1
 0716                   .dbline 469
 0716           ;     } 
 0716           ;       void Set_White(uchar x,uchar y,uchar end_x)   
 0716           ;     {   
 0716                   .dbline 471
 0716           ;         uchar i, j, white_x, white_y,white_end_x,clr_x,clr_y;       //   
 0716           ;         white_end_x = (end_x-x+1);   
 0716 8A2D              mov R24,R10
 0718 0A84              ldd R0,y+10
 071A 8019              sub R24,R0
 071C 8F5F              subi R24,255    ; addi 1
 071E A82E              mov R10,R24
 0720                   .dbline 472
 0720           ;         white_end_x <<= 1;   //16*16，一次写8个，所以乘2
 0720 AA0C              lsl R10
 0722                   .dbline 473
 0722           ;               Set_Draw(); //开画图
 0722 82DF              xcall _Set_Draw
 0724                   .dbline 474
 0724           ;               delay_us(1); 
 0724 01E0              ldi R16,1
 0726 10E0              ldi R17,0
 0728 0E940000          xcall _delay_us
 072C                   .dbline 475
 072C           ;         if(y==1)   
 072C 8C85              ldd R24,y+12
 072E 8130              cpi R24,1
 0730 41F4              brne L123
 0732           X42:
 0732                   .dbline 476
 0732           ;         {   
 0732                   .dbline 477
 0732           ;             white_x = (0x80+x-1);   
 0732 6A85              ldd R22,y+10
 0734 6058              subi R22,128    ; addi 128
 0736 6150              subi R22,1
 0738                   .dbline 478
 0738           ;             white_y = 0x80;   
 0738 40E8              ldi R20,128
 073A                   .dbline 479
 073A           ;             clr_x = 0x80;   
 073A 80E8              ldi R24,128
 073C E82E              mov R14,R24
 073E                   .dbline 480
 073E           ;             clr_y = 0x80;   
 073E C82E              mov R12,R24
 0740                   .dbline 481
 0740           ;         }   
 0740 23C0              xjmp L124
 0742           L123:
 0742                   .dbline 482
 0742           ;         else if(y==2)   
 0742 8C85              ldd R24,y+12
 0744 8230              cpi R24,2
 0746 49F4              brne L125
 0748           X43:
 0748                   .dbline 483
 0748           ;         {   
 0748                   .dbline 484
 0748           ;             white_x = (0x80+x-1);   
 0748 6A85              ldd R22,y+10
 074A 6058              subi R22,128    ; addi 128
 074C 6150              subi R22,1
 074E                   .dbline 485
 074E           ;             white_y = 0x90;   
 074E 40E9              ldi R20,144
 0750                   .dbline 486
 0750           ;             clr_x = 0x80;   
 0750 80E8              ldi R24,128
 0752 E82E              mov R14,R24
 0754                   .dbline 487
 0754           ;             clr_y = 0x90;   
 0754 80E9              ldi R24,144
 0756 C82E              mov R12,R24
 0758                   .dbline 488
 0758           ;         }   
 0758 17C0              xjmp L126
 075A           L125:
 075A                   .dbline 489
 075A           ;         else if(y==3)   
 075A 8C85              ldd R24,y+12
 075C 8330              cpi R24,3
 075E 49F4              brne L127
 0760           X44:
 0760                   .dbline 490
 0760           ;         {   
 0760                   .dbline 491
 0760           ;             white_x = (0x88+x-1);   
 0760 6A85              ldd R22,y+10
 0762 6857              subi R22,120    ; addi 136
 0764 6150              subi R22,1
 0766                   .dbline 492
 0766           ;             white_y = 0x80;   
 0766 40E8              ldi R20,128
 0768                   .dbline 493
 0768           ;             clr_x = 0x88;   
 0768 88E8              ldi R24,136
 076A E82E              mov R14,R24
 076C                   .dbline 494
 076C           ;             clr_y = 0x80;   
 076C 80E8              ldi R24,128
 076E C82E              mov R12,R24
 0770                   .dbline 495
 0770           ;         }   
 0770 0BC0              xjmp L128
 0772           L127:
 0772                   .dbline 496
 0772           ;         else if(y==4)   
 0772 8C85              ldd R24,y+12
 0774 8430              cpi R24,4
 0776 41F4              brne L129
 0778           X45:
 0778                   .dbline 497
 0778           ;         {   
 0778                   .dbline 498
 0778           ;             white_x = (0x88+x-1);   
 0778 6A85              ldd R22,y+10
 077A 6857              subi R22,120    ; addi 136
 077C 6150              subi R22,1
 077E                   .dbline 499
 077E           ;             white_y = 0x90;   
 077E 40E9              ldi R20,144
 0780                   .dbline 500
 0780           ;             clr_x = 0x88;   
 0780 88E8              ldi R24,136
 0782 E82E              mov R14,R24
 0784                   .dbline 501
 0784           ;             clr_y = 0x90;   
 0784 80E9              ldi R24,144
 0786 C82E              mov R12,R24
 0788                   .dbline 502
 0788           ;         }       
 0788           L129:
 0788           L128:
 0788           L126:
 0788           L124:
 0788                   .dbline 503
 0788           ;         for(i=0;i<16;i++ )               //16行，因为是16*16汉字   
 0788 CC24              clr R12
 078A 0EC0              xjmp L134
 078C           L131:
 078C                   .dbline 504
 078C           ;         {   
 078C                   .dbline 505
 078C           ;             lcd_wcmd_1(white_y++);     //设置绘图区的Y地址坐标0   
 078C 242E              mov R2,R20
 078E 4F5F              subi R20,255    ; addi 1
 0790 022D              mov R16,R2
 0792 5CDC              xcall _lcd_wcmd_1
 0794                   .dbline 506
 0794           ;             lcd_wcmd_1(white_x);       //设置绘图区的X地址坐标0   
 0794 062F              mov R16,R22
 0796 5ADC              xcall _lcd_wcmd_1
 0798                   .dbline 507
 0798           ;             for(j=0;j<white_end_x;j++)   //   
 0798 EE24              clr R14
 079A 03C0              xjmp L138
 079C           L135:
 079C                   .dbline 508
 079C           ;             {    
 079C                   .dbline 509
 079C           ;                     lcd_wdat_1(0xff); //反白这一行的8个点，液晶地址自动加1     
 079C 0FEF              ldi R16,255
 079E 84DC              xcall _lcd_wdat_1
 07A0                   .dbline 510
 07A0           ;             }   
 07A0           L136:
 07A0                   .dbline 507
 07A0 E394              inc R14
 07A2           L138:
 07A2                   .dbline 507
 07A2 EA14              cp R14,R10
 07A4 D8F3              brlo L135
 07A6           X46:
 07A6                   .dbline 511
 07A6           ;         }
 07A6           L132:
 07A6                   .dbline 503
 07A6 C394              inc R12
 07A8           L134:
 07A8                   .dbline 503
 07A8 8C2D              mov R24,R12
 07AA 8031              cpi R24,16
 07AC 78F3              brlo L131
 07AE           X47:
 07AE                   .dbline 512
 07AE           ;                 Set_UNDraw();//关画图  
 07AE 46DF              xcall _Set_UNDraw
 07B0                   .dbline 513
 07B0           ;                 delay_us(1);  
 07B0 01E0              ldi R16,1
 07B2 10E0              ldi R17,0
 07B4 0E940000          xcall _delay_us
 07B8                   .dbline -2
 07B8           L122:
 07B8                   .dbline 0 ; func end
 07B8 0E940000          xcall pop_xgsetF0FC
 07BC 2496              adiw R28,4
 07BE 0895              ret
 07C0                   .dbsym r clr_y 12 c
 07C0                   .dbsym r clr_x 14 c
 07C0                   .dbsym r white_y 20 c
 07C0                   .dbsym r white_x 22 c
 07C0                   .dbsym r i 12 c
 07C0                   .dbsym r white_end_x 10 c
 07C0                   .dbsym r j 14 c
 07C0                   .dbsym r end_x 10 c
 07C0                   .dbsym l y 12 c
 07C0                   .dbsym l x 10 c
 07C0                   .dbend
 07C0                   .dbfunc e lcd_Desk _lcd_Desk fV
                        .even
 07C0           _lcd_Desk::
 07C0 2297              sbiw R28,2
 07C2                   .dbline -1
 07C2                   .dbline 562
 07C2           ;     } 
 07C2           ;       /********************************************************************  
 07C2           ;     函 数 名：Draw_Pic  128*64  
 07C2           ;     入口参数：x,y,*Draw  
 07C2           ;     出口参数：无  
 07C2           ;     建立日期：2007年8月26日  
 07C2           ;     修改日期：  
 07C2           ;     函数作用：  
 07C2           ;     说    明：  
 07C2           ;     ********************************************************************/   
 07C2           ;     /*************************************************/   
 07C2           ;     /*   
 07C2           ;     void Draw_Pic(uchar x, uchar y, const uchar *Draw)   
 07C2           ;     {   
 07C2           ;         uchar i, j, temp_x, temp_y;     //   
 07C2           ;         temp_x = x;                     //   
 07C2           ;         temp_y = y;                     //   
 07C2           ;         temp_x |= 0x80;                 //   
 07C2           ;         temp_y |= 0x80;                 //   
 07C2           ;         for(i=0;i<32;i++ )               //上半屏32行   
 07C2           ;         {   
 07C2           ;             lcd_wcmd_1(0,0,temp_y++);      //设置绘图区的Y地址坐标0   
 07C2           ;             lcd_wcmd_1(0,0,temp_x);        //设置绘图区的X地址坐标0   
 07C2           ;             for(j=0;j<16;j++)            //   
 07C2           ;             {   
 07C2           ;                  lcd_wdat_2(0,1,*Draw++);  //   
 07C2           ;             }   
 07C2           ;         }   
 07C2           ;            
 07C2           ;         temp_x = 0x88;                  //   
 07C2           ;         temp_y = 0x80;                  //   
 07C2           ;         j = 0;                          //   
 07C2           ;         for(;i<64;i++ )   
 07C2           ;         {   
 07C2           ;             lcd_wcmd_1(temp_y++);      //设置绘图区的Y地址坐标   
 07C2           ;             lcd_wdat_2(temp_x);        //设置绘图区的X地址坐标   
 07C2           ;             for(j=0;j<16;j++)   
 07C2           ;             {   
 07C2           ;                  lcd_wdat_2(0,1,*Draw++);  //   
 07C2           ;             }   
 07C2           ;         }   
 07C2           ;             
 07C2           ;     } */    
 07C2           ;     /*************************************************/  
 07C2           ; //***********************************************************************
 07C2           ; //      液晶显示界面初始化
 07C2           ; //***********************************************************************
 07C2           ; void lcd_Desk(void)
 07C2           ; { 
 07C2                   .dbline 566
 07C2           ;   //uint i=0;   
 07C2           ;  // lcd_clear();
 07C2           ;   //lcd_write_str(0,0,"ADC0:");
 07C2           ;   lcd_write_str(0,3,"反白测试第一次");
 07C2 80E0              ldi R24,<L140
 07C4 90E0              ldi R25,>L140
 07C6 9983              std y+1,R25
 07C8 8883              std y+0,R24
 07CA 23E0              ldi R18,3
 07CC 0027              clr R16
 07CE 7EDD              xcall _lcd_write_str
 07D0                   .dbline 567
 07D0           ;   lcd_write_str(0,0,"反白测试第一次");
 07D0 80E0              ldi R24,<L140
 07D2 90E0              ldi R25,>L140
 07D4 9983              std y+1,R25
 07D6 8883              std y+0,R24
 07D8 2227              clr R18
 07DA 0027              clr R16
 07DC 77DD              xcall _lcd_write_str
 07DE                   .dbline 570
 07DE           ;   //delay_ms(100);
 07DE           ;      
 07DE           ;     Set_White(1,1,7); 
 07DE 87E0              ldi R24,7
 07E0 8883              std y+0,R24
 07E2 21E0              ldi R18,1
 07E4 01E0              ldi R16,1
 07E6 92DF              xcall _Set_White
 07E8                   .dbline 573
 07E8           ;          
 07E8           ;        
 07E8           ;     delay_ms(3000); 
 07E8 08EB              ldi R16,3000
 07EA 1BE0              ldi R17,11
 07EC 0E940000          xcall _delay_ms
 07F0                   .dbline 574
 07F0           ;      Set_White_off(1,1,7);
 07F0 87E0              ldi R24,7
 07F2 8883              std y+0,R24
 07F4 21E0              ldi R18,1
 07F6 01E0              ldi R16,1
 07F8 2BDF              xcall _Set_White_off
 07FA                   .dbline 575
 07FA           ;       Set_White(2,1,2); 
 07FA 82E0              ldi R24,2
 07FC 8883              std y+0,R24
 07FE 21E0              ldi R18,1
 0800 02E0              ldi R16,2
 0802 84DF              xcall _Set_White
 0804                   .dbline 576
 0804           ;        delay_ms(300); 
 0804 0CE2              ldi R16,300
 0806 11E0              ldi R17,1
 0808 0E940000          xcall _delay_ms
 080C                   .dbline 577
 080C           ;        Set_White_off(2,2,7);
 080C 87E0              ldi R24,7
 080E 8883              std y+0,R24
 0810 22E0              ldi R18,2
 0812 02E0              ldi R16,2
 0814 1DDF              xcall _Set_White_off
 0816                   .dbline 578
 0816           ;        Set_White(3,1,5);   
 0816 85E0              ldi R24,5
 0818 8883              std y+0,R24
 081A 21E0              ldi R18,1
 081C 03E0              ldi R16,3
 081E 76DF              xcall _Set_White
 0820                   .dbline -2
 0820           L139:
 0820                   .dbline 0 ; func end
 0820 2296              adiw R28,2
 0822 0895              ret
 0824                   .dbend
                        .area data(ram, con, rel)
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\lcd.c
 0000           L140:
 0000                   .blkb 15
                        .area idata
 0000 B7B4B0D7B2E2CAD4B5DAD2BBB4CE00    .byte 183,180,176,215,178,226,202,212,181,218,210,187,180,206,0
                        .area data(ram, con, rel)
 000F                   .dbfile E:\ICCDemo\Temp_Control\temp_control\lcd.c
 000F           ;   
 000F           ;    //lcd_write_str(0,1,"第二行测试");
 000F           ;   // lcd_write_str(0,2,"三行我测试");
 000F           ;    //lcd_write_str(0,3,"四行我测试");
 000F           ;   /*for(i=0;i<10;i++){
 000F           ;               lcd_write_char(0x0b,0,0x30+i);  
 000F           ;               delay_ms(100);          
 000F           ;   }*/
 000F           ;   
 000F           ; }
