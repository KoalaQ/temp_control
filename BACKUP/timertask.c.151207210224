#include<iom128v.h>
#include "timertask.h"
#include "time.h"
#include "lcd.h"
#include "delay.h"
#include "main.h"
unsigned char time_h_1, time_l_1,time_h_3, time_l_3,time_0, time_2,i;
//************************************************
//16位定时器，定时器1
//*************************************************
/*
  计数器1，16位的。普通计时，1024分频。在16M下约0.061ms计数一次。共4s钟,
  自行计算时间传入。传入高低八位
*/
void Timerinit_1(uchar time_h,uchar time_l){
    time_h_1=time_h;
	time_l_1=time_l;
	 TCCR1B=0x00;
	//写入初值
    TCNT1H=time_h;
    TCNT1L=time_l;
	//普通计数，1024分频
    TCCR1A=0x00;
    TCCR1B=0x05;
	 TIMSK|=0x04;//开定时器1溢出中断,16位的
}
//************************************************
//16位定时器，定时器3
//*************************************************
/*
  计数器1，16位的。普通计时，1024分频。在16M下约0.061ms计数一次。共4s钟,
  自行计算时间传入。传入高低八位
*/
void Timerinit_3(uchar time_h,uchar time_l){
 	time_h_3=time_h;
	time_l_3=time_l;
	//写入初值
	 TCCR3B=0x00;
    TCNT3H=time_h;
    TCNT3L=time_l;
	//普通计数，1024分频
    TCCR3A=0x00;
    TCCR3B=0x05;
	ETIMSK |=0x04;//开外部中断1
}
//************************************************
//8位定时器，定时器0
//*************************************************

/*
  计数器0，8位的。普通计时，1024分频。
  自行计算时间传入。
*/
void Timerinit_0(uchar time){
    time_0=time;
	//写入初值
    TCNT0=time;
	TIMSK|=0x01;//开定时器0溢出中断,8位的
	 TCCR0=0x07;//普通计数，1024分频
}
//************************************************
//8位定时器，定时器2
//*************************************************
/*
  计数器0，8位的。普通计时，1024分频。
  自行计算时间传入。
*/
void Timerinit_2(uchar time){
    time_2=time;
	//写入初值
    TCNT2=time;
	TIMSK|=0x40;//开定时器0溢出中断,8位的
	//普通计数，1024分频
    TCCR2=0x05;
}
#pragma interrupt_handler int_timer0:17
void int_timer0(void){ 
		TCCR0=0x00;
		//adc_init_once();
		
		//停止后不在启动
		/*
		TCNT0=time_0;
		TCCR0=0x07;*/
		return;
}
//溢出中断。
#pragma interrupt_handler int_timer1:15
void int_timer1(void){
		 TCCR1B=0x00;
		//adc_init_once();
		for(i=0;i<5;i++){
  		 lcd_write_char(0x03,3,0x30+i);	
		 delay_ms(100);		
        }
		TCNT1H=time_h_1;
         TCNT1L=time_l_1;
		 TCCR1B=0x05;
		return;
}
#pragma interrupt_handler int_timer2:11
void int_timer2(void){
      //PORTE=~PORTE;
		TCCR2=0x00;
		for(i=0;i<5;i++){
  		 lcd_write_char(0x00,3,0x30+i);	
		 delay_ms(100);		
        }
		TCNT2=time_2;
		TCCR2=0x05;
		return;
}
//16位定时器，定时器3溢出中断。
#pragma interrupt_handler int_timer3:30
void int_timer3(void){
    TCCR3B=0x00;
    waitflag--;
	lcd_write_char(10,0,0x30+waitflag);
	lcd_write_char(11,0,'s');	
	if(waitflag>0){
	  TCNT3H=time_h_3;
      TCNT3L=time_l_3;
	  TCCR3B=0x05;
	 }
}