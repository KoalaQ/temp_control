#include<iom128v.h>
#include "time.h"
#include "delay.h"
#include "lcd.h"
//寄存器宏定义
#define SECOND 0x00
#define MINUTE 0x01 
#define HOUR 0x02
#define DAY 0x04
#define MONTH 0x05 
#define WEEK 0x03
#define YEAE 0x06
#define CIBTPOL 0x07 



#define  SCL_H  PORTD|=1<<PD0 //
#define  SCL_L  PORTD&=~(1<<PD0) //
#define  SDA_in   PORTD&(~(1<<PD1)) //会获得PB1的值，判断是否等于0来确定值
#define  SDA_H   PORTD|=1<<PD1 //
#define  SDA_L  PORTD&=~(1<<PD1)  //



//地址、数据发送子程序
void Write1302  ( unsigned char  addr,unsigned char dat )
{ 
  unsigned char  i,temp; 
  CE_L; //CE引脚为低，数据传送中止
  SCLK_L;//清零时钟总线?
  CE_H;//CE引脚为高，逻辑控制有效
  //发送地址?
    for ( i=8; i>0; i-- ) //循环8次移位
    { 
       SCLK_L;
	   temp=addr;
       if((temp&0x01))//每次传输低字节
	   {
	   	DIO_H;
	   }else{
	   DIO_L;
	   }
       addr>>=1;//右移一位
			  SCLK_H;
 }
//发送数据?
for(i=8;i>0;i--){
   SCLK_L; 
   temp=dat;
   if((temp&0x01))//每次传输低字节
	   {
	   	DIO_H;
	   }else{
	   DIO_L;
	   }
	dat>>=1;
    SCLK_H;
  }
   CE_L;
}
//数据读取子程序
unsigned char Read1302( unsigned char addr ){
   unsigned char i,temp,data=0;
   CE_L;
   SCLK_L;
   CE_H;//发送地址?
   for(i=8;i>0;i--)//循环8次移位
   {
      
	   temp=addr;
      if((temp&0x01))//每次传输低字节
	   {
	   	DIO_H;
	   }else{
	   DIO_L;
	   }
	   SCLK_L;
       addr>>=1;//右移一位
	  SCLK_H;
   }
//读取数据
DDRD&=0xFD;
 for(i=0;i<8;i++)
  {
     SCLK_H;
	 SCLK_L;
	 delay_ms(1);
   	 data |=(((PIND&(1<<PD1))>>1)<<i);
           
    }
	///PORTE=data;
   DDRD|=0x07;
    CE_L;
    // temp = data>>4;
   // data &= 0x0f;
    //data = temp*10 + data;
	
    return(data);
}
//初始化DS1302?
void Initial_time(void) {
   DDRD|=0x07;
   PORTD=0x00;
   Write1302(WRITE_PROTECT,0X00);//禁止写保护
   Write1302(WRITE_SECOND,0x00);//秒位初始化
   Write1302(WRITE_MINUTE,0x50);//分钟初始化
   Write1302(WRITE_HOUR,0x91);//小时初始化
   Write1302(WRITE_PROTECT,0x80);//写保护
}

uint getYear(void){
 return 1;
}
uint getMonth(void){
  return 1;
}
uint getDay(void){
 return 1;
}
uint getWeek(void){
 return 1;
}
uint getHour(void){
 return 1;
}
uint getMinute(void){
 return 1;
}
uint getSecond(void){
 return 1;
}
void setTime(uint year,uint month,uint day,uint week,uint hour,uint minute,uint second){

}
//显示时间，年月日时分秒，用于page调用。没有改变AC，会接着写
void showTime_page(uint y){
   //PORTE=~Read1302(0x81);
   //年
    lcd_write_str_con(y, "20");
    lcd_write_char_con(y, 0x30|((Read1302(0x8D)>>4)&0x0F));
    lcd_write_char_con(y,0x30|(Read1302(0x8D)&0x0F)); 
	lcd_write_char_con(y,'-');
	 //月
	 lcd_write_char_con(y, 0x30|((Read1302(0x89)>>4)&0x01));
     lcd_write_char_con(y,0x30|(Read1302(0x89)&0x0F)); 
	 lcd_write_char_con(y,'-');
	 //日
	 lcd_write_char_con(y, 0x30|((Read1302(0x87)>>4)&0x03));
     lcd_write_char_con(y,0x30|(Read1302(0x87)&0x0F)); 
	 lcd_write_char_con(y,' ');
	//时
	 lcd_write_char_con(y, 0x30|((Read1302(0x85)>>4)&0x03));
	 lcd_write_char_con(y,0x30|(Read1302(0x85)&0x0F)); 
	 lcd_write_char_con(y,':');
	//分
	 lcd_write_char_con(y, 0x30|Read1302(0x83)>>4);
	 lcd_write_char_con(y,0x30|(Read1302(0x83)&0x0F));
	 lcd_write_char_con(y,':');
	//秒
	 lcd_write_char_con(y, 0x30|(Read1302(0x81)>>4));
	 lcd_write_char_con(y,0x30|(Read1302(0x81)&0x0F));
}




