                        .module uart.c
                        .area text(rom, con, rel)
 0000                   .dbfile uart.c
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\uart.c
 0000                   .dbfunc e uart0_init _uart0_init fV
                        .even
 0000           _uart0_init::
 0000                   .dbline -1
 0000                   .dbline 9
 0000           ; #include <iom128v.h>
 0000           ; #include "uart.h"
 0000           ; #include "main.h"
 0000           ; #define fosc  800000  //晶振8MHZ
 0000           ; #define baud 9600  //波特率
 0000           ; 
 0000           ; 
 0000           ; void uart0_init(void)
 0000           ; {
 0000                   .dbline 10
 0000           ; UCSR0B = 0x00; //关闭UART00
 0000 2224              clr R2
 0002 2AB8              out 0xa,R2
 0004                   .dbline 11
 0004           ; UCSR0A = 0x00; //不使用倍速发送（异步）
 0004 2BB8              out 0xb,R2
 0006                   .dbline 12
 0006           ; UCSR0C =(1<<UCSZ01)|(1<<UCSZ00); //数据位为8位
 0006 86E0              ldi R24,6
 0008 80939500          sts 149,R24
 000C                   .dbline 15
 000C           ; //UBRR0L=(fosc/16/(baud+1))%6; //异步正常情况下的计算公式
 000C           ; //UBRR0H=(fosc/16/(baud+1))/256;
 000C           ; UBRR0L=103; //异步正常情况下的计算公式.9600
 000C 87E6              ldi R24,103
 000E 89B9              out 0x9,R24
 0010                   .dbline 16
 0010           ; UBRR0H=0x00;
 0010 20929000          sts 144,R2
 0014                   .dbline 17
 0014           ; UCSR0B |=(1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); //接收使能和发送使能.接收终端打开
 0014 8AB1              in R24,0xa
 0016 8869              ori R24,152
 0018 8AB9              out 0xa,R24
 001A                   .dbline -2
 001A           L1:
 001A                   .dbline 0 ; func end
 001A 0895              ret
 001C                   .dbend
 001C                   .dbfunc e putchar0 _putchar0 fV
 001C           ;              c -> R16
                        .even
 001C           _putchar0::
 001C                   .dbline -1
 001C                   .dbline 22
 001C           ; 
 001C           ; }
 001C           ; 
 001C           ; void putchar0(unsigned char c)
 001C           ; {
 001C           L3:
 001C                   .dbline 23
 001C           ; while (!(UCSR0A&(1<<UDRE0)));//表明发送器已经准备就绪
 001C           L4:
 001C                   .dbline 23
 001C 5D9B              sbis 0xb,5
 001E FECF              rjmp L3
 0020           X0:
 0020                   .dbline 24
 0020           ; UDR0=c; //将要发送的数据装入UDR0寄存器
 0020 0CB9              out 0xc,R16
 0022                   .dbline -2
 0022           L2:
 0022                   .dbline 0 ; func end
 0022 0895              ret
 0024                   .dbsym r c 16 c
 0024                   .dbend
 0024                   .dbfunc e getchar0 _getchar0 fc
                        .even
 0024           _getchar0::
 0024                   .dbline -1
 0024                   .dbline 29
 0024           ; }
 0024           ; 
 0024           ; 
 0024           ; unsigned char getchar0(void)
 0024           ; {
 0024           L7:
 0024                   .dbline 30
 0024           ;   while(!(UCSR0A& (1<<RXC0)));//表明已经接收完毕
 0024           L8:
 0024                   .dbline 30
 0024 5F9B              sbis 0xb,7
 0026 FECF              rjmp L7
 0028           X1:
 0028                   .dbline 31
 0028           ;   return UDR0;
 0028 0CB1              in R16,0xc
 002A                   .dbline -2
 002A           L6:
 002A                   .dbline 0 ; func end
 002A 0895              ret
 002C                   .dbend
                        .area vector(rom, abs)
                        .org 72
 0048 0C941600          jmp _int_ruart0
                        .area text(rom, con, rel)
 002C                   .dbfile E:\ICCDemo\Temp_Control\temp_control\uart.c
 002C                   .dbfunc e int_ruart0 _int_ruart0 fV
 002C           ;           data -> R16
                        .even
 002C           _int_ruart0::
 002C 0A93              st -y,R16
 002E 0FB7              IN R16,63
 0030 0A93              st -y,R16
 0032                   .dbline -1
 0032                   .dbline 35
 0032           ; }
 0032           ; //读取中断
 0032           ; #pragma interrupt_handler int_ruart0:19
 0032           ; void int_ruart0(void){
 0032                   .dbline 37
 0032           ;    uchar data;
 0032           ;    data=UDR0;
 0032 0CB1              in R16,0xc
 0034                   .dbline -2
 0034           L10:
 0034                   .dbline 0 ; func end
 0034 0991              ld R16,y+
 0036 0FBF              OUT 63,R16
 0038 0991              ld R16,y+
 003A 1895              reti
 003C                   .dbsym r data 16 c
 003C                   .dbend
                        .area vector(rom, abs)
                        .org 76
 004C 0C941E00          jmp _int_suart0
                        .area text(rom, con, rel)
 003C                   .dbfile E:\ICCDemo\Temp_Control\temp_control\uart.c
 003C                   .dbfunc e int_suart0 _int_suart0 fV
                        .even
 003C           _int_suart0::
 003C 1A92              st -y,R1
 003E 2A92              st -y,R2
 0040 3A92              st -y,R3
 0042 4A92              st -y,R4
 0044 5A92              st -y,R5
 0046 8A93              st -y,R24
 0048 9A93              st -y,R25
 004A EA93              st -y,R30
 004C FA93              st -y,R31
 004E 1FB6              IN R1,63
 0050 1A92              st -y,R1
 0052                   .dbline -1
 0052                   .dbline 42
 0052           ;    
 0052           ; }
 0052           ; //发送中断
 0052           ; #pragma interrupt_handler int_suart0:20
 0052           ; void int_suart0(void){
 0052                   .dbline 43
 0052           ;    UCSR0B &=~(1<<UDRIE0); //关中断
 0052 5598              cbi 0xa,5
 0054                   .dbline 44
 0054           ;    PORTE=~PORTE;
 0054 23B0              in R2,0x3
 0056 2094              com R2
 0058 23B8              out 0x3,R2
 005A                   .dbline 45
 005A           ;    if(send_data_cur<send_data_length){//还有数据存在，继续发送
 005A 20900000          lds R2,_send_data_length
 005E 30900100          lds R3,_send_data_length+1
 0062 40900000          lds R4,_send_data_cur
 0066 50900100          lds R5,_send_data_cur+1
 006A 4214              cp R4,R2
 006C 5304              cpc R5,R3
 006E 90F4              brsh L12
 0070           X2:
 0070                   .dbline 45
 0070                   .dbline 46
 0070           ;       UDR0=send_data_cache[send_data_cur];
 0070 80E0              ldi R24,<_send_data_cache
 0072 90E0              ldi R25,>_send_data_cache
 0074 F201              movw R30,R4
 0076 EE0F              lsl R30
 0078 FF1F              rol R31
 007A E80F              add R30,R24
 007C F91F              adc R31,R25
 007E 2080              ldd R2,z+0
 0080 3180              ldd R3,z+1
 0082 2CB8              out 0xc,R2
 0084                   .dbline 47
 0084           ;         send_data_cur++;
 0084 C201              movw R24,R4
 0086 0196              adiw R24,1
 0088 90930100          sts _send_data_cur+1,R25
 008C 80930000          sts _send_data_cur,R24
 0090                   .dbline 48
 0090           ;         UCSR0B |=(1<<UDRIE0); //开中断
 0090 559A              sbi 0xa,5
 0092                   .dbline 49
 0092           ;    }else{//没有数据啦，清空游标。关中断
 0092 0AC0              xjmp L13
 0094           L12:
 0094                   .dbline 49
 0094                   .dbline 50
 0094           ;     send_data_length=0;
 0094 2224              clr R2
 0096 3324              clr R3
 0098 30920100          sts _send_data_length+1,R3
 009C 20920000          sts _send_data_length,R2
 00A0                   .dbline 51
 00A0           ;     send_data_cur=0;
 00A0 30920100          sts _send_data_cur+1,R3
 00A4 20920000          sts _send_data_cur,R2
 00A8                   .dbline 52
 00A8           ;    } 
 00A8           L13:
 00A8                   .dbline -2
 00A8           L11:
 00A8                   .dbline 0 ; func end
 00A8 1990              ld R1,y+
 00AA 1FBE              OUT 63,R1
 00AC F991              ld R31,y+
 00AE E991              ld R30,y+
 00B0 9991              ld R25,y+
 00B2 8991              ld R24,y+
 00B4 5990              ld R5,y+
 00B6 4990              ld R4,y+
 00B8 3990              ld R3,y+
 00BA 2990              ld R2,y+
 00BC 1990              ld R1,y+
 00BE 1895              reti
 00C0                   .dbend
 00C0                   .dbfunc e puts0 _puts0 fV
 00C0           ;              s -> R20,R21
                        .even
 00C0           _puts0::
 00C0 4A93              st -y,R20
 00C2 5A93              st -y,R21
 00C4 A801              movw R20,R16
 00C6                   .dbline -1
 00C6                   .dbline 57
 00C6           ;   
 00C6           ; }
 00C6           ; 
 00C6           ; void puts0(char *s)
 00C6           ; {
 00C6 05C0              xjmp L16
 00C8           L15:
 00C8                   .dbline 59
 00C8           ;   while (*s)
 00C8           ;   {
 00C8                   .dbline 60
 00C8           ;     putchar0(*s);
 00C8 FA01              movw R30,R20
 00CA 0081              ldd R16,z+0
 00CC A7DF              xcall _putchar0
 00CE                   .dbline 61
 00CE           ;     s++;
 00CE 4F5F              subi R20,255  ; offset = 1
 00D0 5F4F              sbci R21,255
 00D2                   .dbline 62
 00D2           ;   }
 00D2           L16:
 00D2                   .dbline 58
 00D2 FA01              movw R30,R20
 00D4 2080              ldd R2,z+0
 00D6 2220              tst R2
 00D8 B9F7              brne L15
 00DA           X3:
 00DA                   .dbline 63
 00DA           ;   putchar0(0x0a);//回车换行
 00DA 0AE0              ldi R16,10
 00DC 9FDF              xcall _putchar0
 00DE                   .dbline -2
 00DE           L14:
 00DE                   .dbline 0 ; func end
 00DE 5991              ld R21,y+
 00E0 4991              ld R20,y+
 00E2 0895              ret
 00E4                   .dbsym r s 20 pc
 00E4                   .dbend
 00E4           ; //putchar0(0x0d);
 00E4           ; }
 00E4           ; 
 00E4           ; 
