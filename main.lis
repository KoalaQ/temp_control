                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile main.c
                        .area data(ram, con, rel)
 0000                   .dbfile main.c
 0000           _temp_h::
 0000                   .blkb 2
                        .area idata
 0000 0000              .word 0
                        .area data(ram, con, rel)
 0002                   .dbfile main.c
 0002                   .dbfile E:\ICCDemo\Temp_Control\temp_control\main.c
 0002                   .dbsym e temp_h _temp_h i
 0002           _temp_l::
 0002                   .blkb 2
                        .area idata
 0002 0000              .word 0
                        .area data(ram, con, rel)
 0004                   .dbfile E:\ICCDemo\Temp_Control\temp_control\main.c
 0004                   .dbsym e temp_l _temp_l i
 0004           _temps::
 0004                   .blkb 2
                        .area idata
 0004 0000              .word 0
                        .area data(ram, con, rel)
 0006                   .dbfile E:\ICCDemo\Temp_Control\temp_control\main.c
 0006                   .blkb 2
                        .area idata
 0006 0000              .word 0
                        .area data(ram, con, rel)
 0008                   .dbfile E:\ICCDemo\Temp_Control\temp_control\main.c
 0008                   .blkb 2
                        .area idata
 0008 0000              .word 0
                        .area data(ram, con, rel)
 000A                   .dbfile E:\ICCDemo\Temp_Control\temp_control\main.c
 000A                   .blkb 2
                        .area idata
 000A 0000              .word 0
                        .area data(ram, con, rel)
 000C                   .dbfile E:\ICCDemo\Temp_Control\temp_control\main.c
 000C                   .dbstruct 0 2 temp
 000C                   .dbfield 0 flag i
 000C                   .dbend
 000C                   .dbsym e temps _temps A[8:4]S[temp]
                        .area text(rom, con, rel)
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\main.c
 0000                   .dbfunc e main _main fV
 0000           ;           data -> <dead>
                        .even
 0000           _main::
 0000 2197              sbiw R28,1
 0002                   .dbline -1
 0002                   .dbline 32
 0002           ; 
 0002           ; #include<iom128v.h>
 0002           ; #include "main.h"
 0002           ; #include "lcd.h"
 0002           ; #include "time.h"
 0002           ; #include "key.h"
 0002           ; #include "delay.h"
 0002           ; #include "timertask.h"
 0002           ; #include "eeprom.h"
 0002           ; #include "pages.h"
 0002           ; //const unsigned char nihao[]={};
 0002           ; //下面两个要删掉，现在为编译暂时不删
 0002           ;  unsigned int temp_h=0;
 0002           ;  unsigned int temp_l=0;
 0002           ;  //uart需要参数
 0002           ;  unsigned char send_buf[600];
 0002           ;  unsigned char receive_buf[600];
 0002           ;  unsigned int send_len;
 0002           ;  unsigned int receive_len;
 0002           ;  //界面需要参数
 0002           ;  unsigned int pageNum;//当前页面，如需跳转改变这个值就行
 0002           ;  unsigned int pageParam[5];//传递参数。界面间参数暂存
 0002           ;  unsigned int prePageNum; //上一界面。应该在跳转前设置这个参数。但是用到这个参数的就Page3、4、8.所以可以直接在该界面用到在设置。不用理会规则
 0002           ;  //**************
 0002           ; struct temp temps[4]={{0},{0},{0},{0}};
 0002           ; 
 0002           ; 
 0002           ; //*************************************************************************
 0002           ; //                    主程序
 0002           ; //*************************************************************************
 0002           ; void main(void)
 0002           ; { 
 0002                   .dbline 34
 0002           ;   uchar data;
 0002           ; temps[0].flag=0;
 0002 2224              clr R2
 0004 3324              clr R3
 0006 30920500          sts _temps+1,R3
 000A 20920400          sts _temps,R2
 000E                   .dbline 35
 000E           ;  temps[1].flag=1;
 000E 81E0              ldi R24,1
 0010 90E0              ldi R25,0
 0012 90930700          sts _temps+2+1,R25
 0016 80930600          sts _temps+2,R24
 001A                   .dbline 36
 001A           ;  temps[2].flag=2;
 001A 82E0              ldi R24,2
 001C 90930900          sts _temps+4+1,R25
 0020 80930800          sts _temps+4,R24
 0024                   .dbline 37
 0024           ;  temps[3].flag=5; 
 0024 85E0              ldi R24,5
 0026 90930B00          sts _temps+6+1,R25
 002A 80930A00          sts _temps+6,R24
 002E                   .dbline 38
 002E           ;   DDRE=0xFF;
 002E 8FEF              ldi R24,255
 0030 82B9              out 0x2,R24
 0032                   .dbline 39
 0032           ;   SREG|=0x80;//开中断
 0032 7894              bset 7
 0034                   .dbline 40
 0034           ;   lcd_init();
 0034 0E940000          xcall _lcd_init
 0038                   .dbline 41
 0038           ;   lcd_clear(); 
 0038 0E940000          xcall _lcd_clear
 003C                   .dbline 42
 003C           ;   pageNum=2;
 003C 82E0              ldi R24,2
 003E 90E0              ldi R25,0
 0040 9093C104          sts _pageNum+1,R25
 0044 8093C004          sts _pageNum,R24
 0048                   .dbline 43
 0048           ;  Set_White_off(1,0,12);
 0048 8CE0              ldi R24,12
 004A 8883              std y+0,R24
 004C 2227              clr R18
 004E 01E0              ldi R16,1
 0050 0E940000          xcall _Set_White_off
 0054                   .dbline 44
 0054           ;        Set_White_off(1,1,12);
 0054 8CE0              ldi R24,12
 0056 8883              std y+0,R24
 0058 21E0              ldi R18,1
 005A 01E0              ldi R16,1
 005C 0E940000          xcall _Set_White_off
 0060                   .dbline 45
 0060           ;        Set_White_off(1,2,12);
 0060 8CE0              ldi R24,12
 0062 8883              std y+0,R24
 0064 22E0              ldi R18,2
 0066 01E0              ldi R16,1
 0068 0E940000          xcall _Set_White_off
 006C                   .dbline 46
 006C           ;        Set_White_off(1,3,12);
 006C 8CE0              ldi R24,12
 006E 8883              std y+0,R24
 0070 23E0              ldi R18,3
 0072 01E0              ldi R16,1
 0074 0E940000          xcall _Set_White_off
 0078 02C0              xjmp L6
 007A           L5:
 007A                   .dbline 47
 007A           ;        while(1){
 007A                   .dbline 48
 007A           ;      dispatchPages();
 007A 0E940000          xcall _dispatchPages
 007E                   .dbline 49
 007E           ;   }
 007E           L6:
 007E                   .dbline 47
 007E FDCF              xjmp L5
 0080           X0:
 0080                   .dbline -2
 0080           L1:
 0080                   .dbline 0 ; func end
 0080 2196              adiw R28,1
 0082 0895              ret
 0084                   .dbsym l data 2 c
 0084                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\main.c
 0000           _receive_len::
 0000                   .blkb 2
 0002                   .dbsym e receive_len _receive_len i
 0002           _send_len::
 0002                   .blkb 2
 0004                   .dbsym e send_len _send_len i
 0004           _receive_buf::
 0004                   .blkb 600
 025C                   .dbsym e receive_buf _receive_buf A[600:600]c
 025C           _send_buf::
 025C                   .blkb 600
 04B4                   .dbsym e send_buf _send_buf A[600:600]c
 04B4           _prePageNum::
 04B4                   .blkb 2
 04B6                   .dbsym e prePageNum _prePageNum i
 04B6           _pageParam::
 04B6                   .blkb 10
 04C0                   .dbsym e pageParam _pageParam A[10:5]i
 04C0           _pageNum::
 04C0                   .blkb 2
 04C2                   .dbsym e pageNum _pageNum i
 04C2           ;   /*Initial_time();
 04C2           ;    lcd_Desk(); 
 04C2           ;    delay_us(10);
 04C2           ;     data=read_data_xy(0,0);
 04C2           ;   data=read_data_xy(0,0);
 04C2           ;   lcd_write_char(2,2,data);
 04C2           ;   lcd_write_char_con(2,date_cmd_1());
 04C2           ;   lcd_write_char_con(2,date_cmd_1());
 04C2           ;   lcd_write_char_con(2,date_cmd_1());
 04C2           ;   lcd_write_char_con(2,date_cmd_1());
 04C2           ;   lcd_write_char_con(2,date_cmd_1());
 04C2           ;   lcd_write_char_con(2,date_cmd_1());
 04C2           ;   lcd_write_char_con(2,date_cmd_1());
 04C2           ;   lcd_write_char_con(2,date_cmd_1());
 04C2           ;   lcd_write_char_con(2,date_cmd_1());
 04C2           ;   lcd_write_char_con(2,date_cmd_1());
 04C2           ;   lcd_write_char_con(2,date_cmd_1());
 04C2           ;   lcd_write_char_con(2,date_cmd_1());
 04C2           ;   lcd_write_char_con(2,date_cmd_1());
 04C2           ;    //Timerinit_1(0x00,0x00);
 04C2           ;    Timerinit_3(0x88,0x88);
 04C2           ;    //Timerinit_0(0x88);
 04C2           ;   // Timerinit_2(0x01);*/
 04C2           ;  // EEPROM_write(0x00,0x00,0x02);
 04C2           ;  // data=EEPROM_read(0x00,0x00);
 04C2           ;   // lcd_write_char(8,0,0x30|data);
 04C2           ;   // EEPROM_write(0x00,0x00,data+1);
 04C2           ;   //PORTE=~data;
 04C2           ;   // lcd_Desk(); 
 04C2           ;  /*
 04C2           ;   while(1){
 04C2           ;    
 04C2           ;    
 04C2           ;    
 04C2           ;    showTimeLcd();
 04C2           ;     lcd_write_char(0,2,KeyScan_once());
 04C2           ;       cur_set(0);
 04C2           ;       delay_ms(3000);
 04C2           ;       cur_set(1);
 04C2           ;       delay_ms(3000);
 04C2           ;       cur_set(2);
 04C2           ;       delay_ms(3000);
 04C2           ;       cur_set(3);
 04C2           ;       delay_ms(3000);
 04C2           ;       cur_set(4);
 04C2           ;       delay_ms(3000);
 04C2           ;       cur_set(5);
 04C2           ;       delay_ms(3000);
 04C2           ;       cur_set(6);
 04C2           ;       delay_ms(3000);
 04C2           ;       cur_set(7);
 04C2           ;       delay_ms(3000);
 04C2           ;   }*/
 04C2           ;  
 04C2           ; 
 04C2           ;  /* SREG|=0x80;
 04C2           ;   //ADCSRA=0x8E;  
 04C2           ;   DDRE=0xFF;
 04C2           ;   PORTE=0xFF;
 04C2           ;   lcd_init();                                 //液晶参数初始化设置
 04C2           ;   lcd_clear();                                //清屏
 04C2           ;   lcd_Desk();//adc初始化配置
 04C2           ;   //adc_init();
 04C2           ;    // adc_init_once() ;                       
 04C2           ;                           //开启全局中断
 04C2           ;  //Timerinit_1(0xFF,0xF0);
 04C2           ;  Initial_time();
 04C2           ;  Timerinit_3( 0xCC, 0xC5);//16M,0.8s
 04C2           ;  //Timerinit_3( 0xE6, 0x62);//8M,0.8s
 04C2           ;  
 04C2           ;  //初始化按键
 04C2           ;  //KeyInit();*/
 04C2           ;  
 04C2           ; 
 04C2           ; }
