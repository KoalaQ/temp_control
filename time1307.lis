                        .module time1307.c
                        .area text(rom, con, rel)
 0000                   .dbfile time1307.c
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\time1307.c
 0000                   .dbfunc e I2C_start _I2C_start fV
                        .even
 0000           _I2C_start::
 0000                   .dbline -1
 0000                   .dbline 32
 0000           ; #include<iom128v.h>
 0000           ; #include "time1307.h"
 0000           ; #include "delay.h"
 0000           ; #include "lcd.h"
 0000           ; #include "main.h"
 0000           ; //寄存器宏定义
 0000           ; #define SECOND 0x00
 0000           ; #define MINUTE 0x01 
 0000           ; #define HOUR 0x02
 0000           ; #define DAY 0x04
 0000           ; #define MONTH 0x05 
 0000           ; #define WEEK 0x03
 0000           ; #define YEAE 0x06
 0000           ; #define CIBTPOL 0x07 
 0000           ; #define  WRITEDS1307    0xD0
 0000           ; #define     READDS1307    0xD1
 0000           ; 
 0000           ; 
 0000           ; #define  SCL_H  PORTD|=1<<PD0 //
 0000           ; #define  SCL_L  PORTD&=~(1<<PD0) //
 0000           ; #define  SDA_H   PORTD|=1<<PD1 //
 0000           ; #define  SDA_L  PORTD&=~(1<<PD1)  //
 0000           ; /* unsigned char set_rtc_code[7];
 0000           ; unsigned char rtc_address[7]={0x00,0x01,0x02,0x03,0x04,0x05,0x06};
 0000           ; unsigned char read_rtc_code[7];
 0000           ; unsigned char wr_j1j3_code[7];
 0000           ; unsigned char jk[7]={0,0,0,2,0,0,9};//设置时钟初始值*/
 0000           ; 
 0000           ; unsigned  char BP;
 0000           ; 
 0000           ; 
 0000           ; void I2C_start(void){//启动IIC总线
 0000                   .dbline 33
 0000           ;    SDA_H;
 0000 919A              sbi 0x12,1
 0002                   .dbline 34
 0002           ;    SCL_H;
 0002 909A              sbi 0x12,0
 0004                   .dbline 35
 0004           ;    delay_us(8);
 0004 08E0              ldi R16,8
 0006 10E0              ldi R17,0
 0008 0E940000          xcall _delay_us
 000C                   .dbline 36
 000C           ;    SDA_L;
 000C 9198              cbi 0x12,1
 000E                   .dbline 37
 000E           ;    delay_us(8);
 000E 08E0              ldi R16,8
 0010 10E0              ldi R17,0
 0012 0E940000          xcall _delay_us
 0016                   .dbline 38
 0016           ;    SCL_L;
 0016 9098              cbi 0x12,0
 0018                   .dbline -2
 0018           L1:
 0018                   .dbline 0 ; func end
 0018 0895              ret
 001A                   .dbend
 001A                   .dbfunc e I2C_stop _I2C_stop fV
                        .even
 001A           _I2C_stop::
 001A                   .dbline -1
 001A                   .dbline 41
 001A           ;    
 001A           ; }
 001A           ; void I2C_stop(void){//启动IIC总线
 001A                   .dbline 42
 001A           ;    SDA_L;
 001A 9198              cbi 0x12,1
 001C                   .dbline 43
 001C           ;    SCL_H;
 001C 909A              sbi 0x12,0
 001E                   .dbline 44
 001E           ;    delay_us(8);
 001E 08E0              ldi R16,8
 0020 10E0              ldi R17,0
 0022 0E940000          xcall _delay_us
 0026                   .dbline 45
 0026           ;    SDA_H;
 0026 919A              sbi 0x12,1
 0028                   .dbline 46
 0028           ;    delay_us(8);
 0028 08E0              ldi R16,8
 002A 10E0              ldi R17,0
 002C 0E940000          xcall _delay_us
 0030                   .dbline 47
 0030           ;    SCL_L;
 0030 9098              cbi 0x12,0
 0032                   .dbline -2
 0032           L2:
 0032                   .dbline 0 ; func end
 0032 0895              ret
 0034                   .dbend
 0034                   .dbfunc e I2C_send_ack _I2C_send_ack fV
                        .even
 0034           _I2C_send_ack::
 0034                   .dbline -1
 0034                   .dbline 50
 0034           ;    
 0034           ; }
 0034           ; void I2C_send_ack(void){//应答ack
 0034                   .dbline 51
 0034           ;   SDA_L;
 0034 9198              cbi 0x12,1
 0036                   .dbline 52
 0036           ;   SCL_H;
 0036 909A              sbi 0x12,0
 0038                   .dbline 53
 0038           ;   delay_us(8);
 0038 08E0              ldi R16,8
 003A 10E0              ldi R17,0
 003C 0E940000          xcall _delay_us
 0040                   .dbline 54
 0040           ;   SCL_L;
 0040 9098              cbi 0x12,0
 0042                   .dbline -2
 0042           L3:
 0042                   .dbline 0 ; func end
 0042 0895              ret
 0044                   .dbend
 0044                   .dbfunc e I2C_send_noack _I2C_send_noack fV
                        .even
 0044           _I2C_send_noack::
 0044                   .dbline -1
 0044                   .dbline 56
 0044           ; } 
 0044           ; void I2C_send_noack(void){
 0044                   .dbline 57
 0044           ;   SDA_H;
 0044 919A              sbi 0x12,1
 0046                   .dbline 58
 0046           ;   SCL_H;
 0046 909A              sbi 0x12,0
 0048                   .dbline 59
 0048           ;    delay_us(8);
 0048 08E0              ldi R16,8
 004A 10E0              ldi R17,0
 004C 0E940000          xcall _delay_us
 0050                   .dbline 60
 0050           ;    SCL_L;
 0050 9098              cbi 0x12,0
 0052                   .dbline -2
 0052           L4:
 0052                   .dbline 0 ; func end
 0052 0895              ret
 0054                   .dbend
 0054                   .dbfunc e I2C_write_byte _I2C_write_byte fV
 0054           ;              i -> R20
 0054           ;       IIC_data -> R10
                        .even
 0054           _I2C_write_byte::
 0054 AA92              st -y,R10
 0056 4A93              st -y,R20
 0058 A02E              mov R10,R16
 005A                   .dbline -1
 005A                   .dbline 62
 005A           ; }
 005A           ; void I2C_write_byte(unsigned char IIC_data){
 005A                   .dbline 65
 005A           ;    unsigned char i;
 005A           ;   // BP=0;
 005A           ;    for(i=0;i<8;i++){//循环输出数据
 005A 4427              clr R20
 005C 16C0              xjmp L9
 005E           L6:
 005E                   .dbline 65
 005E                   .dbline 66
 005E           ;       SCL_L;
 005E 9098              cbi 0x12,0
 0060                   .dbline 67
 0060           ;          if(((IIC_data<<i)&0x80)){
 0060 0A2D              mov R16,R10
 0062 142F              mov R17,R20
 0064 0E940000          xcall lsl8
 0068 802F              mov R24,R16
 006A 8078              andi R24,128
 006C 11F0              breq L10
 006E           X0:
 006E                   .dbline 67
 006E                   .dbline 68
 006E           ;             SDA_H;
 006E 919A              sbi 0x12,1
 0070                   .dbline 69
 0070           ;          }else{
 0070 01C0              xjmp L11
 0072           L10:
 0072                   .dbline 69
 0072                   .dbline 70
 0072           ;                 SDA_L;
 0072 9198              cbi 0x12,1
 0074                   .dbline 71
 0074           ;          }
 0074           L11:
 0074                   .dbline 72
 0074           ;          delay_us(4);
 0074 04E0              ldi R16,4
 0076 10E0              ldi R17,0
 0078 0E940000          xcall _delay_us
 007C                   .dbline 73
 007C           ;          SCL_H;
 007C 909A              sbi 0x12,0
 007E                   .dbline 74
 007E           ;          delay_us(4);
 007E 04E0              ldi R16,4
 0080 10E0              ldi R17,0
 0082 0E940000          xcall _delay_us
 0086                   .dbline 75
 0086           ;          SCL_L;
 0086 9098              cbi 0x12,0
 0088                   .dbline 76
 0088           ;    }
 0088           L7:
 0088                   .dbline 65
 0088 4395              inc R20
 008A           L9:
 008A                   .dbline 65
 008A 4830              cpi R20,8
 008C 40F3              brlo L6
 008E           X1:
 008E                   .dbline 78
 008E           ;    //读取ACK
 008E           ;    delay_us(4);
 008E 04E0              ldi R16,4
 0090 10E0              ldi R17,0
 0092 0E940000          xcall _delay_us
 0096                   .dbline 79
 0096           ;    DDRD &=~(0x02);//发送完，等待输入信号
 0096 8998              cbi 0x11,1
 0098                   .dbline 80
 0098           ;    delay_us(4);
 0098 04E0              ldi R16,4
 009A 10E0              ldi R17,0
 009C 0E940000          xcall _delay_us
 00A0                   .dbline 81
 00A0           ;    if((PIND&(1<<PD1))){
 00A0 819B              sbis 0x10,1
 00A2 00C0              rjmp L12
 00A4           X2:
 00A4                   .dbline 81
 00A4                   .dbline 83
 00A4           ;     //正常
 00A4           ;    }//读取，如果发送的是noack，
 00A4           L12:
 00A4                   .dbline 84
 00A4           ;    SCL_H;
 00A4 909A              sbi 0x12,0
 00A6                   .dbline 85
 00A6           ;    delay_us(4);
 00A6 04E0              ldi R16,4
 00A8 10E0              ldi R17,0
 00AA 0E940000          xcall _delay_us
 00AE                   .dbline 86
 00AE           ;    SCL_L;
 00AE 9098              cbi 0x12,0
 00B0                   .dbline 87
 00B0           ;    DDRD |=0x02;
 00B0 899A              sbi 0x11,1
 00B2                   .dbline -2
 00B2           L5:
 00B2                   .dbline 0 ; func end
 00B2 4991              ld R20,y+
 00B4 A990              ld R10,y+
 00B6 0895              ret
 00B8                   .dbsym r i 20 c
 00B8                   .dbsym r IIC_data 10 c
 00B8                   .dbend
 00B8                   .dbfunc e I2C_read_byte _I2C_read_byte fc
 00B8           ;              i -> R20
 00B8           ;            dat -> R10
                        .even
 00B8           _I2C_read_byte::
 00B8 AA92              st -y,R10
 00BA 4A93              st -y,R20
 00BC                   .dbline -1
 00BC                   .dbline 89
 00BC           ; }
 00BC           ; unsigned char I2C_read_byte(void){
 00BC                   .dbline 91
 00BC           ;   unsigned char i,dat;
 00BC           ;   DDRD &=~(0x02);
 00BC 8998              cbi 0x11,1
 00BE                   .dbline 92
 00BE           ;   dat=0;
 00BE AA24              clr R10
 00C0                   .dbline 93
 00C0           ;   for (i=0;i<8;i++)
 00C0 4427              clr R20
 00C2 0BC0              xjmp L18
 00C4           L15:
 00C4                   .dbline 94
 00C4           ;     {
 00C4                   .dbline 95
 00C4           ;       dat=dat<<1;
 00C4 AA0C              lsl R10
 00C6                   .dbline 96
 00C6           ;       SCL_H;
 00C6 909A              sbi 0x12,0
 00C8                   .dbline 97
 00C8           ;       delay_us(4);
 00C8 04E0              ldi R16,4
 00CA 10E0              ldi R17,0
 00CC 0E940000          xcall _delay_us
 00D0                   .dbline 98
 00D0           ;      if((PIND&(1<<PD1)))
 00D0 819B              sbis 0x10,1
 00D2 01C0              rjmp L19
 00D4           X3:
 00D4                   .dbline 99
 00D4           ;      {
 00D4                   .dbline 100
 00D4           ;        dat++;
 00D4 A394              inc R10
 00D6                   .dbline 102
 00D6           ;         // PORTE=~PORTE;
 00D6           ;      }
 00D6           L19:
 00D6                   .dbline 103
 00D6           ;        SCL_L;  
 00D6 9098              cbi 0x12,0
 00D8                   .dbline 104
 00D8           ;     }  
 00D8           L16:
 00D8                   .dbline 93
 00D8 4395              inc R20
 00DA           L18:
 00DA                   .dbline 93
 00DA 4830              cpi R20,8
 00DC 98F3              brlo L15
 00DE           X4:
 00DE                   .dbline 105
 00DE           ;   DDRD |=0x02;
 00DE 899A              sbi 0x11,1
 00E0                   .dbline 106
 00E0           ;   return dat;
 00E0 0A2D              mov R16,R10
 00E2                   .dbline -2
 00E2           L14:
 00E2                   .dbline 0 ; func end
 00E2 4991              ld R20,y+
 00E4 A990              ld R10,y+
 00E6 0895              ret
 00E8                   .dbsym r i 20 c
 00E8                   .dbsym r dat 10 c
 00E8                   .dbend
 00E8                   .dbfunc e Write1307 _Write1307 fV
 00E8           ;            dat -> R10
 00E8           ;            add -> R12
                        .even
 00E8           _Write1307::
 00E8 AA92              st -y,R10
 00EA CA92              st -y,R12
 00EC A22E              mov R10,R18
 00EE C02E              mov R12,R16
 00F0                   .dbline -1
 00F0                   .dbline 111
 00F0           ; }
 00F0           ; /***********************************************************************/
 00F0           ; /******************************** DS1307 写数据  ****************/
 00F0           ; void Write1307(unsigned char add,unsigned char dat)
 00F0           ; {
 00F0                   .dbline 112
 00F0           ;   I2C_start();
 00F0 87DF              xcall _I2C_start
 00F2                   .dbline 113
 00F2           ;   I2C_write_byte(WRITEDS1307);
 00F2 00ED              ldi R16,208
 00F4 AFDF              xcall _I2C_write_byte
 00F6                   .dbline 114
 00F6           ;   I2C_write_byte(add);
 00F6 0C2D              mov R16,R12
 00F8 ADDF              xcall _I2C_write_byte
 00FA                   .dbline 115
 00FA           ;   I2C_write_byte(dat);
 00FA 0A2D              mov R16,R10
 00FC ABDF              xcall _I2C_write_byte
 00FE                   .dbline 116
 00FE           ;   I2C_stop();
 00FE 8DDF              xcall _I2C_stop
 0100                   .dbline -2
 0100           L21:
 0100                   .dbline 0 ; func end
 0100 C990              ld R12,y+
 0102 A990              ld R10,y+
 0104 0895              ret
 0106                   .dbsym r dat 10 c
 0106                   .dbsym r add 12 c
 0106                   .dbend
 0106                   .dbfunc e Read1307 _Read1307 fc
 0106           ;            dat -> R10
 0106           ;            add -> R10
                        .even
 0106           _Read1307::
 0106 AA92              st -y,R10
 0108 A02E              mov R10,R16
 010A                   .dbline -1
 010A                   .dbline 120
 010A           ; }
 010A           ; /***********************************************************************/
 010A           ; unsigned char Read1307(unsigned char add)
 010A           ; {
 010A                   .dbline 123
 010A           ;   
 010A           ;   unsigned char dat;
 010A           ;   I2C_start();
 010A 7ADF              xcall _I2C_start
 010C                   .dbline 124
 010C           ;   I2C_write_byte(WRITEDS1307);
 010C 00ED              ldi R16,208
 010E A2DF              xcall _I2C_write_byte
 0110                   .dbline 125
 0110           ;   I2C_write_byte(add);
 0110 0A2D              mov R16,R10
 0112 A0DF              xcall _I2C_write_byte
 0114                   .dbline 126
 0114           ;   I2C_start();
 0114 75DF              xcall _I2C_start
 0116                   .dbline 127
 0116           ;   I2C_write_byte(READDS1307);
 0116 01ED              ldi R16,209
 0118 9DDF              xcall _I2C_write_byte
 011A                   .dbline 128
 011A           ;   dat=I2C_read_byte(); 
 011A CEDF              xcall _I2C_read_byte
 011C A02E              mov R10,R16
 011E                   .dbline 129
 011E           ;   I2C_send_noack();
 011E 92DF              xcall _I2C_send_noack
 0120                   .dbline 130
 0120           ;   I2C_stop();      
 0120 7CDF              xcall _I2C_stop
 0122                   .dbline 131
 0122           ;   return (dat);
 0122 0A2D              mov R16,R10
 0124                   .dbline -2
 0124           L22:
 0124                   .dbline 0 ; func end
 0124 A990              ld R10,y+
 0126 0895              ret
 0128                   .dbsym r dat 10 c
 0128                   .dbsym r add 10 c
 0128                   .dbend
 0128                   .dbfunc e getYear _getYear fi
                        .even
 0128           _getYear::
 0128                   .dbline -1
 0128                   .dbline 133
 0128           ;  }
 0128           ; uint getYear(void){
 0128                   .dbline 134
 0128           ;  return 1;
 0128 01E0              ldi R16,1
 012A 10E0              ldi R17,0
 012C                   .dbline -2
 012C           L23:
 012C                   .dbline 0 ; func end
 012C 0895              ret
 012E                   .dbend
 012E                   .dbfunc e getMonth _getMonth fi
                        .even
 012E           _getMonth::
 012E                   .dbline -1
 012E                   .dbline 136
 012E           ; }
 012E           ; uint getMonth(void){
 012E                   .dbline 137
 012E           ;   return 1;
 012E 01E0              ldi R16,1
 0130 10E0              ldi R17,0
 0132                   .dbline -2
 0132           L24:
 0132                   .dbline 0 ; func end
 0132 0895              ret
 0134                   .dbend
 0134                   .dbfunc e getDay _getDay fi
                        .even
 0134           _getDay::
 0134                   .dbline -1
 0134                   .dbline 139
 0134           ; }
 0134           ; uint getDay(void){
 0134                   .dbline 140
 0134           ;  return 1;
 0134 01E0              ldi R16,1
 0136 10E0              ldi R17,0
 0138                   .dbline -2
 0138           L25:
 0138                   .dbline 0 ; func end
 0138 0895              ret
 013A                   .dbend
 013A                   .dbfunc e getWeek _getWeek fi
                        .even
 013A           _getWeek::
 013A                   .dbline -1
 013A                   .dbline 142
 013A           ; }
 013A           ; uint getWeek(void){
 013A                   .dbline 143
 013A           ;  return 1;
 013A 01E0              ldi R16,1
 013C 10E0              ldi R17,0
 013E                   .dbline -2
 013E           L26:
 013E                   .dbline 0 ; func end
 013E 0895              ret
 0140                   .dbend
 0140                   .dbfunc e getHour _getHour fi
                        .even
 0140           _getHour::
 0140                   .dbline -1
 0140                   .dbline 145
 0140           ; }
 0140           ; uint getHour(void){
 0140                   .dbline 146
 0140           ;  return 1;
 0140 01E0              ldi R16,1
 0142 10E0              ldi R17,0
 0144                   .dbline -2
 0144           L27:
 0144                   .dbline 0 ; func end
 0144 0895              ret
 0146                   .dbend
 0146                   .dbfunc e getMinute _getMinute fi
                        .even
 0146           _getMinute::
 0146                   .dbline -1
 0146                   .dbline 148
 0146           ; }
 0146           ; uint getMinute(void){
 0146                   .dbline 149
 0146           ;  return 1;
 0146 01E0              ldi R16,1
 0148 10E0              ldi R17,0
 014A                   .dbline -2
 014A           L28:
 014A                   .dbline 0 ; func end
 014A 0895              ret
 014C                   .dbend
 014C                   .dbfunc e getSecond _getSecond fi
                        .even
 014C           _getSecond::
 014C                   .dbline -1
 014C                   .dbline 151
 014C           ; }
 014C           ; uint getSecond(void){
 014C                   .dbline 152
 014C           ;  return 1;
 014C 01E0              ldi R16,1
 014E 10E0              ldi R17,0
 0150                   .dbline -2
 0150           L29:
 0150                   .dbline 0 ; func end
 0150 0895              ret
 0152                   .dbend
 0152                   .dbfunc e setTime _setTime fV
 0152           ;         second -> R6,R7
 0152           ;         minute -> R5,R6
 0152           ;           hour -> R4,R5
 0152           ;           week -> R3,R4
 0152           ;            day -> R2,R3
 0152           ;          month -> R1,R2
 0152           ;           year -> R0,R1
                        .even
 0152           _setTime::
 0152                   .dbline -1
 0152                   .dbline 154
 0152           ; }
 0152           ; void setTime(uint year,uint month,uint day,uint week,uint hour,uint minute,uint second){
 0152                   .dbline -2
 0152           L30:
 0152                   .dbline 0 ; func end
 0152 0895              ret
 0154                   .dbsym l second 12 i
 0154                   .dbsym l minute 10 i
 0154                   .dbsym l hour 8 i
 0154                   .dbsym l week 6 i
 0154                   .dbsym l day 4 i
 0154                   .dbsym l month 2 i
 0154                   .dbsym l year 0 i
 0154                   .dbend
 0154                   .dbfunc e Initial_time _Initial_time fV
                        .even
 0154           _Initial_time::
 0154                   .dbline -1
 0154                   .dbline 157
 0154           ; 
 0154           ; }
 0154           ; void Initial_time(void){
 0154                   .dbline 158
 0154           ;    DDRD|=0x07;
 0154 81B3              in R24,0x11
 0156 8760              ori R24,7
 0158 81BB              out 0x11,R24
 015A                   .dbline 159
 015A           ;    PORTD=0x00;
 015A 2224              clr R2
 015C 22BA              out 0x12,R2
 015E                   .dbline -2
 015E           L31:
 015E                   .dbline 0 ; func end
 015E 0895              ret
 0160                   .dbend
 0160                   .dbfunc e showTime_page _showTime_page fV
 0160           ;     time_cacah -> R20
 0160           ;              y -> R10,R11
                        .even
 0160           _showTime_page::
 0160 0E940000          xcall push_xgset303C
 0164 5801              movw R10,R16
 0166                   .dbline -1
 0166                   .dbline 174
 0166           ;   /* Write1307(0x00,0X00);//
 0166           ;    Write1307(0x01,0X00);//
 0166           ;    Write1307(0x02,0X12);//
 0166           ;    Write1307(0x03,0X01);//
 0166           ;    Write1307(0x04,0X21);//
 0166           ;    Write1307(0x05,0X05);//
 0166           ;    Write1307(0x06,0X15);//
 0166           ;     Write1307(0x07,0x10);
 0166           ;    
 0166           ;    EIMSK |= 0x04;//开中断2
 0166           ;    EICRA |=0x30;*/
 0166           ;    
 0166           ; }
 0166           ; //显示时间，年月日时分秒，用于page调用。没有改变AC，会接着写
 0166           ; void showTime_page(uint y){
 0166                   .dbline 178
 0166           ;    //PORTE=~Read1302(0x81);
 0166           ;    uchar time_cacah;
 0166           ;  //年
 0166           ;     time_cacah=Read1307(0x06);
 0166 06E0              ldi R16,6
 0168 CEDF              xcall _Read1307
 016A 402F              mov R20,R16
 016C                   .dbline 179
 016C           ;     lcd_write_str_con(y, "20");
 016C 20E0              ldi R18,<L33
 016E 30E0              ldi R19,>L33
 0170 0A2D              mov R16,R10
 0172 0E940000          xcall _lcd_write_str_con
 0176                   .dbline 180
 0176           ;     lcd_write_char_con(y, 0x30|((time_cacah>>4)&0x0F));
 0176 242F              mov R18,R20
 0178 2295              swap R18
 017A 2F70              andi R18,#0x0F
 017C 2F70              andi R18,15
 017E 2063              ori R18,48
 0180 0A2D              mov R16,R10
 0182 0E940000          xcall _lcd_write_char_con
 0186                   .dbline 181
 0186           ;     lcd_write_char_con(y,0x30|(time_cacah&0x0F)); 
 0186 242F              mov R18,R20
 0188 2F70              andi R18,15
 018A 2063              ori R18,48
 018C 0A2D              mov R16,R10
 018E 0E940000          xcall _lcd_write_char_con
 0192                   .dbline 182
 0192           ;       lcd_write_char_con(y,'-');
 0192 2DE2              ldi R18,45
 0194 0A2D              mov R16,R10
 0196 0E940000          xcall _lcd_write_char_con
 019A                   .dbline 184
 019A           ;        //月
 019A           ;        time_cacah=Read1307(0x05);
 019A 05E0              ldi R16,5
 019C B4DF              xcall _Read1307
 019E 402F              mov R20,R16
 01A0                   .dbline 185
 01A0           ;        lcd_write_char_con(y, 0x30|((time_cacah>>4)&0x01));
 01A0 242F              mov R18,R20
 01A2 2295              swap R18
 01A4 2F70              andi R18,#0x0F
 01A6 2170              andi R18,1
 01A8 2063              ori R18,48
 01AA 0A2D              mov R16,R10
 01AC 0E940000          xcall _lcd_write_char_con
 01B0                   .dbline 186
 01B0           ;      lcd_write_char_con(y,0x30|(time_cacah&0x0F)); 
 01B0 242F              mov R18,R20
 01B2 2F70              andi R18,15
 01B4 2063              ori R18,48
 01B6 0A2D              mov R16,R10
 01B8 0E940000          xcall _lcd_write_char_con
 01BC                   .dbline 187
 01BC           ;        lcd_write_char_con(y,'-');
 01BC 2DE2              ldi R18,45
 01BE 0A2D              mov R16,R10
 01C0 0E940000          xcall _lcd_write_char_con
 01C4                   .dbline 189
 01C4           ;        //日
 01C4           ;        time_cacah=Read1307(0x04);
 01C4 04E0              ldi R16,4
 01C6 9FDF              xcall _Read1307
 01C8 C02E              mov R12,R16
 01CA 4C2D              mov R20,R12
 01CC                   .dbline 190
 01CC           ;        lcd_write_char_con(y, 0x30|((time_cacah>>4)&0x03));
 01CC 242F              mov R18,R20
 01CE 2295              swap R18
 01D0 2F70              andi R18,#0x0F
 01D2 2370              andi R18,3
 01D4 2063              ori R18,48
 01D6 0A2D              mov R16,R10
 01D8 0E940000          xcall _lcd_write_char_con
 01DC                   .dbline 191
 01DC           ;      lcd_write_char_con(y,0x30|(time_cacah&0x0F)); 
 01DC 242F              mov R18,R20
 01DE 2F70              andi R18,15
 01E0 2063              ori R18,48
 01E2 0A2D              mov R16,R10
 01E4 0E940000          xcall _lcd_write_char_con
 01E8                   .dbline 192
 01E8           ;        lcd_write_char_con(y,' ');
 01E8 20E2              ldi R18,32
 01EA 0A2D              mov R16,R10
 01EC 0E940000          xcall _lcd_write_char_con
 01F0                   .dbline 194
 01F0           ;       //时
 01F0           ;       time_cacah=Read1307(0x02);
 01F0 02E0              ldi R16,2
 01F2 89DF              xcall _Read1307
 01F4 C02E              mov R12,R16
 01F6 4C2D              mov R20,R12
 01F8                   .dbline 195
 01F8           ;        lcd_write_char_con(y, 0x30|((time_cacah>>4)&0x03));
 01F8 242F              mov R18,R20
 01FA 2295              swap R18
 01FC 2F70              andi R18,#0x0F
 01FE 2370              andi R18,3
 0200 2063              ori R18,48
 0202 0A2D              mov R16,R10
 0204 0E940000          xcall _lcd_write_char_con
 0208                   .dbline 196
 0208           ;        lcd_write_char_con(y,0x30|(time_cacah&0x0F)); 
 0208 242F              mov R18,R20
 020A 2F70              andi R18,15
 020C 2063              ori R18,48
 020E 0A2D              mov R16,R10
 0210 0E940000          xcall _lcd_write_char_con
 0214                   .dbline 197
 0214           ;        lcd_write_char_con(y,':');
 0214 2AE3              ldi R18,58
 0216 0A2D              mov R16,R10
 0218 0E940000          xcall _lcd_write_char_con
 021C                   .dbline 199
 021C           ;       //分
 021C           ;       time_cacah=Read1307(0x01);
 021C 01E0              ldi R16,1
 021E 73DF              xcall _Read1307
 0220 C02E              mov R12,R16
 0222 4C2D              mov R20,R12
 0224                   .dbline 200
 0224           ;        lcd_write_char_con(y, 0x30|time_cacah>>4);
 0224 242F              mov R18,R20
 0226 2295              swap R18
 0228 2F70              andi R18,#0x0F
 022A 2063              ori R18,48
 022C 0A2D              mov R16,R10
 022E 0E940000          xcall _lcd_write_char_con
 0232                   .dbline 201
 0232           ;        lcd_write_char_con(y,0x30|(time_cacah&0x0F));
 0232 242F              mov R18,R20
 0234 2F70              andi R18,15
 0236 2063              ori R18,48
 0238 0A2D              mov R16,R10
 023A 0E940000          xcall _lcd_write_char_con
 023E                   .dbline 202
 023E           ;        lcd_write_char_con(y,':');
 023E 2AE3              ldi R18,58
 0240 0A2D              mov R16,R10
 0242 0E940000          xcall _lcd_write_char_con
 0246                   .dbline 204
 0246           ;       //秒
 0246           ;       time_cacah=Read1307(0x00);
 0246 0027              clr R16
 0248 5EDF              xcall _Read1307
 024A C02E              mov R12,R16
 024C 4C2D              mov R20,R12
 024E                   .dbline 205
 024E           ;        lcd_write_char_con(y, 0x30|(time_cacah>>4));
 024E 242F              mov R18,R20
 0250 2295              swap R18
 0252 2F70              andi R18,#0x0F
 0254 2063              ori R18,48
 0256 0A2D              mov R16,R10
 0258 0E940000          xcall _lcd_write_char_con
 025C                   .dbline 206
 025C           ;        lcd_write_char_con(y,0x30|(time_cacah &0x0F));
 025C 242F              mov R18,R20
 025E 2F70              andi R18,15
 0260 2063              ori R18,48
 0262 0A2D              mov R16,R10
 0264 0E940000          xcall _lcd_write_char_con
 0268                   .dbline -2
 0268           L32:
 0268                   .dbline 0 ; func end
 0268 0C940000          xjmp pop_xgset303C
 026C                   .dbsym r time_cacah 20 c
 026C                   .dbsym r y 10 i
 026C                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\time1307.c
 0000           _BP::
 0000                   .blkb 1
 0001                   .dbsym e BP _BP c
                        .area data(ram, con, rel)
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\time1307.c
 0000           L33:
 0000                   .blkb 3
                        .area idata
 0000 323000            .byte 50,48,0
                        .area data(ram, con, rel)
 0003                   .dbfile E:\ICCDemo\Temp_Control\temp_control\time1307.c
 0003           ; }
 0003           ; 
 0003           ; /*中断1s进入，使用int1
 0003           ; #pragma interrupt_handler int_int2:4
 0003           ; void int_int2(void){//做温度数据时间增加操作。不能做耗时的操作
 0003           ; 
 0003           ;   PORTE=~PORTE;
 0003           ;   EIMSK &= ~(0x04);//关中断2
 0003           ;   
 0003           ;   EIMSK |= 0x04;//开中断2  
 0003           ; }*/
 0003           ; 
 0003           ; 
 0003           ; 
