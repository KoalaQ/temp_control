                        .module time1307.c
                        .area text(rom, con, rel)
 0000                   .dbfile time1307.c
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\time1307.c
 0000                   .dbfunc e I2C_start _I2C_start fV
                        .even
 0000           _I2C_start::
 0000                   .dbline -1
 0000                   .dbline 32
 0000           ; #include<iom128v.h>
 0000           ; #include "time1307.h"
 0000           ; #include "delay.h"
 0000           ; #include "lcd.h"
 0000           ; #include "main.h"
 0000           ; //寄存器宏定义
 0000           ; #define SECOND 0x00
 0000           ; #define MINUTE 0x01 
 0000           ; #define HOUR 0x02
 0000           ; #define DAY 0x04
 0000           ; #define MONTH 0x05 
 0000           ; #define WEEK 0x03
 0000           ; #define YEAE 0x06
 0000           ; #define CIBTPOL 0x07 
 0000           ; #define  WRITEDS1307    0xD0
 0000           ; #define     READDS1307    0xD1
 0000           ; 
 0000           ; 
 0000           ; #define  SCL_H  PORTD|=1<<PD0 //
 0000           ; #define  SCL_L  PORTD&=~(1<<PD0) //
 0000           ; #define  SDA_H   PORTD|=1<<PD1 //
 0000           ; #define  SDA_L  PORTD&=~(1<<PD1)  //
 0000           ; /* unsigned char set_rtc_code[7];
 0000           ; unsigned char rtc_address[7]={0x00,0x01,0x02,0x03,0x04,0x05,0x06};
 0000           ; unsigned char read_rtc_code[7];
 0000           ; unsigned char wr_j1j3_code[7];
 0000           ; unsigned char jk[7]={0,0,0,2,0,0,9};//设置时钟初始值*/
 0000           ; 
 0000           ; unsigned  char BP;
 0000           ; 
 0000           ; 
 0000           ; void I2C_start(void){//启动IIC总线
 0000                   .dbline 33
 0000           ;    SDA_H;
 0000 919A              sbi 0x12,1
 0002                   .dbline 34
 0002           ;    SCL_H;
 0002 909A              sbi 0x12,0
 0004                   .dbline 35
 0004           ;    delay_us(8);
 0004 08E0              ldi R16,8
 0006 10E0              ldi R17,0
 0008 0E940000          xcall _delay_us
 000C                   .dbline 36
 000C           ;    SDA_L;
 000C 9198              cbi 0x12,1
 000E                   .dbline 37
 000E           ;    delay_us(8);
 000E 08E0              ldi R16,8
 0010 10E0              ldi R17,0
 0012 0E940000          xcall _delay_us
 0016                   .dbline 38
 0016           ;    SCL_L;
 0016 9098              cbi 0x12,0
 0018                   .dbline -2
 0018           L1:
 0018                   .dbline 0 ; func end
 0018 0895              ret
 001A                   .dbend
 001A                   .dbfunc e I2C_stop _I2C_stop fV
                        .even
 001A           _I2C_stop::
 001A                   .dbline -1
 001A                   .dbline 41
 001A           ;    
 001A           ; }
 001A           ; void I2C_stop(void){//启动IIC总线
 001A                   .dbline 42
 001A           ;    SDA_L;
 001A 9198              cbi 0x12,1
 001C                   .dbline 43
 001C           ;    SCL_H;
 001C 909A              sbi 0x12,0
 001E                   .dbline 44
 001E           ;    delay_us(8);
 001E 08E0              ldi R16,8
 0020 10E0              ldi R17,0
 0022 0E940000          xcall _delay_us
 0026                   .dbline 45
 0026           ;    SDA_H;
 0026 919A              sbi 0x12,1
 0028                   .dbline 46
 0028           ;    delay_us(8);
 0028 08E0              ldi R16,8
 002A 10E0              ldi R17,0
 002C 0E940000          xcall _delay_us
 0030                   .dbline 47
 0030           ;    SCL_L;
 0030 9098              cbi 0x12,0
 0032                   .dbline -2
 0032           L2:
 0032                   .dbline 0 ; func end
 0032 0895              ret
 0034                   .dbend
 0034                   .dbfunc e I2C_send_ack _I2C_send_ack fV
                        .even
 0034           _I2C_send_ack::
 0034                   .dbline -1
 0034                   .dbline 50
 0034           ;    
 0034           ; }
 0034           ; void I2C_send_ack(void){//应答ack
 0034                   .dbline 51
 0034           ;   SDA_L;
 0034 9198              cbi 0x12,1
 0036                   .dbline 52
 0036           ;   SCL_H;
 0036 909A              sbi 0x12,0
 0038                   .dbline 53
 0038           ;   delay_us(8);
 0038 08E0              ldi R16,8
 003A 10E0              ldi R17,0
 003C 0E940000          xcall _delay_us
 0040                   .dbline 54
 0040           ;   SCL_L;
 0040 9098              cbi 0x12,0
 0042                   .dbline -2
 0042           L3:
 0042                   .dbline 0 ; func end
 0042 0895              ret
 0044                   .dbend
 0044                   .dbfunc e I2C_send_noack _I2C_send_noack fV
                        .even
 0044           _I2C_send_noack::
 0044                   .dbline -1
 0044                   .dbline 56
 0044           ; } 
 0044           ; void I2C_send_noack(void){
 0044                   .dbline 57
 0044           ;   SDA_H;
 0044 919A              sbi 0x12,1
 0046                   .dbline 58
 0046           ;   SCL_H;
 0046 909A              sbi 0x12,0
 0048                   .dbline 59
 0048           ;    delay_us(8);
 0048 08E0              ldi R16,8
 004A 10E0              ldi R17,0
 004C 0E940000          xcall _delay_us
 0050                   .dbline 60
 0050           ;    SCL_L;
 0050 9098              cbi 0x12,0
 0052                   .dbline -2
 0052           L4:
 0052                   .dbline 0 ; func end
 0052 0895              ret
 0054                   .dbend
 0054                   .dbfunc e I2C_write_byte _I2C_write_byte fV
 0054           ;              i -> R20
 0054           ;       IIC_data -> R10
                        .even
 0054           _I2C_write_byte::
 0054 AA92              st -y,R10
 0056 4A93              st -y,R20
 0058 A02E              mov R10,R16
 005A                   .dbline -1
 005A                   .dbline 62
 005A           ; }
 005A           ; void I2C_write_byte(unsigned char IIC_data){
 005A                   .dbline 65
 005A           ;    unsigned char i;
 005A           ;   // BP=0;
 005A           ;    for(i=0;i<8;i++){//循环输出数据
 005A 4427              clr R20
 005C 16C0              xjmp L9
 005E           L6:
 005E                   .dbline 65
 005E                   .dbline 66
 005E           ;       SCL_L;
 005E 9098              cbi 0x12,0
 0060                   .dbline 67
 0060           ;          if(((IIC_data<<i)&0x80)){
 0060 0A2D              mov R16,R10
 0062 142F              mov R17,R20
 0064 0E940000          xcall lsl8
 0068 802F              mov R24,R16
 006A 8078              andi R24,128
 006C 11F0              breq L10
 006E           X0:
 006E                   .dbline 67
 006E                   .dbline 68
 006E           ;             SDA_H;
 006E 919A              sbi 0x12,1
 0070                   .dbline 69
 0070           ;          }else{
 0070 01C0              xjmp L11
 0072           L10:
 0072                   .dbline 69
 0072                   .dbline 70
 0072           ;                 SDA_L;
 0072 9198              cbi 0x12,1
 0074                   .dbline 71
 0074           ;          }
 0074           L11:
 0074                   .dbline 72
 0074           ;          delay_us(4);
 0074 04E0              ldi R16,4
 0076 10E0              ldi R17,0
 0078 0E940000          xcall _delay_us
 007C                   .dbline 73
 007C           ;          SCL_H;
 007C 909A              sbi 0x12,0
 007E                   .dbline 74
 007E           ;          delay_us(4);
 007E 04E0              ldi R16,4
 0080 10E0              ldi R17,0
 0082 0E940000          xcall _delay_us
 0086                   .dbline 75
 0086           ;          SCL_L;
 0086 9098              cbi 0x12,0
 0088                   .dbline 76
 0088           ;    }
 0088           L7:
 0088                   .dbline 65
 0088 4395              inc R20
 008A           L9:
 008A                   .dbline 65
 008A 4830              cpi R20,8
 008C 40F3              brlo L6
 008E           X1:
 008E                   .dbline 78
 008E           ;    //读取ACK
 008E           ;    delay_us(4);
 008E 04E0              ldi R16,4
 0090 10E0              ldi R17,0
 0092 0E940000          xcall _delay_us
 0096                   .dbline 79
 0096           ;    DDRD &=~(0x02);//发送完，等待输入信号
 0096 8998              cbi 0x11,1
 0098                   .dbline 80
 0098           ;    delay_us(4);
 0098 04E0              ldi R16,4
 009A 10E0              ldi R17,0
 009C 0E940000          xcall _delay_us
 00A0                   .dbline 81
 00A0           ;    if((PIND&(1<<PD1))){
 00A0 819B              sbis 0x10,1
 00A2 00C0              rjmp L12
 00A4           X2:
 00A4                   .dbline 81
 00A4                   .dbline 83
 00A4           ;     //正常
 00A4           ;    }//读取，如果发送的是noack，
 00A4           L12:
 00A4                   .dbline 84
 00A4           ;    SCL_H;
 00A4 909A              sbi 0x12,0
 00A6                   .dbline 85
 00A6           ;    delay_us(4);
 00A6 04E0              ldi R16,4
 00A8 10E0              ldi R17,0
 00AA 0E940000          xcall _delay_us
 00AE                   .dbline 86
 00AE           ;    SCL_L;
 00AE 9098              cbi 0x12,0
 00B0                   .dbline 87
 00B0           ;    DDRD |=0x02;
 00B0 899A              sbi 0x11,1
 00B2                   .dbline -2
 00B2           L5:
 00B2                   .dbline 0 ; func end
 00B2 4991              ld R20,y+
 00B4 A990              ld R10,y+
 00B6 0895              ret
 00B8                   .dbsym r i 20 c
 00B8                   .dbsym r IIC_data 10 c
 00B8                   .dbend
 00B8                   .dbfunc e I2C_read_byte _I2C_read_byte fc
 00B8           ;              i -> R20
 00B8           ;            dat -> R10
                        .even
 00B8           _I2C_read_byte::
 00B8 AA92              st -y,R10
 00BA 4A93              st -y,R20
 00BC                   .dbline -1
 00BC                   .dbline 89
 00BC           ; }
 00BC           ; unsigned char I2C_read_byte(void){
 00BC                   .dbline 91
 00BC           ;   unsigned char i,dat;
 00BC           ;   DDRD &=~(0x02);
 00BC 8998              cbi 0x11,1
 00BE                   .dbline 92
 00BE           ;   dat=0;
 00BE AA24              clr R10
 00C0                   .dbline 93
 00C0           ;   for (i=0;i<8;i++)
 00C0 4427              clr R20
 00C2 0BC0              xjmp L18
 00C4           L15:
 00C4                   .dbline 94
 00C4           ;     {
 00C4                   .dbline 95
 00C4           ;       dat=dat<<1;
 00C4 AA0C              lsl R10
 00C6                   .dbline 96
 00C6           ;       SCL_H;
 00C6 909A              sbi 0x12,0
 00C8                   .dbline 97
 00C8           ;       delay_us(4);
 00C8 04E0              ldi R16,4
 00CA 10E0              ldi R17,0
 00CC 0E940000          xcall _delay_us
 00D0                   .dbline 98
 00D0           ;      if((PIND&(1<<PD1)))
 00D0 819B              sbis 0x10,1
 00D2 01C0              rjmp L19
 00D4           X3:
 00D4                   .dbline 99
 00D4           ;      {
 00D4                   .dbline 100
 00D4           ;        dat++;
 00D4 A394              inc R10
 00D6                   .dbline 102
 00D6           ;         // PORTE=~PORTE;
 00D6           ;      }
 00D6           L19:
 00D6                   .dbline 103
 00D6           ;        SCL_L;  
 00D6 9098              cbi 0x12,0
 00D8                   .dbline 104
 00D8           ;     }  
 00D8           L16:
 00D8                   .dbline 93
 00D8 4395              inc R20
 00DA           L18:
 00DA                   .dbline 93
 00DA 4830              cpi R20,8
 00DC 98F3              brlo L15
 00DE           X4:
 00DE                   .dbline 105
 00DE           ;   DDRD |=0x02;
 00DE 899A              sbi 0x11,1
 00E0                   .dbline 106
 00E0           ;   return dat;
 00E0 0A2D              mov R16,R10
 00E2                   .dbline -2
 00E2           L14:
 00E2                   .dbline 0 ; func end
 00E2 4991              ld R20,y+
 00E4 A990              ld R10,y+
 00E6 0895              ret
 00E8                   .dbsym r i 20 c
 00E8                   .dbsym r dat 10 c
 00E8                   .dbend
 00E8                   .dbfunc e Write1307 _Write1307 fV
 00E8           ;            dat -> R10
 00E8           ;            add -> R12
                        .even
 00E8           _Write1307::
 00E8 AA92              st -y,R10
 00EA CA92              st -y,R12
 00EC A22E              mov R10,R18
 00EE C02E              mov R12,R16
 00F0                   .dbline -1
 00F0                   .dbline 111
 00F0           ; }
 00F0           ; /***********************************************************************/
 00F0           ; /******************************** DS1307 写数据  ****************/
 00F0           ; void Write1307(unsigned char add,unsigned char dat)
 00F0           ; {
 00F0                   .dbline 112
 00F0           ;   I2C_start();
 00F0 87DF              xcall _I2C_start
 00F2                   .dbline 113
 00F2           ;   I2C_write_byte(WRITEDS1307);
 00F2 00ED              ldi R16,208
 00F4 AFDF              xcall _I2C_write_byte
 00F6                   .dbline 114
 00F6           ;   I2C_write_byte(add);
 00F6 0C2D              mov R16,R12
 00F8 ADDF              xcall _I2C_write_byte
 00FA                   .dbline 115
 00FA           ;   I2C_write_byte(dat);
 00FA 0A2D              mov R16,R10
 00FC ABDF              xcall _I2C_write_byte
 00FE                   .dbline 116
 00FE           ;   I2C_stop();
 00FE 8DDF              xcall _I2C_stop
 0100                   .dbline -2
 0100           L21:
 0100                   .dbline 0 ; func end
 0100 C990              ld R12,y+
 0102 A990              ld R10,y+
 0104 0895              ret
 0106                   .dbsym r dat 10 c
 0106                   .dbsym r add 12 c
 0106                   .dbend
 0106                   .dbfunc e Read1307 _Read1307 fi
 0106           ;            dat -> R10,R11
 0106           ;            add -> R10
                        .even
 0106           _Read1307::
 0106 AA92              st -y,R10
 0108 BA92              st -y,R11
 010A A02E              mov R10,R16
 010C                   .dbline -1
 010C                   .dbline 120
 010C           ; }
 010C           ; /***********************************************************************/
 010C           ; unsigned int Read1307(unsigned char add)
 010C           ; {
 010C                   .dbline 123
 010C           ;   
 010C           ;   unsigned int dat;
 010C           ;   I2C_start();
 010C 79DF              xcall _I2C_start
 010E                   .dbline 124
 010E           ;   I2C_write_byte(WRITEDS1307);
 010E 00ED              ldi R16,208
 0110 A1DF              xcall _I2C_write_byte
 0112                   .dbline 125
 0112           ;   I2C_write_byte(add);
 0112 0A2D              mov R16,R10
 0114 9FDF              xcall _I2C_write_byte
 0116                   .dbline 126
 0116           ;   I2C_start();
 0116 74DF              xcall _I2C_start
 0118                   .dbline 127
 0118           ;   I2C_write_byte(READDS1307);
 0118 01ED              ldi R16,209
 011A 9CDF              xcall _I2C_write_byte
 011C                   .dbline 128
 011C           ;   dat=I2C_read_byte(); 
 011C CDDF              xcall _I2C_read_byte
 011E A02E              mov R10,R16
 0120 BB24              clr R11
 0122                   .dbline 129
 0122           ;   I2C_send_noack();
 0122 90DF              xcall _I2C_send_noack
 0124                   .dbline 130
 0124           ;   I2C_stop();      
 0124 7ADF              xcall _I2C_stop
 0126                   .dbline 131
 0126           ;   return (dat);
 0126 8501              movw R16,R10
 0128                   .dbline -2
 0128           L22:
 0128                   .dbline 0 ; func end
 0128 B990              ld R11,y+
 012A A990              ld R10,y+
 012C 0895              ret
 012E                   .dbsym r dat 10 i
 012E                   .dbsym r add 10 c
 012E                   .dbend
 012E                   .dbfunc e setTime _setTime fV
 012E           ;         second -> R10,R11
 012E           ;         minute -> R22,R23
 012E           ;           hour -> R20,R21
 012E           ;            day -> R14,R15
 012E           ;          month -> R12,R13
 012E           ;           year -> y+10
                        .even
 012E           _setTime::
 012E 0E940000          xcall push_arg4
 0132 0E940000          xcall push_xgsetF0FC
 0136 6901              movw R12,R18
 0138 EE84              ldd R14,y+14
 013A FF84              ldd R15,y+15
 013C 4889              ldd R20,y+16
 013E 5989              ldd R21,y+17
 0140 6A89              ldd R22,y+18
 0142 7B89              ldd R23,y+19
 0144 AC88              ldd R10,y+20
 0146 BD88              ldd R11,y+21
 0148                   .dbline -1
 0148                   .dbline 134
 0148           ;  }
 0148           ; //年、月、日、星期、时、分、秒。星期没有写入
 0148           ; void setTime(uint year,uint month,uint day,uint hour,uint minute,uint second){
 0148                   .dbline 135
 0148           ;    Write1307(0x00,second);//
 0148 2A2D              mov R18,R10
 014A 0027              clr R16
 014C CDDF              xcall _Write1307
 014E                   .dbline 136
 014E           ;    Write1307(0x01,minute);//
 014E 262F              mov R18,R22
 0150 01E0              ldi R16,1
 0152 CADF              xcall _Write1307
 0154                   .dbline 137
 0154           ;    Write1307(0x02,hour);//
 0154 242F              mov R18,R20
 0156 02E0              ldi R16,2
 0158 C7DF              xcall _Write1307
 015A                   .dbline 139
 015A           ;    //Write1307(0x03,0X01);//
 015A           ;    Write1307(0x04,day);//
 015A 2E2D              mov R18,R14
 015C 04E0              ldi R16,4
 015E C4DF              xcall _Write1307
 0160                   .dbline 140
 0160           ;    Write1307(0x05,month);//
 0160 2C2D              mov R18,R12
 0162 05E0              ldi R16,5
 0164 C1DF              xcall _Write1307
 0166                   .dbline 141
 0166           ;    Write1307(0x06,year);
 0166 2A85              ldd R18,y+10
 0168 3B85              ldd R19,y+11
 016A 06E0              ldi R16,6
 016C BDDF              xcall _Write1307
 016E                   .dbline -2
 016E           L23:
 016E                   .dbline 0 ; func end
 016E 0E940000          xcall pop_xgsetF0FC
 0172 2496              adiw R28,4
 0174 0895              ret
 0176                   .dbsym r second 10 i
 0176                   .dbsym r minute 22 i
 0176                   .dbsym r hour 20 i
 0176                   .dbsym r day 14 i
 0176                   .dbsym r month 12 i
 0176                   .dbsym l year 10 i
 0176                   .dbend
 0176                   .dbfunc e Initial_time _Initial_time fV
                        .even
 0176           _Initial_time::
 0176                   .dbline -1
 0176                   .dbline 143
 0176           ; }
 0176           ; void Initial_time(void){//初始化输出、方波、中断
 0176                   .dbline 144
 0176           ;    DDRD|=0x07;
 0176 81B3              in R24,0x11
 0178 8760              ori R24,7
 017A 81BB              out 0x11,R24
 017C                   .dbline 145
 017C           ;    PORTD=0x00;
 017C 2224              clr R2
 017E 22BA              out 0x12,R2
 0180                   .dbline 153
 0180           ;   /* Write1307(0x00,0X00);//
 0180           ;    Write1307(0x01,0X00);//
 0180           ;    Write1307(0x02,0X12);//
 0180           ;    Write1307(0x03,0X01);//
 0180           ;    Write1307(0x04,0X21);//
 0180           ;    Write1307(0x05,0X05);//
 0180           ;    Write1307(0x06,0X15);//*/
 0180           ;     Write1307(0x07,0x10);
 0180 20E1              ldi R18,16
 0182 07E0              ldi R16,7
 0184 B1DF              xcall _Write1307
 0186                   .dbline 155
 0186           ;    
 0186           ;    EIMSK |= 0x04;//开中断2
 0186 89B7              in R24,0x39
 0188 8460              ori R24,4
 018A 89BF              out 0x39,R24
 018C                   .dbline 156
 018C           ;    EICRA |=0x30;
 018C 80916A00          lds R24,106
 0190 8063              ori R24,48
 0192 80936A00          sts 106,R24
 0196                   .dbline -2
 0196           L24:
 0196                   .dbline 0 ; func end
 0196 0895              ret
 0198                   .dbend
 0198                   .dbfunc e showTime_page _showTime_page fV
 0198           ;     time_cacah -> R20
 0198           ;              y -> R10,R11
                        .even
 0198           _showTime_page::
 0198 0E940000          xcall push_xgset303C
 019C 5801              movw R10,R16
 019E                   .dbline -1
 019E                   .dbline 160
 019E           ;    
 019E           ; }
 019E           ; //显示时间，年月日时分秒，用于page调用。没有改变AC，会接着写
 019E           ; void showTime_page(uint y){
 019E                   .dbline 164
 019E           ;    //PORTE=~Read1302(0x81);
 019E           ;    uchar time_cacah;
 019E           ;  //年
 019E           ;     time_cacah=Read1307(0x06);
 019E 06E0              ldi R16,6
 01A0 B2DF              xcall _Read1307
 01A2 402F              mov R20,R16
 01A4                   .dbline 165
 01A4           ;     lcd_write_str_con(y, "20");
 01A4 20E0              ldi R18,<L26
 01A6 30E0              ldi R19,>L26
 01A8 0A2D              mov R16,R10
 01AA 0E940000          xcall _lcd_write_str_con
 01AE                   .dbline 166
 01AE           ;     lcd_write_char_con(y, 0x30|((time_cacah>>4)&0x0F));
 01AE 242F              mov R18,R20
 01B0 2295              swap R18
 01B2 2F70              andi R18,#0x0F
 01B4 2F70              andi R18,15
 01B6 2063              ori R18,48
 01B8 0A2D              mov R16,R10
 01BA 0E940000          xcall _lcd_write_char_con
 01BE                   .dbline 167
 01BE           ;     lcd_write_char_con(y,0x30|(time_cacah&0x0F)); 
 01BE 242F              mov R18,R20
 01C0 2F70              andi R18,15
 01C2 2063              ori R18,48
 01C4 0A2D              mov R16,R10
 01C6 0E940000          xcall _lcd_write_char_con
 01CA                   .dbline 168
 01CA           ;       lcd_write_char_con(y,'-');
 01CA 2DE2              ldi R18,45
 01CC 0A2D              mov R16,R10
 01CE 0E940000          xcall _lcd_write_char_con
 01D2                   .dbline 170
 01D2           ;        //月
 01D2           ;        time_cacah=Read1307(0x05);
 01D2 05E0              ldi R16,5
 01D4 98DF              xcall _Read1307
 01D6 402F              mov R20,R16
 01D8                   .dbline 171
 01D8           ;        lcd_write_char_con(y, 0x30|((time_cacah>>4)&0x01));
 01D8 242F              mov R18,R20
 01DA 2295              swap R18
 01DC 2F70              andi R18,#0x0F
 01DE 2170              andi R18,1
 01E0 2063              ori R18,48
 01E2 0A2D              mov R16,R10
 01E4 0E940000          xcall _lcd_write_char_con
 01E8                   .dbline 172
 01E8           ;      lcd_write_char_con(y,0x30|(time_cacah&0x0F)); 
 01E8 242F              mov R18,R20
 01EA 2F70              andi R18,15
 01EC 2063              ori R18,48
 01EE 0A2D              mov R16,R10
 01F0 0E940000          xcall _lcd_write_char_con
 01F4                   .dbline 173
 01F4           ;        lcd_write_char_con(y,'-');
 01F4 2DE2              ldi R18,45
 01F6 0A2D              mov R16,R10
 01F8 0E940000          xcall _lcd_write_char_con
 01FC                   .dbline 175
 01FC           ;        //日
 01FC           ;        time_cacah=Read1307(0x04);
 01FC 04E0              ldi R16,4
 01FE 83DF              xcall _Read1307
 0200 6801              movw R12,R16
 0202 4C2D              mov R20,R12
 0204                   .dbline 176
 0204           ;        lcd_write_char_con(y, 0x30|((time_cacah>>4)&0x03));
 0204 242F              mov R18,R20
 0206 2295              swap R18
 0208 2F70              andi R18,#0x0F
 020A 2370              andi R18,3
 020C 2063              ori R18,48
 020E 0A2D              mov R16,R10
 0210 0E940000          xcall _lcd_write_char_con
 0214                   .dbline 177
 0214           ;      lcd_write_char_con(y,0x30|(time_cacah&0x0F)); 
 0214 242F              mov R18,R20
 0216 2F70              andi R18,15
 0218 2063              ori R18,48
 021A 0A2D              mov R16,R10
 021C 0E940000          xcall _lcd_write_char_con
 0220                   .dbline 178
 0220           ;        lcd_write_char_con(y,' ');
 0220 20E2              ldi R18,32
 0222 0A2D              mov R16,R10
 0224 0E940000          xcall _lcd_write_char_con
 0228                   .dbline 180
 0228           ;       //时
 0228           ;       time_cacah=Read1307(0x02);
 0228 02E0              ldi R16,2
 022A 6DDF              xcall _Read1307
 022C 6801              movw R12,R16
 022E 4C2D              mov R20,R12
 0230                   .dbline 181
 0230           ;        lcd_write_char_con(y, 0x30|((time_cacah>>4)&0x03));
 0230 242F              mov R18,R20
 0232 2295              swap R18
 0234 2F70              andi R18,#0x0F
 0236 2370              andi R18,3
 0238 2063              ori R18,48
 023A 0A2D              mov R16,R10
 023C 0E940000          xcall _lcd_write_char_con
 0240                   .dbline 182
 0240           ;        lcd_write_char_con(y,0x30|(time_cacah&0x0F)); 
 0240 242F              mov R18,R20
 0242 2F70              andi R18,15
 0244 2063              ori R18,48
 0246 0A2D              mov R16,R10
 0248 0E940000          xcall _lcd_write_char_con
 024C                   .dbline 183
 024C           ;        lcd_write_char_con(y,':');
 024C 2AE3              ldi R18,58
 024E 0A2D              mov R16,R10
 0250 0E940000          xcall _lcd_write_char_con
 0254                   .dbline 185
 0254           ;       //分
 0254           ;       time_cacah=Read1307(0x01);
 0254 01E0              ldi R16,1
 0256 57DF              xcall _Read1307
 0258 6801              movw R12,R16
 025A 4C2D              mov R20,R12
 025C                   .dbline 186
 025C           ;        lcd_write_char_con(y, 0x30|time_cacah>>4);
 025C 242F              mov R18,R20
 025E 2295              swap R18
 0260 2F70              andi R18,#0x0F
 0262 2063              ori R18,48
 0264 0A2D              mov R16,R10
 0266 0E940000          xcall _lcd_write_char_con
 026A                   .dbline 187
 026A           ;        lcd_write_char_con(y,0x30|(time_cacah&0x0F));
 026A 242F              mov R18,R20
 026C 2F70              andi R18,15
 026E 2063              ori R18,48
 0270 0A2D              mov R16,R10
 0272 0E940000          xcall _lcd_write_char_con
 0276                   .dbline 188
 0276           ;        lcd_write_char_con(y,':');
 0276 2AE3              ldi R18,58
 0278 0A2D              mov R16,R10
 027A 0E940000          xcall _lcd_write_char_con
 027E                   .dbline 190
 027E           ;       //秒
 027E           ;       time_cacah=Read1307(0x00);
 027E 0027              clr R16
 0280 42DF              xcall _Read1307
 0282 6801              movw R12,R16
 0284 4C2D              mov R20,R12
 0286                   .dbline 191
 0286           ;        lcd_write_char_con(y, 0x30|(time_cacah>>4));
 0286 242F              mov R18,R20
 0288 2295              swap R18
 028A 2F70              andi R18,#0x0F
 028C 2063              ori R18,48
 028E 0A2D              mov R16,R10
 0290 0E940000          xcall _lcd_write_char_con
 0294                   .dbline 192
 0294           ;        lcd_write_char_con(y,0x30|(time_cacah &0x0F));
 0294 242F              mov R18,R20
 0296 2F70              andi R18,15
 0298 2063              ori R18,48
 029A 0A2D              mov R16,R10
 029C 0E940000          xcall _lcd_write_char_con
 02A0                   .dbline -2
 02A0           L25:
 02A0                   .dbline 0 ; func end
 02A0 0C940000          xjmp pop_xgset303C
 02A4                   .dbsym r time_cacah 20 c
 02A4                   .dbsym r y 10 i
 02A4                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\time1307.c
 0000           _BP::
 0000                   .blkb 1
 0001                   .dbsym e BP _BP c
                        .area data(ram, con, rel)
 0000                   .dbfile E:\ICCDemo\Temp_Control\temp_control\time1307.c
 0000           L26:
 0000                   .blkb 3
                        .area idata
 0000 323000            .byte 50,48,0
                        .area data(ram, con, rel)
 0003                   .dbfile E:\ICCDemo\Temp_Control\temp_control\time1307.c
 0003           ; }
 0003           ; 
 0003           ; 
 0003           ; 
